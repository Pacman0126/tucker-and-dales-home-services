[2025-09-21 19:56:33,961] INFO django Deleted old RegisteredCustomer records.
[2025-09-21 20:01:47,700] INFO django Deleted old RegisteredCustomer records.
[2025-09-21 20:04:35,831] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-21 20:06:28,305] INFO django.utils.autoreload C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\tucker_and_dales_home_services\settings.py changed, reloading.
[2025-09-21 20:06:29,012] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-21 20:06:45,535] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-21 20:07:19,026] INFO django.server "GET / HTTP/1.1" 200 841
[2025-09-21 20:07:19,188] WARNING django.request Not Found: /favicon.ico
[2025-09-21 20:07:19,194] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2357
[2025-09-21 20:07:22,338] INFO django.server "GET / HTTP/1.1" 200 841
[2025-09-21 20:07:22,506] WARNING django.request Not Found: /favicon.ico
[2025-09-21 20:07:22,507] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2357
[2025-09-21 20:08:16,223] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-21 20:14:28,406] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-21 20:14:54,528] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-21 20:18:36,418] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-21 20:20:20,080] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-21 20:22:43,497] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-21 20:28:31,503] INFO django.utils.autoreload C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\tucker_and_dales_home_services\settings.py changed, reloading.
[2025-09-21 20:28:31,707] INFO django.utils.autoreload C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\tucker_and_dales_home_services\settings.py changed, reloading.
[2025-09-21 20:28:31,823] INFO django.utils.autoreload C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\tucker_and_dales_home_services\settings.py changed, reloading.
[2025-09-21 20:28:32,128] INFO django.utils.autoreload C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\tucker_and_dales_home_services\settings.py changed, reloading.
[2025-09-21 20:28:32,144] INFO django.utils.autoreload C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\tucker_and_dales_home_services\settings.py changed, reloading.
[2025-09-21 20:29:35,763] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-21 20:29:35,765] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-21 20:30:07,992] INFO django.server "GET / HTTP/1.1" 200 841
[2025-09-21 20:30:13,117] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-21 18:30:13.115282' AND "django_session"."session_key" = 'h7pekm8i1dv75l3e841ezyom7fr03r8r') LIMIT 21; args=('2025-09-21 18:30:13.115282', 'h7pekm8i1dv75l3e841ezyom7fr03r8r'); alias=default
[2025-09-21 20:30:13,127] INFO django.server "GET /admin/ HTTP/1.1" 302 0
[2025-09-21 20:30:13,168] INFO django.server "GET /admin/login/?next=/admin/ HTTP/1.1" 200 4181
[2025-09-21 20:30:13,272] INFO django.server "GET /static/admin/css/nav_sidebar.css HTTP/1.1" 200 2694
[2025-09-21 20:30:13,273] INFO django.server "GET /static/admin/css/dark_mode.css HTTP/1.1" 200 2929
[2025-09-21 20:30:13,274] INFO django.server "GET /static/admin/css/base.css HTTP/1.1" 200 21310
[2025-09-21 20:30:13,284] INFO django.server "GET /static/admin/css/login.css HTTP/1.1" 200 958
[2025-09-21 20:30:13,284] INFO django.server "GET /static/admin/js/theme.js HTTP/1.1" 200 1943
[2025-09-21 20:30:13,285] INFO django.server "GET /static/admin/css/responsive.css HTTP/1.1" 200 18559
[2025-09-21 20:30:13,288] INFO django.server "GET /static/admin/js/nav_sidebar.js HTTP/1.1" 200 3063
[2025-09-21 20:30:17,464] INFO django.server "GET /customers HTTP/1.1" 301 0
[2025-09-21 20:30:17,469] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-21 20:30:17,475] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC; args=(); alias=default
[2025-09-21 20:30:17,518] INFO django.server "GET /customers/ HTTP/1.1" 200 27990
[2025-09-21 20:30:45,341] INFO django.server "GET /customers/new HTTP/1.1" 301 0
[2025-09-21 20:30:45,352] INFO django.server "GET /customers/new/ HTTP/1.1" 200 2450
[2025-09-21 20:30:56,078] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-21 20:30:56,079] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC; args=(); alias=default
[2025-09-21 20:30:56,098] INFO django.server "GET /customers/ HTTP/1.1" 200 27990
[2025-09-21 20:35:02,303] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-21 20:35:02,366] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-21 20:35:02,369] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-21 20:35:06,001] INFO django.server "GET / HTTP/1.1" 200 841
[2025-09-21 20:44:20,523] INFO django.server "GET / HTTP/1.1" 200 841
[2025-09-21 20:45:14,004] INFO django.server "GET / HTTP/1.1" 200 841
[2025-09-21 20:45:14,140] WARNING django.request Not Found: /favicon.ico
[2025-09-21 20:45:14,141] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2357
[2025-09-21 20:48:25,633] INFO django.utils.autoreload C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\tucker_and_dales_home_services\settings.py changed, reloading.
[2025-09-21 20:48:26,217] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-21 20:48:47,718] INFO core.views Home page accessed
[2025-09-21 20:48:47,728] INFO django.server "GET / HTTP/1.1" 200 841
[2025-09-21 20:48:47,882] WARNING django.request Not Found: /favicon.ico
[2025-09-21 20:48:47,883] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2357
[2025-09-21 20:52:02,785] INFO django.utils.autoreload C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\tucker_and_dales_home_services\settings.py changed, reloading.
[2025-09-21 20:52:03,428] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-21 20:52:03,489] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-21 20:52:03,492] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-21 20:52:22,530] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-21 20:52:22,590] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-21 20:52:22,592] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-21 20:52:28,116] INFO core.views Home page accessed
[2025-09-21 20:52:28,126] INFO django.server "GET / HTTP/1.1" 200 841
[2025-09-21 20:54:45,556] ERROR core.views Test error log from shell
[2025-09-21 21:03:08,961] INFO django.utils.autoreload C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\customers\forms.py changed, reloading.
[2025-09-21 21:03:09,690] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-21 21:07:50,220] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-21 21:18:30,399] INFO django.utils.autoreload C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\customers\views.py changed, reloading.
[2025-09-21 21:18:31,031] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-21 21:18:31,122] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-21 21:18:31,128] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-21 21:18:31,130] INFO django.utils.autoreload C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\customers\views.py changed, reloading.
[2025-09-21 21:18:31,926] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-21 21:18:32,001] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-21 21:18:32,004] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-21 21:18:41,285] INFO core.views Home page accessed
[2025-09-21 21:18:41,292] INFO django.server "GET / HTTP/1.1" 200 899
[2025-09-21 21:18:41,435] WARNING django.request Not Found: /favicon.ico
[2025-09-21 21:18:41,436] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2357
[2025-09-21 21:18:43,685] INFO customers.views Customer list accessed
[2025-09-21 21:18:43,699] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 21; args=(); alias=default
[2025-09-21 21:18:43,700] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 21; args=(); alias=default
[2025-09-21 21:18:43,701] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 21; args=(); alias=default
[2025-09-21 21:18:43,702] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 21; args=(); alias=default
[2025-09-21 21:18:43,703] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 21; args=(); alias=default
[2025-09-21 21:18:43,704] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 21; args=(); alias=default
[2025-09-21 21:18:43,705] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 21; args=(); alias=default
[2025-09-21 21:18:43,707] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 21; args=(); alias=default
[2025-09-21 21:18:43,708] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 21; args=(); alias=default
[2025-09-21 21:18:43,709] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 21; args=(); alias=default
[2025-09-21 21:18:43,710] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 21; args=(); alias=default
[2025-09-21 21:18:43,711] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 21; args=(); alias=default
[2025-09-21 21:18:43,712] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 21; args=(); alias=default
[2025-09-21 21:18:43,713] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 21; args=(); alias=default
[2025-09-21 21:18:43,753] ERROR django.request Internal Server Error: /customers/
Traceback (most recent call last):
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\backends\django.py", line 61, in render
    return self.template.render(context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 175, in render
    return self._render(context)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 167, in _render
    return self.nodelist.render(context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 1005, in render
    return SafeString("".join([node.render_annotated(context) for node in self]))
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 966, in render_annotated
    return self.render(context)
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader_tags.py", line 132, in render
    compiled_parent = self.get_parent(context)
                      ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader_tags.py", line 129, in get_parent
    return self.find_template(parent, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader_tags.py", line 107, in find_template
    template, origin = context.template.engine.find_template(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\engine.py", line 161, in find_template
    raise TemplateDoesNotExist(name, tried=tried)
django.template.exceptions.TemplateDoesNotExist: base.html

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\customers\views.py", line 13, in customer_list
    return render(request, "customers/customer_list.html", {"customers": customers})
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\shortcuts.py", line 24, in render
    content = loader.render_to_string(template_name, context, request, using=using)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader.py", line 62, in render_to_string
    return template.render(context, request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\backends\django.py", line 63, in render
    reraise(exc, self.backend)
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\backends\django.py", line 84, in reraise
    raise new from exc
django.template.exceptions.TemplateDoesNotExist: base.html
[2025-09-21 21:18:43,760] ERROR django.server "GET /customers/ HTTP/1.1" 500 145875
[2025-09-21 21:23:52,187] INFO django.utils.autoreload C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\tucker_and_dales_home_services\settings.py changed, reloading.
[2025-09-21 21:23:52,822] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-21 21:23:52,885] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-21 21:23:52,889] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-21 21:23:53,088] INFO django.utils.autoreload C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\tucker_and_dales_home_services\settings.py changed, reloading.
[2025-09-21 21:23:53,595] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-21 21:23:53,661] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-21 21:23:53,664] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-21 21:24:12,939] INFO customers.views Customer list accessed
[2025-09-21 21:24:12,978] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 21; args=(); alias=default
[2025-09-21 21:24:12,979] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 21; args=(); alias=default
[2025-09-21 21:24:12,980] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 21; args=(); alias=default
[2025-09-21 21:24:12,981] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 21; args=(); alias=default
[2025-09-21 21:24:12,982] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 21; args=(); alias=default
[2025-09-21 21:24:12,982] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 21; args=(); alias=default
[2025-09-21 21:24:12,983] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 21; args=(); alias=default
[2025-09-21 21:24:12,984] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 21; args=(); alias=default
[2025-09-21 21:24:12,985] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 21; args=(); alias=default
[2025-09-21 21:24:12,986] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 21; args=(); alias=default
[2025-09-21 21:24:12,987] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 21; args=(); alias=default
[2025-09-21 21:24:12,988] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 21; args=(); alias=default
[2025-09-21 21:24:12,989] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 21; args=(); alias=default
[2025-09-21 21:24:12,989] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 21; args=(); alias=default
[2025-09-21 21:24:13,030] ERROR django.request Internal Server Error: /customers/
Traceback (most recent call last):
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\backends\django.py", line 61, in render
    return self.template.render(context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 175, in render
    return self._render(context)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 167, in _render
    return self.nodelist.render(context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 1005, in render
    return SafeString("".join([node.render_annotated(context) for node in self]))
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 966, in render_annotated
    return self.render(context)
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader_tags.py", line 132, in render
    compiled_parent = self.get_parent(context)
                      ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader_tags.py", line 129, in get_parent
    return self.find_template(parent, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader_tags.py", line 107, in find_template
    template, origin = context.template.engine.find_template(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\engine.py", line 161, in find_template
    raise TemplateDoesNotExist(name, tried=tried)
django.template.exceptions.TemplateDoesNotExist: base.html

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\customers\views.py", line 13, in customer_list
    return render(request, "customers/customer_list.html", {"customers": customers})
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\shortcuts.py", line 24, in render
    content = loader.render_to_string(template_name, context, request, using=using)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader.py", line 62, in render_to_string
    return template.render(context, request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\backends\django.py", line 63, in render
    reraise(exc, self.backend)
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\backends\django.py", line 84, in reraise
    raise new from exc
django.template.exceptions.TemplateDoesNotExist: base.html
[2025-09-21 21:24:13,036] ERROR django.server "GET /customers/ HTTP/1.1" 500 147043
[2025-09-21 21:24:13,193] WARNING django.request Not Found: /favicon.ico
[2025-09-21 21:24:13,193] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2357
[2025-09-21 21:24:32,332] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-21 21:24:32,388] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-21 21:24:32,390] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-21 21:24:34,101] INFO core.views Home page accessed
[2025-09-21 21:24:34,159] ERROR django.request Internal Server Error: /
Traceback (most recent call last):
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\backends\django.py", line 61, in render
    return self.template.render(context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 175, in render
    return self._render(context)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 167, in _render
    return self.nodelist.render(context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 1005, in render
    return SafeString("".join([node.render_annotated(context) for node in self]))
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 966, in render_annotated
    return self.render(context)
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader_tags.py", line 132, in render
    compiled_parent = self.get_parent(context)
                      ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader_tags.py", line 129, in get_parent
    return self.find_template(parent, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader_tags.py", line 107, in find_template
    template, origin = context.template.engine.find_template(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\engine.py", line 161, in find_template
    raise TemplateDoesNotExist(name, tried=tried)
django.template.exceptions.TemplateDoesNotExist: core/base.html

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\core\views.py", line 10, in home
    return render(request, "core/home.html")
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\shortcuts.py", line 24, in render
    content = loader.render_to_string(template_name, context, request, using=using)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader.py", line 62, in render_to_string
    return template.render(context, request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\backends\django.py", line 63, in render
    reraise(exc, self.backend)
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\backends\django.py", line 84, in reraise
    raise new from exc
django.template.exceptions.TemplateDoesNotExist: core/base.html
[2025-09-21 21:24:34,166] ERROR django.server "GET / HTTP/1.1" 500 132846
[2025-09-21 21:36:31,884] INFO core.views Home page accessed
[2025-09-21 21:36:31,942] ERROR django.request Internal Server Error: /
Traceback (most recent call last):
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\backends\django.py", line 61, in render
    return self.template.render(context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 175, in render
    return self._render(context)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 167, in _render
    return self.nodelist.render(context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 1005, in render
    return SafeString("".join([node.render_annotated(context) for node in self]))
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 966, in render_annotated
    return self.render(context)
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader_tags.py", line 132, in render
    compiled_parent = self.get_parent(context)
                      ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader_tags.py", line 129, in get_parent
    return self.find_template(parent, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader_tags.py", line 107, in find_template
    template, origin = context.template.engine.find_template(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\engine.py", line 161, in find_template
    raise TemplateDoesNotExist(name, tried=tried)
django.template.exceptions.TemplateDoesNotExist: core/base.html

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\core\views.py", line 10, in home
    return render(request, "core/home.html")
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\shortcuts.py", line 24, in render
    content = loader.render_to_string(template_name, context, request, using=using)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader.py", line 62, in render_to_string
    return template.render(context, request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\backends\django.py", line 63, in render
    reraise(exc, self.backend)
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\backends\django.py", line 84, in reraise
    raise new from exc
django.template.exceptions.TemplateDoesNotExist: core/base.html
[2025-09-21 21:36:31,948] ERROR django.server "GET / HTTP/1.1" 500 132846
[2025-09-21 21:36:34,195] INFO core.views Home page accessed
[2025-09-21 21:36:34,228] ERROR django.request Internal Server Error: /
Traceback (most recent call last):
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\backends\django.py", line 61, in render
    return self.template.render(context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 175, in render
    return self._render(context)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 167, in _render
    return self.nodelist.render(context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 1005, in render
    return SafeString("".join([node.render_annotated(context) for node in self]))
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 966, in render_annotated
    return self.render(context)
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader_tags.py", line 132, in render
    compiled_parent = self.get_parent(context)
                      ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader_tags.py", line 129, in get_parent
    return self.find_template(parent, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader_tags.py", line 107, in find_template
    template, origin = context.template.engine.find_template(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\engine.py", line 161, in find_template
    raise TemplateDoesNotExist(name, tried=tried)
django.template.exceptions.TemplateDoesNotExist: core/base.html

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\core\views.py", line 10, in home
    return render(request, "core/home.html")
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\shortcuts.py", line 24, in render
    content = loader.render_to_string(template_name, context, request, using=using)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader.py", line 62, in render_to_string
    return template.render(context, request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\backends\django.py", line 63, in render
    reraise(exc, self.backend)
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\backends\django.py", line 84, in reraise
    raise new from exc
django.template.exceptions.TemplateDoesNotExist: core/base.html
[2025-09-21 21:36:34,233] ERROR django.server "GET / HTTP/1.1" 500 132983
[2025-09-21 21:36:36,972] INFO core.views Home page accessed
[2025-09-21 21:36:37,001] ERROR django.request Internal Server Error: /
Traceback (most recent call last):
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\backends\django.py", line 61, in render
    return self.template.render(context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 175, in render
    return self._render(context)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 167, in _render
    return self.nodelist.render(context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 1005, in render
    return SafeString("".join([node.render_annotated(context) for node in self]))
                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 966, in render_annotated
    return self.render(context)
           ^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader_tags.py", line 132, in render
    compiled_parent = self.get_parent(context)
                      ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader_tags.py", line 129, in get_parent
    return self.find_template(parent, context)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader_tags.py", line 107, in find_template
    template, origin = context.template.engine.find_template(
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\engine.py", line 161, in find_template
    raise TemplateDoesNotExist(name, tried=tried)
django.template.exceptions.TemplateDoesNotExist: core/base.html

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\core\views.py", line 10, in home
    return render(request, "core/home.html")
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\shortcuts.py", line 24, in render
    content = loader.render_to_string(template_name, context, request, using=using)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader.py", line 62, in render_to_string
    return template.render(context, request)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\backends\django.py", line 63, in render
    reraise(exc, self.backend)
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\backends\django.py", line 84, in reraise
    raise new from exc
django.template.exceptions.TemplateDoesNotExist: core/base.html
[2025-09-21 21:36:37,005] ERROR django.server "GET / HTTP/1.1" 500 133111
[2025-09-21 21:36:37,167] WARNING django.request Not Found: /favicon.ico
[2025-09-21 21:36:37,168] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2357
[2025-09-21 21:39:27,555] INFO core.views Home page accessed
[2025-09-21 21:39:27,559] INFO django.server "GET / HTTP/1.1" 200 899
[2025-09-21 21:39:27,863] WARNING django.request Not Found: /favicon.ico
[2025-09-21 21:39:27,864] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2357
[2025-09-21 21:39:31,092] INFO customers.views Customer list accessed
[2025-09-21 21:39:31,095] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC; args=(); alias=default
[2025-09-21 21:39:31,121] INFO django.server "GET /customers/ HTTP/1.1" 200 77479
[2025-09-21 21:40:01,254] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 101 LIMIT 21; args=(101,); alias=default
[2025-09-21 21:40:01,256] INFO django.server "GET /customers/101/ HTTP/1.1" 200 1182
[2025-09-21 21:40:06,207] INFO customers.views Customer list accessed
[2025-09-21 21:40:06,209] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC; args=(); alias=default
[2025-09-21 21:40:06,235] INFO django.server "GET /customers/ HTTP/1.1" 200 77479
[2025-09-21 21:45:18,213] INFO django.utils.autoreload C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\customers\views.py changed, reloading.
[2025-09-21 21:45:18,284] INFO django.utils.autoreload C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\customers\views.py changed, reloading.
[2025-09-21 21:45:18,896] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-21 21:45:18,963] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-21 21:45:18,963] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-21 21:45:18,966] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-21 21:45:19,040] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-21 21:45:19,044] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-21 21:45:25,128] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 21; args=(); alias=default
[2025-09-21 21:45:25,129] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 21; args=(); alias=default
[2025-09-21 21:45:25,130] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 21; args=(); alias=default
[2025-09-21 21:45:25,131] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 21; args=(); alias=default
[2025-09-21 21:45:25,132] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 21; args=(); alias=default
[2025-09-21 21:45:25,177] ERROR django.request Internal Server Error: /customers/
Traceback (most recent call last):
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\customers\views.py", line 29, in customer_list
    return render(
           ^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\shortcuts.py", line 24, in render
    content = loader.render_to_string(template_name, context, request, using=using)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader.py", line 15, in get_template
    return engine.get_template(template_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\backends\django.py", line 33, in get_template
    return Template(self.engine.get_template(template_name), self)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\engine.py", line 175, in get_template
    template, origin = self.find_template(template_name)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\engine.py", line 157, in find_template
    template = loader.get_template(name, skip=skip)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loaders\cached.py", line 57, in get_template
    template = super().get_template(template_name, skip)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loaders\base.py", line 28, in get_template
    return Template(
           ^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 154, in __init__
    self.nodelist = self.compile_nodelist()
                    ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 200, in compile_nodelist
    return parser.parse()
           ^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 513, in parse
    raise self.error(token, e)
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 511, in parse
    compiled_result = compile_func(self, token)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader_tags.py", line 293, in do_extends
    nodelist = parser.parse()
               ^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 513, in parse
    raise self.error(token, e)
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 511, in parse
    compiled_result = compile_func(self, token)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader_tags.py", line 226, in do_block
    raise TemplateSyntaxError(
django.template.exceptions.TemplateSyntaxError: 'block' tag with name 'content' appears more than once
[2025-09-21 21:45:25,183] ERROR django.server "GET /customers/ HTTP/1.1" 500 184486
[2025-09-21 21:45:25,366] WARNING django.request Not Found: /favicon.ico
[2025-09-21 21:45:25,367] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2357
[2025-09-21 21:48:52,544] INFO django.utils.autoreload C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\customers\views.py changed, reloading.
[2025-09-21 21:48:53,202] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-21 21:48:53,246] INFO django.utils.autoreload C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\customers\views.py changed, reloading.
[2025-09-21 21:48:53,965] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-21 21:54:47,883] INFO django.utils.autoreload C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\customers\views.py changed, reloading.
[2025-09-21 21:54:48,239] INFO django.utils.autoreload C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\customers\views.py changed, reloading.
[2025-09-21 21:54:48,516] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-21 21:54:48,916] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-21 21:57:45,662] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-21 22:05:19,422] INFO django.utils.autoreload C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\customers\views.py changed, reloading.
[2025-09-21 22:05:19,934] INFO django.utils.autoreload C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\customers\views.py changed, reloading.
[2025-09-21 22:05:20,183] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-21 22:05:20,260] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-21 22:05:20,262] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-21 22:05:20,564] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-21 22:05:20,632] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-21 22:05:20,636] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-21 22:05:26,567] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-21 22:05:26,582] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-21 22:05:26,589] INFO django.server "GET /customers/ HTTP/1.1" 200 7675
[2025-09-21 22:05:26,706] WARNING django.request Not Found: /favicon.ico
[2025-09-21 22:05:26,708] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2357
[2025-09-21 22:06:01,426] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%None%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%None%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%None%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%None%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%None%' ESCAPE '\'); args=('%None%', '%None%', '%None%', '%None%', '%None%'); alias=default
[2025-09-21 22:06:01,426] INFO customers.views Search performed: None -> 0 results
[2025-09-21 22:06:01,428] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%None%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%None%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%None%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%None%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%None%' ESCAPE '\'); args=('%None%', '%None%', '%None%', '%None%', '%None%'); alias=default
[2025-09-21 22:06:01,429] INFO django.server "GET /customers/?q=None&page=2 HTTP/1.1" 200 1370
[2025-09-21 22:06:18,255] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Denton%' ESCAPE '\'); args=('%Denton%', '%Denton%', '%Denton%', '%Denton%', '%Denton%'); alias=default
[2025-09-21 22:06:18,255] INFO customers.views Search performed: Denton -> 0 results
[2025-09-21 22:06:18,256] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Denton%' ESCAPE '\'); args=('%Denton%', '%Denton%', '%Denton%', '%Denton%', '%Denton%'); alias=default
[2025-09-21 22:06:18,257] INFO django.server "GET /customers/?q=Denton HTTP/1.1" 200 1372
[2025-09-21 22:06:25,372] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Dallas%' ESCAPE '\'); args=('%Dallas%', '%Dallas%', '%Dallas%', '%Dallas%', '%Dallas%'); alias=default
[2025-09-21 22:06:25,372] INFO customers.views Search performed: Dallas -> 180 results
[2025-09-21 22:06:25,373] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Dallas%' ESCAPE '\'); args=('%Dallas%', '%Dallas%', '%Dallas%', '%Dallas%', '%Dallas%'); alias=default
[2025-09-21 22:06:25,374] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Dallas%' ESCAPE '\') ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=('%Dallas%', '%Dallas%', '%Dallas%', '%Dallas%', '%Dallas%'); alias=default
[2025-09-21 22:06:25,377] INFO django.server "GET /customers/?q=Dallas HTTP/1.1" 200 7687
[2025-09-21 22:06:32,418] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Dallas%' ESCAPE '\'); args=('%Dallas%', '%Dallas%', '%Dallas%', '%Dallas%', '%Dallas%'); alias=default
[2025-09-21 22:06:32,418] INFO customers.views Search performed: Dallas -> 180 results
[2025-09-21 22:06:32,419] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Dallas%' ESCAPE '\'); args=('%Dallas%', '%Dallas%', '%Dallas%', '%Dallas%', '%Dallas%'); alias=default
[2025-09-21 22:06:32,420] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Dallas%' ESCAPE '\') ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12 OFFSET 12; args=('%Dallas%', '%Dallas%', '%Dallas%', '%Dallas%', '%Dallas%'); alias=default
[2025-09-21 22:06:32,425] INFO django.server "GET /customers/?q=Dallas&page=2 HTTP/1.1" 200 7753
[2025-09-21 22:06:36,649] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Dallas%' ESCAPE '\'); args=('%Dallas%', '%Dallas%', '%Dallas%', '%Dallas%', '%Dallas%'); alias=default
[2025-09-21 22:06:36,649] INFO customers.views Search performed: Dallas -> 180 results
[2025-09-21 22:06:36,649] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Dallas%' ESCAPE '\'); args=('%Dallas%', '%Dallas%', '%Dallas%', '%Dallas%', '%Dallas%'); alias=default
[2025-09-21 22:06:36,651] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Dallas%' ESCAPE '\') ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12 OFFSET 24; args=('%Dallas%', '%Dallas%', '%Dallas%', '%Dallas%', '%Dallas%'); alias=default
[2025-09-21 22:06:36,653] INFO django.server "GET /customers/?q=Dallas&page=3 HTTP/1.1" 200 7901
[2025-09-21 22:06:48,941] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Flower Mound%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Flower Mound%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Flower Mound%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Flower Mound%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Flower Mound%' ESCAPE '\'); args=('%Flower Mound%', '%Flower Mound%', '%Flower Mound%', '%Flower Mound%', '%Flower Mound%'); alias=default
[2025-09-21 22:06:48,941] INFO customers.views Search performed: Flower Mound -> 0 results
[2025-09-21 22:06:48,942] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Flower Mound%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Flower Mound%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Flower Mound%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Flower Mound%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Flower Mound%' ESCAPE '\'); args=('%Flower Mound%', '%Flower Mound%', '%Flower Mound%', '%Flower Mound%', '%Flower Mound%'); alias=default
[2025-09-21 22:06:48,943] INFO django.server "GET /customers/?q=Flower+Mound HTTP/1.1" 200 1378
[2025-09-21 22:07:04,332] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Irving%' ESCAPE '\'); args=('%Irving%', '%Irving%', '%Irving%', '%Irving%', '%Irving%'); alias=default
[2025-09-21 22:07:04,332] INFO customers.views Search performed: Irving -> 0 results
[2025-09-21 22:07:04,334] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Irving%' ESCAPE '\'); args=('%Irving%', '%Irving%', '%Irving%', '%Irving%', '%Irving%'); alias=default
[2025-09-21 22:07:04,335] INFO django.server "GET /customers/?q=Irving HTTP/1.1" 200 1372
[2025-09-21 22:07:07,308] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Irving%' ESCAPE '\'); args=('%Irving%', '%Irving%', '%Irving%', '%Irving%', '%Irving%'); alias=default
[2025-09-21 22:07:07,308] INFO customers.views Search performed: Irving -> 0 results
[2025-09-21 22:07:07,309] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Irving%' ESCAPE '\'); args=('%Irving%', '%Irving%', '%Irving%', '%Irving%', '%Irving%'); alias=default
[2025-09-21 22:07:07,310] INFO django.server "GET /customers/?q=Irving HTTP/1.1" 200 1372
[2025-09-21 22:07:29,213] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-21 22:07:29,216] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-21 22:07:29,219] INFO django.server "GET /customers/ HTTP/1.1" 200 7675
[2025-09-21 22:07:32,551] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%None%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%None%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%None%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%None%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%None%' ESCAPE '\'); args=('%None%', '%None%', '%None%', '%None%', '%None%'); alias=default
[2025-09-21 22:07:32,551] INFO customers.views Search performed: None -> 0 results
[2025-09-21 22:07:32,552] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%None%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%None%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%None%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%None%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%None%' ESCAPE '\'); args=('%None%', '%None%', '%None%', '%None%', '%None%'); alias=default
[2025-09-21 22:07:32,553] INFO django.server "GET /customers/?q=None&page=2 HTTP/1.1" 200 1370
[2025-09-21 22:10:20,538] DEBUG django.db.backends (0.000) SELECT DISTINCT "customers_registeredcustomer"."city", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."first_name" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 21; args=(); alias=default
[2025-09-21 22:23:23,521] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-21 22:23:23,531] DEBUG django.db.backends (0.016) DELETE FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-21 22:23:23,539] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-21 22:24:06,830] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-21 22:24:06,839] DEBUG django.db.backends (0.000) DELETE FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-21 22:24:06,844] DEBUG django.db.backends (0.016) COMMIT; args=None; alias=default
[2025-09-21 22:24:06,846] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0001', 'Sarah', 'White', '5210 Royal Ln', 'Plano', 'TX', '75025', '214-555-7588', 'sarah.white0@example.com', '2025-09-21 20:24:06.845785') RETURNING "customers_registeredcustomer"."id"; args=('CUST0001', 'Sarah', 'White', '5210 Royal Ln', 'Plano', 'TX', '75025', '214-555-7588', 'sarah.white0@example.com', '2025-09-21 20:24:06.845785'); alias=default
[2025-09-21 22:24:06,852] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0002', 'Chris', 'Smith', '8735 McKinney Ave', 'Mesquite', 'TX', '75150', '214-555-9198', 'chris.smith1@example.com', '2025-09-21 20:24:06.851784') RETURNING "customers_registeredcustomer"."id"; args=('CUST0002', 'Chris', 'Smith', '8735 McKinney Ave', 'Mesquite', 'TX', '75150', '214-555-9198', 'chris.smith1@example.com', '2025-09-21 20:24:06.851784'); alias=default
[2025-09-21 22:24:06,859] DEBUG django.db.backends (0.016) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0003', 'Sarah', 'Harris', '6309 Cedar Springs Rd', 'Mesquite', 'TX', '75149', '214-555-5137', 'sarah.harris2@example.com', '2025-09-21 20:24:06.858232') RETURNING "customers_registeredcustomer"."id"; args=('CUST0003', 'Sarah', 'Harris', '6309 Cedar Springs Rd', 'Mesquite', 'TX', '75149', '214-555-5137', 'sarah.harris2@example.com', '2025-09-21 20:24:06.858232'); alias=default
[2025-09-21 22:24:06,865] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0004', 'Olivia', 'White', '6508 Ross Ave', 'Arlington', 'TX', '76018', '214-555-3980', 'olivia.white3@example.com', '2025-09-21 20:24:06.864796') RETURNING "customers_registeredcustomer"."id"; args=('CUST0004', 'Olivia', 'White', '6508 Ross Ave', 'Arlington', 'TX', '76018', '214-555-3980', 'olivia.white3@example.com', '2025-09-21 20:24:06.864796'); alias=default
[2025-09-21 22:24:06,871] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0005', 'Laura', 'Anderson', '7925 Main St', 'Irving', 'TX', '75061', '214-555-6569', 'laura.anderson4@example.com', '2025-09-21 20:24:06.870212') RETURNING "customers_registeredcustomer"."id"; args=('CUST0005', 'Laura', 'Anderson', '7925 Main St', 'Irving', 'TX', '75061', '214-555-6569', 'laura.anderson4@example.com', '2025-09-21 20:24:06.870212'); alias=default
[2025-09-21 22:24:06,877] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0006', 'John', 'Jackson', '3259 Royal Ln', 'Mesquite', 'TX', '75149', '214-555-9398', 'john.jackson5@example.com', '2025-09-21 20:24:06.876350') RETURNING "customers_registeredcustomer"."id"; args=('CUST0006', 'John', 'Jackson', '3259 Royal Ln', 'Mesquite', 'TX', '75149', '214-555-9398', 'john.jackson5@example.com', '2025-09-21 20:24:06.876350'); alias=default
[2025-09-21 22:24:06,882] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0007', 'Chris', 'Anderson', '1854 Walnut Hill Ln', 'Richardson', 'TX', '75082', '214-555-2146', 'chris.anderson6@example.com', '2025-09-21 20:24:06.881552') RETURNING "customers_registeredcustomer"."id"; args=('CUST0007', 'Chris', 'Anderson', '1854 Walnut Hill Ln', 'Richardson', 'TX', '75082', '214-555-2146', 'chris.anderson6@example.com', '2025-09-21 20:24:06.881552'); alias=default
[2025-09-21 22:24:06,887] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0008', 'Chris', 'Taylor', '1954 Elm St', 'Mesquite', 'TX', '75181', '214-555-3516', 'chris.taylor7@example.com', '2025-09-21 20:24:06.886430') RETURNING "customers_registeredcustomer"."id"; args=('CUST0008', 'Chris', 'Taylor', '1954 Elm St', 'Mesquite', 'TX', '75181', '214-555-3516', 'chris.taylor7@example.com', '2025-09-21 20:24:06.886430'); alias=default
[2025-09-21 22:24:06,893] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0009', 'John', 'Thomas', '9276 Ross Ave', 'Arlington', 'TX', '76011', '214-555-4858', 'john.thomas8@example.com', '2025-09-21 20:24:06.892074') RETURNING "customers_registeredcustomer"."id"; args=('CUST0009', 'John', 'Thomas', '9276 Ross Ave', 'Arlington', 'TX', '76011', '214-555-4858', 'john.thomas8@example.com', '2025-09-21 20:24:06.892074'); alias=default
[2025-09-21 22:24:06,898] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0010', 'Laura', 'Anderson', '2890 Ross Ave', 'Fort Worth', 'TX', '76109', '214-555-8795', 'laura.anderson9@example.com', '2025-09-21 20:24:06.897559') RETURNING "customers_registeredcustomer"."id"; args=('CUST0010', 'Laura', 'Anderson', '2890 Ross Ave', 'Fort Worth', 'TX', '76109', '214-555-8795', 'laura.anderson9@example.com', '2025-09-21 20:24:06.897559'); alias=default
[2025-09-21 22:24:06,904] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0011', 'Jane', 'White', '6260 Preston Rd', 'Irving', 'TX', '75038', '214-555-4472', 'jane.white10@example.com', '2025-09-21 20:24:06.902872') RETURNING "customers_registeredcustomer"."id"; args=('CUST0011', 'Jane', 'White', '6260 Preston Rd', 'Irving', 'TX', '75038', '214-555-4472', 'jane.white10@example.com', '2025-09-21 20:24:06.902872'); alias=default
[2025-09-21 22:24:06,909] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0012', 'David', 'Smith', '8687 Main St', 'Frisco', 'TX', '75036', '214-555-9305', 'david.smith11@example.com', '2025-09-21 20:24:06.908455') RETURNING "customers_registeredcustomer"."id"; args=('CUST0012', 'David', 'Smith', '8687 Main St', 'Frisco', 'TX', '75036', '214-555-9305', 'david.smith11@example.com', '2025-09-21 20:24:06.908455'); alias=default
[2025-09-21 22:24:06,914] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0013', 'Olivia', 'Smith', '9881 McKinney Ave', 'Garland', 'TX', '75041', '214-555-3424', 'olivia.smith12@example.com', '2025-09-21 20:24:06.913455') RETURNING "customers_registeredcustomer"."id"; args=('CUST0013', 'Olivia', 'Smith', '9881 McKinney Ave', 'Garland', 'TX', '75041', '214-555-3424', 'olivia.smith12@example.com', '2025-09-21 20:24:06.913455'); alias=default
[2025-09-21 22:24:06,920] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0014', 'John', 'Anderson', '1061 Commerce St', 'Arlington', 'TX', '76013', '214-555-8984', 'john.anderson13@example.com', '2025-09-21 20:24:06.919104') RETURNING "customers_registeredcustomer"."id"; args=('CUST0014', 'John', 'Anderson', '1061 Commerce St', 'Arlington', 'TX', '76013', '214-555-8984', 'john.anderson13@example.com', '2025-09-21 20:24:06.919104'); alias=default
[2025-09-21 22:24:06,924] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0015', 'Mike', 'Jackson', '6508 Ross Ave', 'Arlington', 'TX', '76018', '214-555-7923', 'mike.jackson14@example.com', '2025-09-21 20:24:06.923777') RETURNING "customers_registeredcustomer"."id"; args=('CUST0015', 'Mike', 'Jackson', '6508 Ross Ave', 'Arlington', 'TX', '76018', '214-555-7923', 'mike.jackson14@example.com', '2025-09-21 20:24:06.923777'); alias=default
[2025-09-21 22:24:06,930] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0016', 'Jane', 'Martin', '4191 Main St', 'Fort Worth', 'TX', '76102', '214-555-3225', 'jane.martin15@example.com', '2025-09-21 20:24:06.929594') RETURNING "customers_registeredcustomer"."id"; args=('CUST0016', 'Jane', 'Martin', '4191 Main St', 'Fort Worth', 'TX', '76102', '214-555-3225', 'jane.martin15@example.com', '2025-09-21 20:24:06.929594'); alias=default
[2025-09-21 22:24:06,938] DEBUG django.db.backends (0.016) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0017', 'Laura', 'Taylor', '816 Royal Ln', 'Mesquite', 'TX', '75181', '214-555-7208', 'laura.taylor16@example.com', '2025-09-21 20:24:06.936547') RETURNING "customers_registeredcustomer"."id"; args=('CUST0017', 'Laura', 'Taylor', '816 Royal Ln', 'Mesquite', 'TX', '75181', '214-555-7208', 'laura.taylor16@example.com', '2025-09-21 20:24:06.936547'); alias=default
[2025-09-21 22:24:06,943] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0018', 'Mike', 'Jackson', '3871 McKinney Ave', 'Grand Prairie', 'TX', '75052', '214-555-5959', 'mike.jackson17@example.com', '2025-09-21 20:24:06.942232') RETURNING "customers_registeredcustomer"."id"; args=('CUST0018', 'Mike', 'Jackson', '3871 McKinney Ave', 'Grand Prairie', 'TX', '75052', '214-555-5959', 'mike.jackson17@example.com', '2025-09-21 20:24:06.942232'); alias=default
[2025-09-21 22:24:06,948] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0019', 'John', 'Johnson', '9345 Preston Rd', 'Richardson', 'TX', '75080', '214-555-5632', 'john.johnson18@example.com', '2025-09-21 20:24:06.947114') RETURNING "customers_registeredcustomer"."id"; args=('CUST0019', 'John', 'Johnson', '9345 Preston Rd', 'Richardson', 'TX', '75080', '214-555-5632', 'john.johnson18@example.com', '2025-09-21 20:24:06.947114'); alias=default
[2025-09-21 22:24:06,953] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0020', 'Laura', 'Johnson', '7458 Ross Ave', 'Arlington', 'TX', '76013', '214-555-3712', 'laura.johnson19@example.com', '2025-09-21 20:24:06.952468') RETURNING "customers_registeredcustomer"."id"; args=('CUST0020', 'Laura', 'Johnson', '7458 Ross Ave', 'Arlington', 'TX', '76013', '214-555-3712', 'laura.johnson19@example.com', '2025-09-21 20:24:06.952468'); alias=default
[2025-09-21 22:24:06,959] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0021', 'Emily', 'Harris', '1224 Maple Ave', 'Irving', 'TX', '75061', '214-555-6218', 'emily.harris20@example.com', '2025-09-21 20:24:06.958118') RETURNING "customers_registeredcustomer"."id"; args=('CUST0021', 'Emily', 'Harris', '1224 Maple Ave', 'Irving', 'TX', '75061', '214-555-6218', 'emily.harris20@example.com', '2025-09-21 20:24:06.958118'); alias=default
[2025-09-21 22:24:06,965] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0022', 'Olivia', 'Martin', '4820 Elm St', 'Garland', 'TX', '75041', '214-555-8523', 'olivia.martin21@example.com', '2025-09-21 20:24:06.964099') RETURNING "customers_registeredcustomer"."id"; args=('CUST0022', 'Olivia', 'Martin', '4820 Elm St', 'Garland', 'TX', '75041', '214-555-8523', 'olivia.martin21@example.com', '2025-09-21 20:24:06.964099'); alias=default
[2025-09-21 22:24:06,970] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0023', 'John', 'Smith', '2697 McKinney Ave', 'Mesquite', 'TX', '75149', '214-555-2610', 'john.smith22@example.com', '2025-09-21 20:24:06.969483') RETURNING "customers_registeredcustomer"."id"; args=('CUST0023', 'John', 'Smith', '2697 McKinney Ave', 'Mesquite', 'TX', '75149', '214-555-2610', 'john.smith22@example.com', '2025-09-21 20:24:06.969483'); alias=default
[2025-09-21 22:24:06,975] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0024', 'Laura', 'White', '4733 Walnut Hill Ln', 'Mesquite', 'TX', '75181', '214-555-7554', 'laura.white23@example.com', '2025-09-21 20:24:06.974189') RETURNING "customers_registeredcustomer"."id"; args=('CUST0024', 'Laura', 'White', '4733 Walnut Hill Ln', 'Mesquite', 'TX', '75181', '214-555-7554', 'laura.white23@example.com', '2025-09-21 20:24:06.974189'); alias=default
[2025-09-21 22:24:06,979] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0025', 'Laura', 'Taylor', '1499 Cedar Springs Rd', 'Arlington', 'TX', '76010', '214-555-6348', 'laura.taylor24@example.com', '2025-09-21 20:24:06.978704') RETURNING "customers_registeredcustomer"."id"; args=('CUST0025', 'Laura', 'Taylor', '1499 Cedar Springs Rd', 'Arlington', 'TX', '76010', '214-555-6348', 'laura.taylor24@example.com', '2025-09-21 20:24:06.978704'); alias=default
[2025-09-21 22:24:06,984] DEBUG django.db.backends (0.016) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0026', 'Sarah', 'White', '1205 Maple Ave', 'Garland', 'TX', '75044', '214-555-7251', 'sarah.white25@example.com', '2025-09-21 20:24:06.983396') RETURNING "customers_registeredcustomer"."id"; args=('CUST0026', 'Sarah', 'White', '1205 Maple Ave', 'Garland', 'TX', '75044', '214-555-7251', 'sarah.white25@example.com', '2025-09-21 20:24:06.983396'); alias=default
[2025-09-21 22:24:06,989] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0027', 'Sarah', 'Thomas', '1293 Preston Rd', 'Garland', 'TX', '75040', '214-555-6632', 'sarah.thomas26@example.com', '2025-09-21 20:24:06.988897') RETURNING "customers_registeredcustomer"."id"; args=('CUST0027', 'Sarah', 'Thomas', '1293 Preston Rd', 'Garland', 'TX', '75040', '214-555-6632', 'sarah.thomas26@example.com', '2025-09-21 20:24:06.988897'); alias=default
[2025-09-21 22:24:06,994] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0028', 'Olivia', 'Taylor', '9345 Preston Rd', 'Richardson', 'TX', '75080', '214-555-6849', 'olivia.taylor27@example.com', '2025-09-21 20:24:06.993197') RETURNING "customers_registeredcustomer"."id"; args=('CUST0028', 'Olivia', 'Taylor', '9345 Preston Rd', 'Richardson', 'TX', '75080', '214-555-6849', 'olivia.taylor27@example.com', '2025-09-21 20:24:06.993197'); alias=default
[2025-09-21 22:24:06,998] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0029', 'John', 'Thomas', '8063 Royal Ln', 'Irving', 'TX', '75062', '214-555-8360', 'john.thomas28@example.com', '2025-09-21 20:24:06.997712') RETURNING "customers_registeredcustomer"."id"; args=('CUST0029', 'John', 'Thomas', '8063 Royal Ln', 'Irving', 'TX', '75062', '214-555-8360', 'john.thomas28@example.com', '2025-09-21 20:24:06.997712'); alias=default
[2025-09-21 22:24:07,003] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0030', 'David', 'Anderson', '2963 Main St', 'Fort Worth', 'TX', '76109', '214-555-5903', 'david.anderson29@example.com', '2025-09-21 20:24:07.002331') RETURNING "customers_registeredcustomer"."id"; args=('CUST0030', 'David', 'Anderson', '2963 Main St', 'Fort Worth', 'TX', '76109', '214-555-5903', 'david.anderson29@example.com', '2025-09-21 20:24:07.002331'); alias=default
[2025-09-21 22:24:07,021] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0031', 'David', 'Smith', '8764 Commerce St', 'Garland', 'TX', '75043', '214-555-3277', 'david.smith30@example.com', '2025-09-21 20:24:07.020130') RETURNING "customers_registeredcustomer"."id"; args=('CUST0031', 'David', 'Smith', '8764 Commerce St', 'Garland', 'TX', '75043', '214-555-3277', 'david.smith30@example.com', '2025-09-21 20:24:07.020130'); alias=default
[2025-09-21 22:24:07,026] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0032', 'Jane', 'Harris', '2794 McKinney Ave', 'Irving', 'TX', '75062', '214-555-4012', 'jane.harris31@example.com', '2025-09-21 20:24:07.025470') RETURNING "customers_registeredcustomer"."id"; args=('CUST0032', 'Jane', 'Harris', '2794 McKinney Ave', 'Irving', 'TX', '75062', '214-555-4012', 'jane.harris31@example.com', '2025-09-21 20:24:07.025470'); alias=default
[2025-09-21 22:24:07,031] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0033', 'Mike', 'Jackson', '3708 McKinney Ave', 'Fort Worth', 'TX', '76107', '214-555-3232', 'mike.jackson32@example.com', '2025-09-21 20:24:07.030494') RETURNING "customers_registeredcustomer"."id"; args=('CUST0033', 'Mike', 'Jackson', '3708 McKinney Ave', 'Fort Worth', 'TX', '76107', '214-555-3232', 'mike.jackson32@example.com', '2025-09-21 20:24:07.030494'); alias=default
[2025-09-21 22:24:07,037] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0034', 'David', 'White', '7221 Preston Rd', 'Arlington', 'TX', '76011', '214-555-4963', 'david.white33@example.com', '2025-09-21 20:24:07.036168') RETURNING "customers_registeredcustomer"."id"; args=('CUST0034', 'David', 'White', '7221 Preston Rd', 'Arlington', 'TX', '76011', '214-555-4963', 'david.white33@example.com', '2025-09-21 20:24:07.036168'); alias=default
[2025-09-21 22:24:07,042] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0035', 'Olivia', 'Taylor', '886 Elm St', 'Frisco', 'TX', '75033', '214-555-8917', 'olivia.taylor34@example.com', '2025-09-21 20:24:07.041519') RETURNING "customers_registeredcustomer"."id"; args=('CUST0035', 'Olivia', 'Taylor', '886 Elm St', 'Frisco', 'TX', '75033', '214-555-8917', 'olivia.taylor34@example.com', '2025-09-21 20:24:07.041519'); alias=default
[2025-09-21 22:24:07,047] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0036', 'David', 'White', '599 Royal Ln', 'Mesquite', 'TX', '75149', '214-555-8452', 'david.white35@example.com', '2025-09-21 20:24:07.046989') RETURNING "customers_registeredcustomer"."id"; args=('CUST0036', 'David', 'White', '599 Royal Ln', 'Mesquite', 'TX', '75149', '214-555-8452', 'david.white35@example.com', '2025-09-21 20:24:07.046989'); alias=default
[2025-09-21 22:24:07,053] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0037', 'Laura', 'Harris', '2374 Main St', 'Garland', 'TX', '75041', '214-555-2707', 'laura.harris36@example.com', '2025-09-21 20:24:07.052546') RETURNING "customers_registeredcustomer"."id"; args=('CUST0037', 'Laura', 'Harris', '2374 Main St', 'Garland', 'TX', '75041', '214-555-2707', 'laura.harris36@example.com', '2025-09-21 20:24:07.052546'); alias=default
[2025-09-21 22:24:07,058] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0038', 'Emily', 'White', '2374 Main St', 'Garland', 'TX', '75041', '214-555-4660', 'emily.white37@example.com', '2025-09-21 20:24:07.057721') RETURNING "customers_registeredcustomer"."id"; args=('CUST0038', 'Emily', 'White', '2374 Main St', 'Garland', 'TX', '75041', '214-555-4660', 'emily.white37@example.com', '2025-09-21 20:24:07.057721'); alias=default
[2025-09-21 22:24:07,063] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0039', 'Jane', 'Martin', '6509 McKinney Ave', 'Fort Worth', 'TX', '76102', '214-555-8502', 'jane.martin38@example.com', '2025-09-21 20:24:07.062217') RETURNING "customers_registeredcustomer"."id"; args=('CUST0039', 'Jane', 'Martin', '6509 McKinney Ave', 'Fort Worth', 'TX', '76102', '214-555-8502', 'jane.martin38@example.com', '2025-09-21 20:24:07.062217'); alias=default
[2025-09-21 22:24:07,067] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0040', 'Chris', 'Johnson', '7945 Main St', 'Dallas', 'TX', '75204', '214-555-2766', 'chris.johnson39@example.com', '2025-09-21 20:24:07.066773') RETURNING "customers_registeredcustomer"."id"; args=('CUST0040', 'Chris', 'Johnson', '7945 Main St', 'Dallas', 'TX', '75204', '214-555-2766', 'chris.johnson39@example.com', '2025-09-21 20:24:07.066773'); alias=default
[2025-09-21 22:24:07,072] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0041', 'Mike', 'Harris', '157 Preston Rd', 'Garland', 'TX', '75042', '214-555-6099', 'mike.harris40@example.com', '2025-09-21 20:24:07.071388') RETURNING "customers_registeredcustomer"."id"; args=('CUST0041', 'Mike', 'Harris', '157 Preston Rd', 'Garland', 'TX', '75042', '214-555-6099', 'mike.harris40@example.com', '2025-09-21 20:24:07.071388'); alias=default
[2025-09-21 22:24:07,077] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0042', 'Laura', 'Thomas', '2496 Main St', 'Dallas', 'TX', '75205', '214-555-6765', 'laura.thomas41@example.com', '2025-09-21 20:24:07.076060') RETURNING "customers_registeredcustomer"."id"; args=('CUST0042', 'Laura', 'Thomas', '2496 Main St', 'Dallas', 'TX', '75205', '214-555-6765', 'laura.thomas41@example.com', '2025-09-21 20:24:07.076060'); alias=default
[2025-09-21 22:24:07,081] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0043', 'Jane', 'Martin', '4667 McKinney Ave', 'Grand Prairie', 'TX', '75050', '214-555-9391', 'jane.martin42@example.com', '2025-09-21 20:24:07.080754') RETURNING "customers_registeredcustomer"."id"; args=('CUST0043', 'Jane', 'Martin', '4667 McKinney Ave', 'Grand Prairie', 'TX', '75050', '214-555-9391', 'jane.martin42@example.com', '2025-09-21 20:24:07.080754'); alias=default
[2025-09-21 22:24:07,087] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0044', 'Sarah', 'Jackson', '9698 Ross Ave', 'Arlington', 'TX', '76012', '214-555-3972', 'sarah.jackson43@example.com', '2025-09-21 20:24:07.086325') RETURNING "customers_registeredcustomer"."id"; args=('CUST0044', 'Sarah', 'Jackson', '9698 Ross Ave', 'Arlington', 'TX', '76012', '214-555-3972', 'sarah.jackson43@example.com', '2025-09-21 20:24:07.086325'); alias=default
[2025-09-21 22:24:07,092] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0045', 'Laura', 'Smith', '7925 Main St', 'Irving', 'TX', '75061', '214-555-3707', 'laura.smith44@example.com', '2025-09-21 20:24:07.091307') RETURNING "customers_registeredcustomer"."id"; args=('CUST0045', 'Laura', 'Smith', '7925 Main St', 'Irving', 'TX', '75061', '214-555-3707', 'laura.smith44@example.com', '2025-09-21 20:24:07.091307'); alias=default
[2025-09-21 22:24:07,096] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0046', 'David', 'Harris', '6930 Main St', 'Richardson', 'TX', '75080', '214-555-8065', 'david.harris45@example.com', '2025-09-21 20:24:07.095962') RETURNING "customers_registeredcustomer"."id"; args=('CUST0046', 'David', 'Harris', '6930 Main St', 'Richardson', 'TX', '75080', '214-555-8065', 'david.harris45@example.com', '2025-09-21 20:24:07.095962'); alias=default
[2025-09-21 22:24:07,101] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0047', 'Sarah', 'Thomas', '9187 Commerce St', 'Garland', 'TX', '75043', '214-555-1296', 'sarah.thomas46@example.com', '2025-09-21 20:24:07.100723') RETURNING "customers_registeredcustomer"."id"; args=('CUST0047', 'Sarah', 'Thomas', '9187 Commerce St', 'Garland', 'TX', '75043', '214-555-1296', 'sarah.thomas46@example.com', '2025-09-21 20:24:07.100723'); alias=default
[2025-09-21 22:24:07,106] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0048', 'John', 'Johnson', '2764 Elm St', 'Plano', 'TX', '75074', '214-555-7820', 'john.johnson47@example.com', '2025-09-21 20:24:07.105703') RETURNING "customers_registeredcustomer"."id"; args=('CUST0048', 'John', 'Johnson', '2764 Elm St', 'Plano', 'TX', '75074', '214-555-7820', 'john.johnson47@example.com', '2025-09-21 20:24:07.105703'); alias=default
[2025-09-21 22:24:07,112] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0049', 'Jane', 'Jackson', '5210 Royal Ln', 'Plano', 'TX', '75025', '214-555-1807', 'jane.jackson48@example.com', '2025-09-21 20:24:07.111712') RETURNING "customers_registeredcustomer"."id"; args=('CUST0049', 'Jane', 'Jackson', '5210 Royal Ln', 'Plano', 'TX', '75025', '214-555-1807', 'jane.jackson48@example.com', '2025-09-21 20:24:07.111712'); alias=default
[2025-09-21 22:24:07,117] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0050', 'James', 'Anderson', '7441 Cedar Springs Rd', 'Garland', 'TX', '75044', '214-555-9961', 'james.anderson49@example.com', '2025-09-21 20:24:07.116709') RETURNING "customers_registeredcustomer"."id"; args=('CUST0050', 'James', 'Anderson', '7441 Cedar Springs Rd', 'Garland', 'TX', '75044', '214-555-9961', 'james.anderson49@example.com', '2025-09-21 20:24:07.116709'); alias=default
[2025-09-21 22:24:07,122] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0051', 'Mike', 'Smith', '9525 Elm St', 'Arlington', 'TX', '76010', '214-555-6092', 'mike.smith50@example.com', '2025-09-21 20:24:07.121066') RETURNING "customers_registeredcustomer"."id"; args=('CUST0051', 'Mike', 'Smith', '9525 Elm St', 'Arlington', 'TX', '76010', '214-555-6092', 'mike.smith50@example.com', '2025-09-21 20:24:07.121066'); alias=default
[2025-09-21 22:24:07,127] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0052', 'Mike', 'Johnson', '9265 Cedar Springs Rd', 'Frisco', 'TX', '75035', '214-555-7532', 'mike.johnson51@example.com', '2025-09-21 20:24:07.126094') RETURNING "customers_registeredcustomer"."id"; args=('CUST0052', 'Mike', 'Johnson', '9265 Cedar Springs Rd', 'Frisco', 'TX', '75035', '214-555-7532', 'mike.johnson51@example.com', '2025-09-21 20:24:07.126094'); alias=default
[2025-09-21 22:24:07,132] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0053', 'Chris', 'Jackson', '9336 Elm St', 'Fort Worth', 'TX', '76132', '214-555-7284', 'chris.jackson52@example.com', '2025-09-21 20:24:07.130715') RETURNING "customers_registeredcustomer"."id"; args=('CUST0053', 'Chris', 'Jackson', '9336 Elm St', 'Fort Worth', 'TX', '76132', '214-555-7284', 'chris.jackson52@example.com', '2025-09-21 20:24:07.130715'); alias=default
[2025-09-21 22:24:07,138] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0054', 'Sarah', 'Brown', '4481 McKinney Ave', 'Frisco', 'TX', '75034', '214-555-8230', 'sarah.brown53@example.com', '2025-09-21 20:24:07.137436') RETURNING "customers_registeredcustomer"."id"; args=('CUST0054', 'Sarah', 'Brown', '4481 McKinney Ave', 'Frisco', 'TX', '75034', '214-555-8230', 'sarah.brown53@example.com', '2025-09-21 20:24:07.137436'); alias=default
[2025-09-21 22:24:07,143] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0055', 'Emily', 'Johnson', '1052 Ross Ave', 'Irving', 'TX', '75038', '214-555-9700', 'emily.johnson54@example.com', '2025-09-21 20:24:07.142468') RETURNING "customers_registeredcustomer"."id"; args=('CUST0055', 'Emily', 'Johnson', '1052 Ross Ave', 'Irving', 'TX', '75038', '214-555-9700', 'emily.johnson54@example.com', '2025-09-21 20:24:07.142468'); alias=default
[2025-09-21 22:24:07,148] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0056', 'Emily', 'Taylor', '181 Commerce St', 'Frisco', 'TX', '75033', '214-555-8564', 'emily.taylor55@example.com', '2025-09-21 20:24:07.147559') RETURNING "customers_registeredcustomer"."id"; args=('CUST0056', 'Emily', 'Taylor', '181 Commerce St', 'Frisco', 'TX', '75033', '214-555-8564', 'emily.taylor55@example.com', '2025-09-21 20:24:07.147559'); alias=default
[2025-09-21 22:24:07,153] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0057', 'John', 'Smith', '8408 Preston Rd', 'Dallas', 'TX', '75204', '214-555-6005', 'john.smith56@example.com', '2025-09-21 20:24:07.152450') RETURNING "customers_registeredcustomer"."id"; args=('CUST0057', 'John', 'Smith', '8408 Preston Rd', 'Dallas', 'TX', '75204', '214-555-6005', 'john.smith56@example.com', '2025-09-21 20:24:07.152450'); alias=default
[2025-09-21 22:24:07,158] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0058', 'Olivia', 'Johnson', '3415 Main St', 'Mesquite', 'TX', '75149', '214-555-9942', 'olivia.johnson57@example.com', '2025-09-21 20:24:07.157028') RETURNING "customers_registeredcustomer"."id"; args=('CUST0058', 'Olivia', 'Johnson', '3415 Main St', 'Mesquite', 'TX', '75149', '214-555-9942', 'olivia.johnson57@example.com', '2025-09-21 20:24:07.157028'); alias=default
[2025-09-21 22:24:07,162] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0059', 'Emily', 'White', '8249 Cedar Springs Rd', 'Dallas', 'TX', '75204', '214-555-1255', 'emily.white58@example.com', '2025-09-21 20:24:07.161992') RETURNING "customers_registeredcustomer"."id"; args=('CUST0059', 'Emily', 'White', '8249 Cedar Springs Rd', 'Dallas', 'TX', '75204', '214-555-1255', 'emily.white58@example.com', '2025-09-21 20:24:07.161992'); alias=default
[2025-09-21 22:24:07,167] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0060', 'Mike', 'Brown', '8683 Royal Ln', 'Richardson', 'TX', '75080', '214-555-8733', 'mike.brown59@example.com', '2025-09-21 20:24:07.166757') RETURNING "customers_registeredcustomer"."id"; args=('CUST0060', 'Mike', 'Brown', '8683 Royal Ln', 'Richardson', 'TX', '75080', '214-555-8733', 'mike.brown59@example.com', '2025-09-21 20:24:07.166757'); alias=default
[2025-09-21 22:24:07,173] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0061', 'Laura', 'Jackson', '4567 Elm St', 'Grand Prairie', 'TX', '75050', '214-555-6316', 'laura.jackson60@example.com', '2025-09-21 20:24:07.172463') RETURNING "customers_registeredcustomer"."id"; args=('CUST0061', 'Laura', 'Jackson', '4567 Elm St', 'Grand Prairie', 'TX', '75050', '214-555-6316', 'laura.jackson60@example.com', '2025-09-21 20:24:07.172463'); alias=default
[2025-09-21 22:24:07,178] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0062', 'Emily', 'Taylor', '9525 Elm St', 'Arlington', 'TX', '76010', '214-555-3006', 'emily.taylor61@example.com', '2025-09-21 20:24:07.177750') RETURNING "customers_registeredcustomer"."id"; args=('CUST0062', 'Emily', 'Taylor', '9525 Elm St', 'Arlington', 'TX', '76010', '214-555-3006', 'emily.taylor61@example.com', '2025-09-21 20:24:07.177750'); alias=default
[2025-09-21 22:24:07,183] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0063', 'John', 'Taylor', '9276 Ross Ave', 'Arlington', 'TX', '76011', '214-555-1290', 'john.taylor62@example.com', '2025-09-21 20:24:07.182742') RETURNING "customers_registeredcustomer"."id"; args=('CUST0063', 'John', 'Taylor', '9276 Ross Ave', 'Arlington', 'TX', '76011', '214-555-1290', 'john.taylor62@example.com', '2025-09-21 20:24:07.182742'); alias=default
[2025-09-21 22:24:07,188] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0064', 'Emily', 'Martin', '2334 Preston Rd', 'Frisco', 'TX', '75035', '214-555-3693', 'emily.martin63@example.com', '2025-09-21 20:24:07.187899') RETURNING "customers_registeredcustomer"."id"; args=('CUST0064', 'Emily', 'Martin', '2334 Preston Rd', 'Frisco', 'TX', '75035', '214-555-3693', 'emily.martin63@example.com', '2025-09-21 20:24:07.187899'); alias=default
[2025-09-21 22:24:07,194] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0065', 'Olivia', 'Thomas', '2637 Commerce St', 'Plano', 'TX', '75025', '214-555-8495', 'olivia.thomas64@example.com', '2025-09-21 20:24:07.192907') RETURNING "customers_registeredcustomer"."id"; args=('CUST0065', 'Olivia', 'Thomas', '2637 Commerce St', 'Plano', 'TX', '75025', '214-555-8495', 'olivia.thomas64@example.com', '2025-09-21 20:24:07.192907'); alias=default
[2025-09-21 22:24:07,199] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0066', 'David', 'Harris', '8408 Preston Rd', 'Dallas', 'TX', '75204', '214-555-9755', 'david.harris65@example.com', '2025-09-21 20:24:07.198111') RETURNING "customers_registeredcustomer"."id"; args=('CUST0066', 'David', 'Harris', '8408 Preston Rd', 'Dallas', 'TX', '75204', '214-555-9755', 'david.harris65@example.com', '2025-09-21 20:24:07.198111'); alias=default
[2025-09-21 22:24:07,204] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0067', 'John', 'Anderson', '5041 McKinney Ave', 'Garland', 'TX', '75042', '214-555-8798', 'john.anderson66@example.com', '2025-09-21 20:24:07.203510') RETURNING "customers_registeredcustomer"."id"; args=('CUST0067', 'John', 'Anderson', '5041 McKinney Ave', 'Garland', 'TX', '75042', '214-555-8798', 'john.anderson66@example.com', '2025-09-21 20:24:07.203510'); alias=default
[2025-09-21 22:24:07,210] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0068', 'Olivia', 'Harris', '8179 Cedar Springs Rd', 'Fort Worth', 'TX', '76132', '214-555-9378', 'olivia.harris67@example.com', '2025-09-21 20:24:07.209514') RETURNING "customers_registeredcustomer"."id"; args=('CUST0068', 'Olivia', 'Harris', '8179 Cedar Springs Rd', 'Fort Worth', 'TX', '76132', '214-555-9378', 'olivia.harris67@example.com', '2025-09-21 20:24:07.209514'); alias=default
[2025-09-21 22:24:07,215] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0069', 'Chris', 'Johnson', '6341 Preston Rd', 'Frisco', 'TX', '75033', '214-555-2979', 'chris.johnson68@example.com', '2025-09-21 20:24:07.214929') RETURNING "customers_registeredcustomer"."id"; args=('CUST0069', 'Chris', 'Johnson', '6341 Preston Rd', 'Frisco', 'TX', '75033', '214-555-2979', 'chris.johnson68@example.com', '2025-09-21 20:24:07.214929'); alias=default
[2025-09-21 22:24:07,221] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0070', 'Emily', 'Anderson', '2071 Commerce St', 'Irving', 'TX', '75061', '214-555-3182', 'emily.anderson69@example.com', '2025-09-21 20:24:07.220569') RETURNING "customers_registeredcustomer"."id"; args=('CUST0070', 'Emily', 'Anderson', '2071 Commerce St', 'Irving', 'TX', '75061', '214-555-3182', 'emily.anderson69@example.com', '2025-09-21 20:24:07.220569'); alias=default
[2025-09-21 22:24:07,227] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0071', 'John', 'Martin', '157 Preston Rd', 'Garland', 'TX', '75042', '214-555-8701', 'john.martin70@example.com', '2025-09-21 20:24:07.226837') RETURNING "customers_registeredcustomer"."id"; args=('CUST0071', 'John', 'Martin', '157 Preston Rd', 'Garland', 'TX', '75042', '214-555-8701', 'john.martin70@example.com', '2025-09-21 20:24:07.226837'); alias=default
[2025-09-21 22:24:07,233] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0072', 'Jane', 'Anderson', '2384 Walnut Hill Ln', 'Frisco', 'TX', '75034', '214-555-2236', 'jane.anderson71@example.com', '2025-09-21 20:24:07.232174') RETURNING "customers_registeredcustomer"."id"; args=('CUST0072', 'Jane', 'Anderson', '2384 Walnut Hill Ln', 'Frisco', 'TX', '75034', '214-555-2236', 'jane.anderson71@example.com', '2025-09-21 20:24:07.232174'); alias=default
[2025-09-21 22:24:07,238] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0073', 'John', 'Taylor', '8237 Ross Ave', 'Irving', 'TX', '75038', '214-555-3193', 'john.taylor72@example.com', '2025-09-21 20:24:07.237428') RETURNING "customers_registeredcustomer"."id"; args=('CUST0073', 'John', 'Taylor', '8237 Ross Ave', 'Irving', 'TX', '75038', '214-555-3193', 'john.taylor72@example.com', '2025-09-21 20:24:07.237428'); alias=default
[2025-09-21 22:24:07,243] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0074', 'John', 'Thomas', '6383 Preston Rd', 'Dallas', 'TX', '75201', '214-555-2544', 'john.thomas73@example.com', '2025-09-21 20:24:07.242015') RETURNING "customers_registeredcustomer"."id"; args=('CUST0074', 'John', 'Thomas', '6383 Preston Rd', 'Dallas', 'TX', '75201', '214-555-2544', 'john.thomas73@example.com', '2025-09-21 20:24:07.242015'); alias=default
[2025-09-21 22:24:07,247] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0075', 'Laura', 'Jackson', '5326 Maple Ave', 'Arlington', 'TX', '76018', '214-555-7157', 'laura.jackson74@example.com', '2025-09-21 20:24:07.247020') RETURNING "customers_registeredcustomer"."id"; args=('CUST0075', 'Laura', 'Jackson', '5326 Maple Ave', 'Arlington', 'TX', '76018', '214-555-7157', 'laura.jackson74@example.com', '2025-09-21 20:24:07.247020'); alias=default
[2025-09-21 22:24:07,252] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0076', 'David', 'White', '1061 Commerce St', 'Arlington', 'TX', '76013', '214-555-2991', 'david.white75@example.com', '2025-09-21 20:24:07.251722') RETURNING "customers_registeredcustomer"."id"; args=('CUST0076', 'David', 'White', '1061 Commerce St', 'Arlington', 'TX', '76013', '214-555-2991', 'david.white75@example.com', '2025-09-21 20:24:07.251722'); alias=default
[2025-09-21 22:24:07,257] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0077', 'Laura', 'Taylor', '2496 Main St', 'Dallas', 'TX', '75205', '214-555-2641', 'laura.taylor76@example.com', '2025-09-21 20:24:07.256468') RETURNING "customers_registeredcustomer"."id"; args=('CUST0077', 'Laura', 'Taylor', '2496 Main St', 'Dallas', 'TX', '75205', '214-555-2641', 'laura.taylor76@example.com', '2025-09-21 20:24:07.256468'); alias=default
[2025-09-21 22:24:07,262] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0078', 'Sarah', 'Harris', '1061 Commerce St', 'Arlington', 'TX', '76013', '214-555-3830', 'sarah.harris77@example.com', '2025-09-21 20:24:07.261864') RETURNING "customers_registeredcustomer"."id"; args=('CUST0078', 'Sarah', 'Harris', '1061 Commerce St', 'Arlington', 'TX', '76013', '214-555-3830', 'sarah.harris77@example.com', '2025-09-21 20:24:07.261864'); alias=default
[2025-09-21 22:24:07,267] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0079', 'Mike', 'Anderson', '1562 Preston Rd', 'Garland', 'TX', '75043', '214-555-6607', 'mike.anderson78@example.com', '2025-09-21 20:24:07.266810') RETURNING "customers_registeredcustomer"."id"; args=('CUST0079', 'Mike', 'Anderson', '1562 Preston Rd', 'Garland', 'TX', '75043', '214-555-6607', 'mike.anderson78@example.com', '2025-09-21 20:24:07.266810'); alias=default
[2025-09-21 22:24:07,272] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0080', 'John', 'Thomas', '7512 Main St', 'Irving', 'TX', '75039', '214-555-9065', 'john.thomas79@example.com', '2025-09-21 20:24:07.271529') RETURNING "customers_registeredcustomer"."id"; args=('CUST0080', 'John', 'Thomas', '7512 Main St', 'Irving', 'TX', '75039', '214-555-9065', 'john.thomas79@example.com', '2025-09-21 20:24:07.271529'); alias=default
[2025-09-21 22:24:07,277] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0081', 'Jane', 'Martin', '3385 Royal Ln', 'Plano', 'TX', '75024', '214-555-1449', 'jane.martin80@example.com', '2025-09-21 20:24:07.276338') RETURNING "customers_registeredcustomer"."id"; args=('CUST0081', 'Jane', 'Martin', '3385 Royal Ln', 'Plano', 'TX', '75024', '214-555-1449', 'jane.martin80@example.com', '2025-09-21 20:24:07.276338'); alias=default
[2025-09-21 22:24:07,282] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0082', 'Laura', 'Brown', '4376 Royal Ln', 'Grand Prairie', 'TX', '75052', '214-555-4028', 'laura.brown81@example.com', '2025-09-21 20:24:07.281169') RETURNING "customers_registeredcustomer"."id"; args=('CUST0082', 'Laura', 'Brown', '4376 Royal Ln', 'Grand Prairie', 'TX', '75052', '214-555-4028', 'laura.brown81@example.com', '2025-09-21 20:24:07.281169'); alias=default
[2025-09-21 22:24:07,287] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0083', 'Mike', 'Jackson', '6930 Main St', 'Richardson', 'TX', '75080', '214-555-2586', 'mike.jackson82@example.com', '2025-09-21 20:24:07.286068') RETURNING "customers_registeredcustomer"."id"; args=('CUST0083', 'Mike', 'Jackson', '6930 Main St', 'Richardson', 'TX', '75080', '214-555-2586', 'mike.jackson82@example.com', '2025-09-21 20:24:07.286068'); alias=default
[2025-09-21 22:24:07,293] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0084', 'Olivia', 'Thomas', '3921 Royal Ln', 'Fort Worth', 'TX', '76132', '214-555-8045', 'olivia.thomas83@example.com', '2025-09-21 20:24:07.291925') RETURNING "customers_registeredcustomer"."id"; args=('CUST0084', 'Olivia', 'Thomas', '3921 Royal Ln', 'Fort Worth', 'TX', '76132', '214-555-8045', 'olivia.thomas83@example.com', '2025-09-21 20:24:07.291925'); alias=default
[2025-09-21 22:24:07,299] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0085', 'Sarah', 'Martin', '4820 Elm St', 'Garland', 'TX', '75041', '214-555-7634', 'sarah.martin84@example.com', '2025-09-21 20:24:07.298112') RETURNING "customers_registeredcustomer"."id"; args=('CUST0085', 'Sarah', 'Martin', '4820 Elm St', 'Garland', 'TX', '75041', '214-555-7634', 'sarah.martin84@example.com', '2025-09-21 20:24:07.298112'); alias=default
[2025-09-21 22:24:07,304] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0086', 'Laura', 'Taylor', '7055 Maple Ave', 'Arlington', 'TX', '76013', '214-555-3803', 'laura.taylor85@example.com', '2025-09-21 20:24:07.303617') RETURNING "customers_registeredcustomer"."id"; args=('CUST0086', 'Laura', 'Taylor', '7055 Maple Ave', 'Arlington', 'TX', '76013', '214-555-3803', 'laura.taylor85@example.com', '2025-09-21 20:24:07.303617'); alias=default
[2025-09-21 22:24:07,309] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0087', 'Laura', 'Smith', '5371 Commerce St', 'Dallas', 'TX', '75205', '214-555-9229', 'laura.smith86@example.com', '2025-09-21 20:24:07.308213') RETURNING "customers_registeredcustomer"."id"; args=('CUST0087', 'Laura', 'Smith', '5371 Commerce St', 'Dallas', 'TX', '75205', '214-555-9229', 'laura.smith86@example.com', '2025-09-21 20:24:07.308213'); alias=default
[2025-09-21 22:24:07,314] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0088', 'Sarah', 'Jackson', '5762 Royal Ln', 'Dallas', 'TX', '75201', '214-555-5810', 'sarah.jackson87@example.com', '2025-09-21 20:24:07.313250') RETURNING "customers_registeredcustomer"."id"; args=('CUST0088', 'Sarah', 'Jackson', '5762 Royal Ln', 'Dallas', 'TX', '75201', '214-555-5810', 'sarah.jackson87@example.com', '2025-09-21 20:24:07.313250'); alias=default
[2025-09-21 22:24:07,319] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0089', 'Olivia', 'Harris', '1025 Ross Ave', 'Richardson', 'TX', '75080', '214-555-6307', 'olivia.harris88@example.com', '2025-09-21 20:24:07.318786') RETURNING "customers_registeredcustomer"."id"; args=('CUST0089', 'Olivia', 'Harris', '1025 Ross Ave', 'Richardson', 'TX', '75080', '214-555-6307', 'olivia.harris88@example.com', '2025-09-21 20:24:07.318786'); alias=default
[2025-09-21 22:24:07,324] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0090', 'Mike', 'Thomas', '3687 Preston Rd', 'Mesquite', 'TX', '75149', '214-555-4961', 'mike.thomas89@example.com', '2025-09-21 20:24:07.323794') RETURNING "customers_registeredcustomer"."id"; args=('CUST0090', 'Mike', 'Thomas', '3687 Preston Rd', 'Mesquite', 'TX', '75149', '214-555-4961', 'mike.thomas89@example.com', '2025-09-21 20:24:07.323794'); alias=default
[2025-09-21 22:24:07,329] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0091', 'Olivia', 'Jackson', '7815 Main St', 'Dallas', 'TX', '75201', '214-555-7331', 'olivia.jackson90@example.com', '2025-09-21 20:24:07.328496') RETURNING "customers_registeredcustomer"."id"; args=('CUST0091', 'Olivia', 'Jackson', '7815 Main St', 'Dallas', 'TX', '75201', '214-555-7331', 'olivia.jackson90@example.com', '2025-09-21 20:24:07.328496'); alias=default
[2025-09-21 22:24:07,333] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0092', 'Olivia', 'White', '8927 McKinney Ave', 'Mesquite', 'TX', '75181', '214-555-9378', 'olivia.white91@example.com', '2025-09-21 20:24:07.333328') RETURNING "customers_registeredcustomer"."id"; args=('CUST0092', 'Olivia', 'White', '8927 McKinney Ave', 'Mesquite', 'TX', '75181', '214-555-9378', 'olivia.white91@example.com', '2025-09-21 20:24:07.333328'); alias=default
[2025-09-21 22:24:07,338] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0093', 'Jane', 'Johnson', '4512 Royal Ln', 'Plano', 'TX', '75023', '214-555-4937', 'jane.johnson92@example.com', '2025-09-21 20:24:07.337967') RETURNING "customers_registeredcustomer"."id"; args=('CUST0093', 'Jane', 'Johnson', '4512 Royal Ln', 'Plano', 'TX', '75023', '214-555-4937', 'jane.johnson92@example.com', '2025-09-21 20:24:07.337967'); alias=default
[2025-09-21 22:24:07,343] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0094', 'Sarah', 'Harris', '9015 Maple Ave', 'Richardson', 'TX', '75081', '214-555-8523', 'sarah.harris93@example.com', '2025-09-21 20:24:07.342900') RETURNING "customers_registeredcustomer"."id"; args=('CUST0094', 'Sarah', 'Harris', '9015 Maple Ave', 'Richardson', 'TX', '75081', '214-555-8523', 'sarah.harris93@example.com', '2025-09-21 20:24:07.342900'); alias=default
[2025-09-21 22:24:07,350] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0095', 'Mike', 'Thomas', '6930 Main St', 'Richardson', 'TX', '75080', '214-555-4254', 'mike.thomas94@example.com', '2025-09-21 20:24:07.349471') RETURNING "customers_registeredcustomer"."id"; args=('CUST0095', 'Mike', 'Thomas', '6930 Main St', 'Richardson', 'TX', '75080', '214-555-4254', 'mike.thomas94@example.com', '2025-09-21 20:24:07.349471'); alias=default
[2025-09-21 22:24:07,356] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0096', 'John', 'Thomas', '157 Preston Rd', 'Garland', 'TX', '75042', '214-555-3403', 'john.thomas95@example.com', '2025-09-21 20:24:07.355266') RETURNING "customers_registeredcustomer"."id"; args=('CUST0096', 'John', 'Thomas', '157 Preston Rd', 'Garland', 'TX', '75042', '214-555-3403', 'john.thomas95@example.com', '2025-09-21 20:24:07.355266'); alias=default
[2025-09-21 22:24:07,362] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0097', 'John', 'White', '8236 Commerce St', 'Grand Prairie', 'TX', '75054', '214-555-8274', 'john.white96@example.com', '2025-09-21 20:24:07.360852') RETURNING "customers_registeredcustomer"."id"; args=('CUST0097', 'John', 'White', '8236 Commerce St', 'Grand Prairie', 'TX', '75054', '214-555-8274', 'john.white96@example.com', '2025-09-21 20:24:07.360852'); alias=default
[2025-09-21 22:24:07,367] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0098', 'Olivia', 'Martin', '6361 Preston Rd', 'Dallas', 'TX', '75201', '214-555-5883', 'olivia.martin97@example.com', '2025-09-21 20:24:07.366542') RETURNING "customers_registeredcustomer"."id"; args=('CUST0098', 'Olivia', 'Martin', '6361 Preston Rd', 'Dallas', 'TX', '75201', '214-555-5883', 'olivia.martin97@example.com', '2025-09-21 20:24:07.366542'); alias=default
[2025-09-21 22:24:07,372] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0099', 'James', 'Smith', '5371 Commerce St', 'Dallas', 'TX', '75205', '214-555-5760', 'james.smith98@example.com', '2025-09-21 20:24:07.371469') RETURNING "customers_registeredcustomer"."id"; args=('CUST0099', 'James', 'Smith', '5371 Commerce St', 'Dallas', 'TX', '75205', '214-555-5760', 'james.smith98@example.com', '2025-09-21 20:24:07.371469'); alias=default
[2025-09-21 22:24:07,377] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0100', 'Olivia', 'Anderson', '850 Main St', 'Plano', 'TX', '75023', '214-555-9860', 'olivia.anderson99@example.com', '2025-09-21 20:24:07.376915') RETURNING "customers_registeredcustomer"."id"; args=('CUST0100', 'Olivia', 'Anderson', '850 Main St', 'Plano', 'TX', '75023', '214-555-9860', 'olivia.anderson99@example.com', '2025-09-21 20:24:07.376915'); alias=default
[2025-09-21 22:24:07,383] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0101', 'Sarah', 'White', '6383 Preston Rd', 'Dallas', 'TX', '75201', '214-555-4869', 'sarah.white100@example.com', '2025-09-21 20:24:07.382604') RETURNING "customers_registeredcustomer"."id"; args=('CUST0101', 'Sarah', 'White', '6383 Preston Rd', 'Dallas', 'TX', '75201', '214-555-4869', 'sarah.white100@example.com', '2025-09-21 20:24:07.382604'); alias=default
[2025-09-21 22:24:07,388] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0102', 'Olivia', 'Taylor', '6918 Ross Ave', 'Irving', 'TX', '75039', '214-555-4637', 'olivia.taylor101@example.com', '2025-09-21 20:24:07.387648') RETURNING "customers_registeredcustomer"."id"; args=('CUST0102', 'Olivia', 'Taylor', '6918 Ross Ave', 'Irving', 'TX', '75039', '214-555-4637', 'olivia.taylor101@example.com', '2025-09-21 20:24:07.387648'); alias=default
[2025-09-21 22:24:07,394] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0103', 'Laura', 'Martin', '5889 Main St', 'Arlington', 'TX', '76011', '214-555-7174', 'laura.martin102@example.com', '2025-09-21 20:24:07.393655') RETURNING "customers_registeredcustomer"."id"; args=('CUST0103', 'Laura', 'Martin', '5889 Main St', 'Arlington', 'TX', '76011', '214-555-7174', 'laura.martin102@example.com', '2025-09-21 20:24:07.393655'); alias=default
[2025-09-21 22:24:07,399] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0104', 'Olivia', 'Johnson', '7221 Preston Rd', 'Arlington', 'TX', '76011', '214-555-9466', 'olivia.johnson103@example.com', '2025-09-21 20:24:07.398654') RETURNING "customers_registeredcustomer"."id"; args=('CUST0104', 'Olivia', 'Johnson', '7221 Preston Rd', 'Arlington', 'TX', '76011', '214-555-9466', 'olivia.johnson103@example.com', '2025-09-21 20:24:07.398654'); alias=default
[2025-09-21 22:24:07,405] DEBUG django.db.backends (0.016) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0105', 'John', 'Smith', '3687 Preston Rd', 'Mesquite', 'TX', '75149', '214-555-7680', 'john.smith104@example.com', '2025-09-21 20:24:07.404649') RETURNING "customers_registeredcustomer"."id"; args=('CUST0105', 'John', 'Smith', '3687 Preston Rd', 'Mesquite', 'TX', '75149', '214-555-7680', 'john.smith104@example.com', '2025-09-21 20:24:07.404649'); alias=default
[2025-09-21 22:24:07,411] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0106', 'David', 'Thomas', '1052 Ross Ave', 'Irving', 'TX', '75038', '214-555-6035', 'david.thomas105@example.com', '2025-09-21 20:24:07.410645') RETURNING "customers_registeredcustomer"."id"; args=('CUST0106', 'David', 'Thomas', '1052 Ross Ave', 'Irving', 'TX', '75038', '214-555-6035', 'david.thomas105@example.com', '2025-09-21 20:24:07.410645'); alias=default
[2025-09-21 22:24:07,416] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0107', 'Mike', 'Johnson', '4223 Ross Ave', 'Irving', 'TX', '75039', '214-555-3222', 'mike.johnson106@example.com', '2025-09-21 20:24:07.416641') RETURNING "customers_registeredcustomer"."id"; args=('CUST0107', 'Mike', 'Johnson', '4223 Ross Ave', 'Irving', 'TX', '75039', '214-555-3222', 'mike.johnson106@example.com', '2025-09-21 20:24:07.416641'); alias=default
[2025-09-21 22:24:07,422] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0108', 'Mike', 'Smith', '9345 Preston Rd', 'Richardson', 'TX', '75080', '214-555-7216', 'mike.smith107@example.com', '2025-09-21 20:24:07.421638') RETURNING "customers_registeredcustomer"."id"; args=('CUST0108', 'Mike', 'Smith', '9345 Preston Rd', 'Richardson', 'TX', '75080', '214-555-7216', 'mike.smith107@example.com', '2025-09-21 20:24:07.421638'); alias=default
[2025-09-21 22:24:07,428] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0109', 'James', 'Jackson', '7017 Main St', 'Garland', 'TX', '75044', '214-555-5111', 'james.jackson108@example.com', '2025-09-21 20:24:07.427636') RETURNING "customers_registeredcustomer"."id"; args=('CUST0109', 'James', 'Jackson', '7017 Main St', 'Garland', 'TX', '75044', '214-555-5111', 'james.jackson108@example.com', '2025-09-21 20:24:07.427636'); alias=default
[2025-09-21 22:24:07,434] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0110', 'Laura', 'Martin', '1071 Maple Ave', 'Irving', 'TX', '75060', '214-555-6639', 'laura.martin109@example.com', '2025-09-21 20:24:07.433632') RETURNING "customers_registeredcustomer"."id"; args=('CUST0110', 'Laura', 'Martin', '1071 Maple Ave', 'Irving', 'TX', '75060', '214-555-6639', 'laura.martin109@example.com', '2025-09-21 20:24:07.433632'); alias=default
[2025-09-21 22:24:07,439] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0111', 'Emily', 'Taylor', '1936 Cedar Springs Rd', 'Mesquite', 'TX', '75149', '214-555-4215', 'emily.taylor110@example.com', '2025-09-21 20:24:07.438629') RETURNING "customers_registeredcustomer"."id"; args=('CUST0111', 'Emily', 'Taylor', '1936 Cedar Springs Rd', 'Mesquite', 'TX', '75149', '214-555-4215', 'emily.taylor110@example.com', '2025-09-21 20:24:07.438629'); alias=default
[2025-09-21 22:24:07,445] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0112', 'Jane', 'White', '4927 Walnut Hill Ln', 'Frisco', 'TX', '75036', '214-555-2975', 'jane.white111@example.com', '2025-09-21 20:24:07.444625') RETURNING "customers_registeredcustomer"."id"; args=('CUST0112', 'Jane', 'White', '4927 Walnut Hill Ln', 'Frisco', 'TX', '75036', '214-555-2975', 'jane.white111@example.com', '2025-09-21 20:24:07.444625'); alias=default
[2025-09-21 22:24:07,452] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0113', 'Jane', 'Johnson', '5811 Preston Rd', 'Fort Worth', 'TX', '76116', '214-555-2840', 'jane.johnson112@example.com', '2025-09-21 20:24:07.450624') RETURNING "customers_registeredcustomer"."id"; args=('CUST0113', 'Jane', 'Johnson', '5811 Preston Rd', 'Fort Worth', 'TX', '76116', '214-555-2840', 'jane.johnson112@example.com', '2025-09-21 20:24:07.450624'); alias=default
[2025-09-21 22:24:07,457] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0114', 'Jane', 'Martin', '7606 Maple Ave', 'Fort Worth', 'TX', '76110', '214-555-7256', 'jane.martin113@example.com', '2025-09-21 20:24:07.456422') RETURNING "customers_registeredcustomer"."id"; args=('CUST0114', 'Jane', 'Martin', '7606 Maple Ave', 'Fort Worth', 'TX', '76110', '214-555-7256', 'jane.martin113@example.com', '2025-09-21 20:24:07.456422'); alias=default
[2025-09-21 22:24:07,462] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0115', 'John', 'Smith', '1088 Elm St', 'Garland', 'TX', '75040', '214-555-7359', 'john.smith114@example.com', '2025-09-21 20:24:07.461065') RETURNING "customers_registeredcustomer"."id"; args=('CUST0115', 'John', 'Smith', '1088 Elm St', 'Garland', 'TX', '75040', '214-555-7359', 'john.smith114@example.com', '2025-09-21 20:24:07.461065'); alias=default
[2025-09-21 22:24:07,466] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0116', 'Mike', 'White', '9893 Royal Ln', 'Richardson', 'TX', '75082', '214-555-5578', 'mike.white115@example.com', '2025-09-21 20:24:07.465772') RETURNING "customers_registeredcustomer"."id"; args=('CUST0116', 'Mike', 'White', '9893 Royal Ln', 'Richardson', 'TX', '75082', '214-555-5578', 'mike.white115@example.com', '2025-09-21 20:24:07.465772'); alias=default
[2025-09-21 22:24:07,471] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0117', 'Olivia', 'Johnson', '7512 Main St', 'Irving', 'TX', '75039', '214-555-3570', 'olivia.johnson116@example.com', '2025-09-21 20:24:07.470605') RETURNING "customers_registeredcustomer"."id"; args=('CUST0117', 'Olivia', 'Johnson', '7512 Main St', 'Irving', 'TX', '75039', '214-555-3570', 'olivia.johnson116@example.com', '2025-09-21 20:24:07.470605'); alias=default
[2025-09-21 22:24:07,478] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0118', 'Olivia', 'Johnson', '5166 Commerce St', 'Dallas', 'TX', '75214', '214-555-1390', 'olivia.johnson117@example.com', '2025-09-21 20:24:07.477133') RETURNING "customers_registeredcustomer"."id"; args=('CUST0118', 'Olivia', 'Johnson', '5166 Commerce St', 'Dallas', 'TX', '75214', '214-555-1390', 'olivia.johnson117@example.com', '2025-09-21 20:24:07.477133'); alias=default
[2025-09-21 22:24:07,483] DEBUG django.db.backends (0.016) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0119', 'Mike', 'White', '3259 Royal Ln', 'Mesquite', 'TX', '75149', '214-555-9397', 'mike.white118@example.com', '2025-09-21 20:24:07.482303') RETURNING "customers_registeredcustomer"."id"; args=('CUST0119', 'Mike', 'White', '3259 Royal Ln', 'Mesquite', 'TX', '75149', '214-555-9397', 'mike.white118@example.com', '2025-09-21 20:24:07.482303'); alias=default
[2025-09-21 22:24:07,488] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0120', 'James', 'Jackson', '4512 Royal Ln', 'Plano', 'TX', '75023', '214-555-2216', 'james.jackson119@example.com', '2025-09-21 20:24:07.487889') RETURNING "customers_registeredcustomer"."id"; args=('CUST0120', 'James', 'Jackson', '4512 Royal Ln', 'Plano', 'TX', '75023', '214-555-2216', 'james.jackson119@example.com', '2025-09-21 20:24:07.487889'); alias=default
[2025-09-21 22:24:07,493] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0121', 'Sarah', 'Martin', '3687 Preston Rd', 'Mesquite', 'TX', '75149', '214-555-6425', 'sarah.martin120@example.com', '2025-09-21 20:24:07.492592') RETURNING "customers_registeredcustomer"."id"; args=('CUST0121', 'Sarah', 'Martin', '3687 Preston Rd', 'Mesquite', 'TX', '75149', '214-555-6425', 'sarah.martin120@example.com', '2025-09-21 20:24:07.492592'); alias=default
[2025-09-21 22:24:07,499] DEBUG django.db.backends (0.015) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0122', 'Mike', 'Anderson', '4512 Royal Ln', 'Plano', 'TX', '75023', '214-555-2279', 'mike.anderson121@example.com', '2025-09-21 20:24:07.498256') RETURNING "customers_registeredcustomer"."id"; args=('CUST0122', 'Mike', 'Anderson', '4512 Royal Ln', 'Plano', 'TX', '75023', '214-555-2279', 'mike.anderson121@example.com', '2025-09-21 20:24:07.498256'); alias=default
[2025-09-21 22:24:07,504] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0123', 'Laura', 'Johnson', '1499 Cedar Springs Rd', 'Arlington', 'TX', '76010', '214-555-6194', 'laura.johnson122@example.com', '2025-09-21 20:24:07.503942') RETURNING "customers_registeredcustomer"."id"; args=('CUST0123', 'Laura', 'Johnson', '1499 Cedar Springs Rd', 'Arlington', 'TX', '76010', '214-555-6194', 'laura.johnson122@example.com', '2025-09-21 20:24:07.503942'); alias=default
[2025-09-21 22:24:07,510] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0124', 'John', 'Johnson', '7945 Main St', 'Dallas', 'TX', '75204', '214-555-9575', 'john.johnson123@example.com', '2025-09-21 20:24:07.509414') RETURNING "customers_registeredcustomer"."id"; args=('CUST0124', 'John', 'Johnson', '7945 Main St', 'Dallas', 'TX', '75204', '214-555-9575', 'john.johnson123@example.com', '2025-09-21 20:24:07.509414'); alias=default
[2025-09-21 22:24:07,515] DEBUG django.db.backends (0.016) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0125', 'Jane', 'White', '6509 McKinney Ave', 'Fort Worth', 'TX', '76102', '214-555-1780', 'jane.white124@example.com', '2025-09-21 20:24:07.514013') RETURNING "customers_registeredcustomer"."id"; args=('CUST0125', 'Jane', 'White', '6509 McKinney Ave', 'Fort Worth', 'TX', '76102', '214-555-1780', 'jane.white124@example.com', '2025-09-21 20:24:07.514013'); alias=default
[2025-09-21 22:24:07,520] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0126', 'Olivia', 'Smith', '9132 Walnut Hill Ln', 'Dallas', 'TX', '75206', '214-555-4298', 'olivia.smith125@example.com', '2025-09-21 20:24:07.519430') RETURNING "customers_registeredcustomer"."id"; args=('CUST0126', 'Olivia', 'Smith', '9132 Walnut Hill Ln', 'Dallas', 'TX', '75206', '214-555-4298', 'olivia.smith125@example.com', '2025-09-21 20:24:07.519430'); alias=default
[2025-09-21 22:24:07,525] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0127', 'Jane', 'Taylor', '7017 Main St', 'Garland', 'TX', '75044', '214-555-5069', 'jane.taylor126@example.com', '2025-09-21 20:24:07.524417') RETURNING "customers_registeredcustomer"."id"; args=('CUST0127', 'Jane', 'Taylor', '7017 Main St', 'Garland', 'TX', '75044', '214-555-5069', 'jane.taylor126@example.com', '2025-09-21 20:24:07.524417'); alias=default
[2025-09-21 22:24:07,530] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0128', 'James', 'White', '7974 Cedar Springs Rd', 'Irving', 'TX', '75063', '214-555-9146', 'james.white127@example.com', '2025-09-21 20:24:07.529175') RETURNING "customers_registeredcustomer"."id"; args=('CUST0128', 'James', 'White', '7974 Cedar Springs Rd', 'Irving', 'TX', '75063', '214-555-9146', 'james.white127@example.com', '2025-09-21 20:24:07.529175'); alias=default
[2025-09-21 22:24:07,536] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0129', 'Emily', 'Brown', '5326 Maple Ave', 'Arlington', 'TX', '76018', '214-555-2105', 'emily.brown128@example.com', '2025-09-21 20:24:07.535174') RETURNING "customers_registeredcustomer"."id"; args=('CUST0129', 'Emily', 'Brown', '5326 Maple Ave', 'Arlington', 'TX', '76018', '214-555-2105', 'emily.brown128@example.com', '2025-09-21 20:24:07.535174'); alias=default
[2025-09-21 22:24:07,541] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0130', 'Jane', 'Martin', '1088 Elm St', 'Garland', 'TX', '75040', '214-555-9163', 'jane.martin129@example.com', '2025-09-21 20:24:07.540418') RETURNING "customers_registeredcustomer"."id"; args=('CUST0130', 'Jane', 'Martin', '1088 Elm St', 'Garland', 'TX', '75040', '214-555-9163', 'jane.martin129@example.com', '2025-09-21 20:24:07.540418'); alias=default
[2025-09-21 22:24:07,547] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0131', 'Olivia', 'Martin', '2811 Maple Ave', 'Grand Prairie', 'TX', '75050', '214-555-1254', 'olivia.martin130@example.com', '2025-09-21 20:24:07.546193') RETURNING "customers_registeredcustomer"."id"; args=('CUST0131', 'Olivia', 'Martin', '2811 Maple Ave', 'Grand Prairie', 'TX', '75050', '214-555-1254', 'olivia.martin130@example.com', '2025-09-21 20:24:07.546193'); alias=default
[2025-09-21 22:24:07,553] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0132', 'Olivia', 'Smith', '9410 Elm St', 'Dallas', 'TX', '75204', '214-555-6894', 'olivia.smith131@example.com', '2025-09-21 20:24:07.552191') RETURNING "customers_registeredcustomer"."id"; args=('CUST0132', 'Olivia', 'Smith', '9410 Elm St', 'Dallas', 'TX', '75204', '214-555-6894', 'olivia.smith131@example.com', '2025-09-21 20:24:07.552191'); alias=default
[2025-09-21 22:24:07,558] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0133', 'Sarah', 'Brown', '4152 Walnut Hill Ln', 'Fort Worth', 'TX', '76107', '214-555-6454', 'sarah.brown132@example.com', '2025-09-21 20:24:07.557196') RETURNING "customers_registeredcustomer"."id"; args=('CUST0133', 'Sarah', 'Brown', '4152 Walnut Hill Ln', 'Fort Worth', 'TX', '76107', '214-555-6454', 'sarah.brown132@example.com', '2025-09-21 20:24:07.557196'); alias=default
[2025-09-21 22:24:07,563] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0134', 'David', 'Brown', '3846 McKinney Ave', 'Dallas', 'TX', '75205', '214-555-8387', 'david.brown133@example.com', '2025-09-21 20:24:07.562183') RETURNING "customers_registeredcustomer"."id"; args=('CUST0134', 'David', 'Brown', '3846 McKinney Ave', 'Dallas', 'TX', '75205', '214-555-8387', 'david.brown133@example.com', '2025-09-21 20:24:07.562183'); alias=default
[2025-09-21 22:24:07,569] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0135', 'John', 'Anderson', '6509 McKinney Ave', 'Fort Worth', 'TX', '76102', '214-555-1440', 'john.anderson134@example.com', '2025-09-21 20:24:07.568181') RETURNING "customers_registeredcustomer"."id"; args=('CUST0135', 'John', 'Anderson', '6509 McKinney Ave', 'Fort Worth', 'TX', '76102', '214-555-1440', 'john.anderson134@example.com', '2025-09-21 20:24:07.568181'); alias=default
[2025-09-21 22:24:07,574] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0136', 'David', 'White', '2439 Preston Rd', 'Fort Worth', 'TX', '76110', '214-555-6186', 'david.white135@example.com', '2025-09-21 20:24:07.573177') RETURNING "customers_registeredcustomer"."id"; args=('CUST0136', 'David', 'White', '2439 Preston Rd', 'Fort Worth', 'TX', '76110', '214-555-6186', 'david.white135@example.com', '2025-09-21 20:24:07.573177'); alias=default
[2025-09-21 22:24:07,578] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0137', 'Sarah', 'Thomas', '6383 Preston Rd', 'Dallas', 'TX', '75201', '214-555-8726', 'sarah.thomas136@example.com', '2025-09-21 20:24:07.577787') RETURNING "customers_registeredcustomer"."id"; args=('CUST0137', 'Sarah', 'Thomas', '6383 Preston Rd', 'Dallas', 'TX', '75201', '214-555-8726', 'sarah.thomas136@example.com', '2025-09-21 20:24:07.577787'); alias=default
[2025-09-21 22:24:07,583] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0138', 'Mike', 'Smith', '7458 Walnut Hill Ln', 'Mesquite', 'TX', '75149', '214-555-5788', 'mike.smith137@example.com', '2025-09-21 20:24:07.582324') RETURNING "customers_registeredcustomer"."id"; args=('CUST0138', 'Mike', 'Smith', '7458 Walnut Hill Ln', 'Mesquite', 'TX', '75149', '214-555-5788', 'mike.smith137@example.com', '2025-09-21 20:24:07.582324'); alias=default
[2025-09-21 22:24:07,587] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0139', 'John', 'Martin', '1936 Cedar Springs Rd', 'Mesquite', 'TX', '75149', '214-555-2137', 'john.martin138@example.com', '2025-09-21 20:24:07.586972') RETURNING "customers_registeredcustomer"."id"; args=('CUST0139', 'John', 'Martin', '1936 Cedar Springs Rd', 'Mesquite', 'TX', '75149', '214-555-2137', 'john.martin138@example.com', '2025-09-21 20:24:07.586972'); alias=default
[2025-09-21 22:24:07,593] DEBUG django.db.backends (0.016) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0140', 'Chris', 'Brown', '5087 Commerce St', 'Frisco', 'TX', '75034', '214-555-7497', 'chris.brown139@example.com', '2025-09-21 20:24:07.592350') RETURNING "customers_registeredcustomer"."id"; args=('CUST0140', 'Chris', 'Brown', '5087 Commerce St', 'Frisco', 'TX', '75034', '214-555-7497', 'chris.brown139@example.com', '2025-09-21 20:24:07.592350'); alias=default
[2025-09-21 22:24:07,599] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0141', 'Laura', 'Martin', '2764 Elm St', 'Plano', 'TX', '75074', '214-555-8602', 'laura.martin140@example.com', '2025-09-21 20:24:07.598562') RETURNING "customers_registeredcustomer"."id"; args=('CUST0141', 'Laura', 'Martin', '2764 Elm St', 'Plano', 'TX', '75074', '214-555-8602', 'laura.martin140@example.com', '2025-09-21 20:24:07.598562'); alias=default
[2025-09-21 22:24:07,605] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0142', 'Laura', 'Brown', '2374 Main St', 'Garland', 'TX', '75041', '214-555-3640', 'laura.brown141@example.com', '2025-09-21 20:24:07.603937') RETURNING "customers_registeredcustomer"."id"; args=('CUST0142', 'Laura', 'Brown', '2374 Main St', 'Garland', 'TX', '75041', '214-555-3640', 'laura.brown141@example.com', '2025-09-21 20:24:07.603937'); alias=default
[2025-09-21 22:24:07,610] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0143', 'Sarah', 'Taylor', '7809 Maple Ave', 'Frisco', 'TX', '75034', '214-555-8803', 'sarah.taylor142@example.com', '2025-09-21 20:24:07.609519') RETURNING "customers_registeredcustomer"."id"; args=('CUST0143', 'Sarah', 'Taylor', '7809 Maple Ave', 'Frisco', 'TX', '75034', '214-555-8803', 'sarah.taylor142@example.com', '2025-09-21 20:24:07.609519'); alias=default
[2025-09-21 22:24:07,615] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0144', 'Mike', 'White', '7441 Cedar Springs Rd', 'Garland', 'TX', '75044', '214-555-4929', 'mike.white143@example.com', '2025-09-21 20:24:07.614929') RETURNING "customers_registeredcustomer"."id"; args=('CUST0144', 'Mike', 'White', '7441 Cedar Springs Rd', 'Garland', 'TX', '75044', '214-555-4929', 'mike.white143@example.com', '2025-09-21 20:24:07.614929'); alias=default
[2025-09-21 22:24:07,621] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0145', 'Emily', 'Harris', '2811 Maple Ave', 'Grand Prairie', 'TX', '75050', '214-555-3309', 'emily.harris144@example.com', '2025-09-21 20:24:07.620510') RETURNING "customers_registeredcustomer"."id"; args=('CUST0145', 'Emily', 'Harris', '2811 Maple Ave', 'Grand Prairie', 'TX', '75050', '214-555-3309', 'emily.harris144@example.com', '2025-09-21 20:24:07.620510'); alias=default
[2025-09-21 22:24:07,626] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0146', 'Mike', 'Johnson', '2082 Cedar Springs Rd', 'Frisco', 'TX', '75034', '214-555-6440', 'mike.johnson145@example.com', '2025-09-21 20:24:07.625816') RETURNING "customers_registeredcustomer"."id"; args=('CUST0146', 'Mike', 'Johnson', '2082 Cedar Springs Rd', 'Frisco', 'TX', '75034', '214-555-6440', 'mike.johnson145@example.com', '2025-09-21 20:24:07.625816'); alias=default
[2025-09-21 22:24:07,633] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0147', 'Laura', 'Anderson', '8236 Commerce St', 'Grand Prairie', 'TX', '75054', '214-555-5526', 'laura.anderson146@example.com', '2025-09-21 20:24:07.632222') RETURNING "customers_registeredcustomer"."id"; args=('CUST0147', 'Laura', 'Anderson', '8236 Commerce St', 'Grand Prairie', 'TX', '75054', '214-555-5526', 'laura.anderson146@example.com', '2025-09-21 20:24:07.632222'); alias=default
[2025-09-21 22:24:07,638] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0148', 'Olivia', 'Johnson', '1562 Preston Rd', 'Garland', 'TX', '75043', '214-555-1687', 'olivia.johnson147@example.com', '2025-09-21 20:24:07.637157') RETURNING "customers_registeredcustomer"."id"; args=('CUST0148', 'Olivia', 'Johnson', '1562 Preston Rd', 'Garland', 'TX', '75043', '214-555-1687', 'olivia.johnson147@example.com', '2025-09-21 20:24:07.637157'); alias=default
[2025-09-21 22:24:07,643] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0149', 'Mike', 'Martin', '8927 McKinney Ave', 'Mesquite', 'TX', '75181', '214-555-4455', 'mike.martin148@example.com', '2025-09-21 20:24:07.642129') RETURNING "customers_registeredcustomer"."id"; args=('CUST0149', 'Mike', 'Martin', '8927 McKinney Ave', 'Mesquite', 'TX', '75181', '214-555-4455', 'mike.martin148@example.com', '2025-09-21 20:24:07.642129'); alias=default
[2025-09-21 22:24:07,648] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0150', 'Emily', 'Taylor', '9276 Ross Ave', 'Arlington', 'TX', '76011', '214-555-2282', 'emily.taylor149@example.com', '2025-09-21 20:24:07.647111') RETURNING "customers_registeredcustomer"."id"; args=('CUST0150', 'Emily', 'Taylor', '9276 Ross Ave', 'Arlington', 'TX', '76011', '214-555-2282', 'emily.taylor149@example.com', '2025-09-21 20:24:07.647111'); alias=default
[2025-09-21 22:24:07,654] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0151', 'Mike', 'Johnson', '1088 Elm St', 'Garland', 'TX', '75040', '214-555-4456', 'mike.johnson150@example.com', '2025-09-21 20:24:07.653108') RETURNING "customers_registeredcustomer"."id"; args=('CUST0151', 'Mike', 'Johnson', '1088 Elm St', 'Garland', 'TX', '75040', '214-555-4456', 'mike.johnson150@example.com', '2025-09-21 20:24:07.653108'); alias=default
[2025-09-21 22:24:07,659] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0152', 'Laura', 'White', '2684 Preston Rd', 'Grand Prairie', 'TX', '75052', '214-555-9646', 'laura.white151@example.com', '2025-09-21 20:24:07.658105') RETURNING "customers_registeredcustomer"."id"; args=('CUST0152', 'Laura', 'White', '2684 Preston Rd', 'Grand Prairie', 'TX', '75052', '214-555-9646', 'laura.white151@example.com', '2025-09-21 20:24:07.658105'); alias=default
[2025-09-21 22:24:07,665] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0153', 'Sarah', 'Anderson', '3385 Royal Ln', 'Plano', 'TX', '75024', '214-555-4220', 'sarah.anderson152@example.com', '2025-09-21 20:24:07.664100') RETURNING "customers_registeredcustomer"."id"; args=('CUST0153', 'Sarah', 'Anderson', '3385 Royal Ln', 'Plano', 'TX', '75024', '214-555-4220', 'sarah.anderson152@example.com', '2025-09-21 20:24:07.664100'); alias=default
[2025-09-21 22:24:07,670] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0154', 'John', 'Anderson', '2768 Ross Ave', 'Plano', 'TX', '75074', '214-555-9865', 'john.anderson153@example.com', '2025-09-21 20:24:07.670098') RETURNING "customers_registeredcustomer"."id"; args=('CUST0154', 'John', 'Anderson', '2768 Ross Ave', 'Plano', 'TX', '75074', '214-555-9865', 'john.anderson153@example.com', '2025-09-21 20:24:07.670098'); alias=default
[2025-09-21 22:24:07,676] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0155', 'Olivia', 'White', '3235 Cedar Springs Rd', 'Garland', 'TX', '75044', '214-555-9575', 'olivia.white154@example.com', '2025-09-21 20:24:07.675492') RETURNING "customers_registeredcustomer"."id"; args=('CUST0155', 'Olivia', 'White', '3235 Cedar Springs Rd', 'Garland', 'TX', '75044', '214-555-9575', 'olivia.white154@example.com', '2025-09-21 20:24:07.675492'); alias=default
[2025-09-21 22:24:07,681] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0156', 'Mike', 'Anderson', '5166 Commerce St', 'Dallas', 'TX', '75214', '214-555-9257', 'mike.anderson155@example.com', '2025-09-21 20:24:07.680523') RETURNING "customers_registeredcustomer"."id"; args=('CUST0156', 'Mike', 'Anderson', '5166 Commerce St', 'Dallas', 'TX', '75214', '214-555-9257', 'mike.anderson155@example.com', '2025-09-21 20:24:07.680523'); alias=default
[2025-09-21 22:24:07,687] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0157', 'Jane', 'Thomas', '2697 McKinney Ave', 'Mesquite', 'TX', '75149', '214-555-2172', 'jane.thomas156@example.com', '2025-09-21 20:24:07.686617') RETURNING "customers_registeredcustomer"."id"; args=('CUST0157', 'Jane', 'Thomas', '2697 McKinney Ave', 'Mesquite', 'TX', '75149', '214-555-2172', 'jane.thomas156@example.com', '2025-09-21 20:24:07.686617'); alias=default
[2025-09-21 22:24:07,692] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0158', 'Emily', 'Anderson', '1205 Maple Ave', 'Garland', 'TX', '75044', '214-555-7836', 'emily.anderson157@example.com', '2025-09-21 20:24:07.691525') RETURNING "customers_registeredcustomer"."id"; args=('CUST0158', 'Emily', 'Anderson', '1205 Maple Ave', 'Garland', 'TX', '75044', '214-555-7836', 'emily.anderson157@example.com', '2025-09-21 20:24:07.691525'); alias=default
[2025-09-21 22:24:07,697] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0159', 'Laura', 'Brown', '4986 Ross Ave', 'Irving', 'TX', '75038', '214-555-6318', 'laura.brown158@example.com', '2025-09-21 20:24:07.696526') RETURNING "customers_registeredcustomer"."id"; args=('CUST0159', 'Laura', 'Brown', '4986 Ross Ave', 'Irving', 'TX', '75038', '214-555-6318', 'laura.brown158@example.com', '2025-09-21 20:24:07.696526'); alias=default
[2025-09-21 22:24:07,703] DEBUG django.db.backends (0.015) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0160', 'Emily', 'Anderson', '5762 Royal Ln', 'Dallas', 'TX', '75201', '214-555-8548', 'emily.anderson159@example.com', '2025-09-21 20:24:07.702182') RETURNING "customers_registeredcustomer"."id"; args=('CUST0160', 'Emily', 'Anderson', '5762 Royal Ln', 'Dallas', 'TX', '75201', '214-555-8548', 'emily.anderson159@example.com', '2025-09-21 20:24:07.702182'); alias=default
[2025-09-21 22:24:07,708] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0161', 'Jane', 'Taylor', '1071 Maple Ave', 'Irving', 'TX', '75060', '214-555-9553', 'jane.taylor160@example.com', '2025-09-21 20:24:07.707581') RETURNING "customers_registeredcustomer"."id"; args=('CUST0161', 'Jane', 'Taylor', '1071 Maple Ave', 'Irving', 'TX', '75060', '214-555-9553', 'jane.taylor160@example.com', '2025-09-21 20:24:07.707581'); alias=default
[2025-09-21 22:24:07,713] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0162', 'Olivia', 'Smith', '4353 Elm St', 'Grand Prairie', 'TX', '75054', '214-555-7222', 'olivia.smith161@example.com', '2025-09-21 20:24:07.712141') RETURNING "customers_registeredcustomer"."id"; args=('CUST0162', 'Olivia', 'Smith', '4353 Elm St', 'Grand Prairie', 'TX', '75054', '214-555-7222', 'olivia.smith161@example.com', '2025-09-21 20:24:07.712141'); alias=default
[2025-09-21 22:24:07,718] DEBUG django.db.backends (0.016) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0163', 'David', 'Martin', '8687 Main St', 'Frisco', 'TX', '75036', '214-555-1089', 'david.martin162@example.com', '2025-09-21 20:24:07.717355') RETURNING "customers_registeredcustomer"."id"; args=('CUST0163', 'David', 'Martin', '8687 Main St', 'Frisco', 'TX', '75036', '214-555-1089', 'david.martin162@example.com', '2025-09-21 20:24:07.717355'); alias=default
[2025-09-21 22:24:07,723] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0164', 'John', 'Jackson', '7495 Ross Ave', 'Irving', 'TX', '75038', '214-555-9362', 'john.jackson163@example.com', '2025-09-21 20:24:07.722783') RETURNING "customers_registeredcustomer"."id"; args=('CUST0164', 'John', 'Jackson', '7495 Ross Ave', 'Irving', 'TX', '75038', '214-555-9362', 'john.jackson163@example.com', '2025-09-21 20:24:07.722783'); alias=default
[2025-09-21 22:24:07,729] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0165', 'Chris', 'White', '4986 Ross Ave', 'Irving', 'TX', '75038', '214-555-4440', 'chris.white164@example.com', '2025-09-21 20:24:07.728479') RETURNING "customers_registeredcustomer"."id"; args=('CUST0165', 'Chris', 'White', '4986 Ross Ave', 'Irving', 'TX', '75038', '214-555-4440', 'chris.white164@example.com', '2025-09-21 20:24:07.728479'); alias=default
[2025-09-21 22:24:07,734] DEBUG django.db.backends (0.016) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0166', 'Sarah', 'Jackson', '6509 McKinney Ave', 'Fort Worth', 'TX', '76102', '214-555-9894', 'sarah.jackson165@example.com', '2025-09-21 20:24:07.733096') RETURNING "customers_registeredcustomer"."id"; args=('CUST0166', 'Sarah', 'Jackson', '6509 McKinney Ave', 'Fort Worth', 'TX', '76102', '214-555-9894', 'sarah.jackson165@example.com', '2025-09-21 20:24:07.733096'); alias=default
[2025-09-21 22:24:07,738] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0167', 'John', 'Smith', '181 Commerce St', 'Frisco', 'TX', '75033', '214-555-7507', 'john.smith166@example.com', '2025-09-21 20:24:07.737810') RETURNING "customers_registeredcustomer"."id"; args=('CUST0167', 'John', 'Smith', '181 Commerce St', 'Frisco', 'TX', '75033', '214-555-7507', 'john.smith166@example.com', '2025-09-21 20:24:07.737810'); alias=default
[2025-09-21 22:24:07,743] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0168', 'Jane', 'Anderson', '1224 Maple Ave', 'Irving', 'TX', '75061', '214-555-4300', 'jane.anderson167@example.com', '2025-09-21 20:24:07.742822') RETURNING "customers_registeredcustomer"."id"; args=('CUST0168', 'Jane', 'Anderson', '1224 Maple Ave', 'Irving', 'TX', '75061', '214-555-4300', 'jane.anderson167@example.com', '2025-09-21 20:24:07.742822'); alias=default
[2025-09-21 22:24:07,749] DEBUG django.db.backends (0.015) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0169', 'Laura', 'Smith', '8179 Cedar Springs Rd', 'Fort Worth', 'TX', '76132', '214-555-1893', 'laura.smith168@example.com', '2025-09-21 20:24:07.748558') RETURNING "customers_registeredcustomer"."id"; args=('CUST0169', 'Laura', 'Smith', '8179 Cedar Springs Rd', 'Fort Worth', 'TX', '76132', '214-555-1893', 'laura.smith168@example.com', '2025-09-21 20:24:07.748558'); alias=default
[2025-09-21 22:24:07,755] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0170', 'Jane', 'Taylor', '8893 Cedar Springs Rd', 'Dallas', 'TX', '75204', '214-555-4572', 'jane.taylor169@example.com', '2025-09-21 20:24:07.754005') RETURNING "customers_registeredcustomer"."id"; args=('CUST0170', 'Jane', 'Taylor', '8893 Cedar Springs Rd', 'Dallas', 'TX', '75204', '214-555-4572', 'jane.taylor169@example.com', '2025-09-21 20:24:07.754005'); alias=default
[2025-09-21 22:24:07,760] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0171', 'David', 'White', '2439 Preston Rd', 'Fort Worth', 'TX', '76110', '214-555-7066', 'david.white170@example.com', '2025-09-21 20:24:07.759906') RETURNING "customers_registeredcustomer"."id"; args=('CUST0171', 'David', 'White', '2439 Preston Rd', 'Fort Worth', 'TX', '76110', '214-555-7066', 'david.white170@example.com', '2025-09-21 20:24:07.759906'); alias=default
[2025-09-21 22:24:07,766] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0172', 'Sarah', 'Taylor', '9623 Maple Ave', 'Grand Prairie', 'TX', '75054', '214-555-7240', 'sarah.taylor171@example.com', '2025-09-21 20:24:07.765045') RETURNING "customers_registeredcustomer"."id"; args=('CUST0172', 'Sarah', 'Taylor', '9623 Maple Ave', 'Grand Prairie', 'TX', '75054', '214-555-7240', 'sarah.taylor171@example.com', '2025-09-21 20:24:07.765045'); alias=default
[2025-09-21 22:24:07,770] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0173', 'Mike', 'Martin', '7017 Main St', 'Garland', 'TX', '75044', '214-555-9928', 'mike.martin172@example.com', '2025-09-21 20:24:07.769533') RETURNING "customers_registeredcustomer"."id"; args=('CUST0173', 'Mike', 'Martin', '7017 Main St', 'Garland', 'TX', '75044', '214-555-9928', 'mike.martin172@example.com', '2025-09-21 20:24:07.769533'); alias=default
[2025-09-21 22:24:07,775] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0174', 'Mike', 'Jackson', '4820 Elm St', 'Garland', 'TX', '75041', '214-555-7777', 'mike.jackson173@example.com', '2025-09-21 20:24:07.774243') RETURNING "customers_registeredcustomer"."id"; args=('CUST0174', 'Mike', 'Jackson', '4820 Elm St', 'Garland', 'TX', '75041', '214-555-7777', 'mike.jackson173@example.com', '2025-09-21 20:24:07.774243'); alias=default
[2025-09-21 22:24:07,780] DEBUG django.db.backends (0.016) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0175', 'David', 'Harris', '9410 Elm St', 'Dallas', 'TX', '75204', '214-555-5878', 'david.harris174@example.com', '2025-09-21 20:24:07.779855') RETURNING "customers_registeredcustomer"."id"; args=('CUST0175', 'David', 'Harris', '9410 Elm St', 'Dallas', 'TX', '75204', '214-555-5878', 'david.harris174@example.com', '2025-09-21 20:24:07.779855'); alias=default
[2025-09-21 22:24:07,785] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0176', 'Jane', 'Harris', '5294 Maple Ave', 'Richardson', 'TX', '75080', '214-555-2838', 'jane.harris175@example.com', '2025-09-21 20:24:07.784733') RETURNING "customers_registeredcustomer"."id"; args=('CUST0176', 'Jane', 'Harris', '5294 Maple Ave', 'Richardson', 'TX', '75080', '214-555-2838', 'jane.harris175@example.com', '2025-09-21 20:24:07.784733'); alias=default
[2025-09-21 22:24:07,790] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0177', 'Olivia', 'Thomas', '8237 Ross Ave', 'Irving', 'TX', '75038', '214-555-9826', 'olivia.thomas176@example.com', '2025-09-21 20:24:07.789452') RETURNING "customers_registeredcustomer"."id"; args=('CUST0177', 'Olivia', 'Thomas', '8237 Ross Ave', 'Irving', 'TX', '75038', '214-555-9826', 'olivia.thomas176@example.com', '2025-09-21 20:24:07.789452'); alias=default
[2025-09-21 22:24:07,794] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0178', 'Laura', 'Johnson', '139 Maple Ave', 'Arlington', 'TX', '76010', '214-555-5976', 'laura.johnson177@example.com', '2025-09-21 20:24:07.794060') RETURNING "customers_registeredcustomer"."id"; args=('CUST0178', 'Laura', 'Johnson', '139 Maple Ave', 'Arlington', 'TX', '76010', '214-555-5976', 'laura.johnson177@example.com', '2025-09-21 20:24:07.794060'); alias=default
[2025-09-21 22:24:07,799] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0179', 'James', 'Martin', '8431 Elm St', 'Mesquite', 'TX', '75181', '214-555-5058', 'james.martin178@example.com', '2025-09-21 20:24:07.798536') RETURNING "customers_registeredcustomer"."id"; args=('CUST0179', 'James', 'Martin', '8431 Elm St', 'Mesquite', 'TX', '75181', '214-555-5058', 'james.martin178@example.com', '2025-09-21 20:24:07.798536'); alias=default
[2025-09-21 22:24:07,805] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('CUST0180', 'Emily', 'Johnson', '8687 Main St', 'Frisco', 'TX', '75036', '214-555-1783', 'emily.johnson179@example.com', '2025-09-21 20:24:07.804420') RETURNING "customers_registeredcustomer"."id"; args=('CUST0180', 'Emily', 'Johnson', '8687 Main St', 'Frisco', 'TX', '75036', '214-555-1783', 'emily.johnson179@example.com', '2025-09-21 20:24:07.804420'); alias=default
[2025-09-21 22:25:01,024] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-21 22:25:01,080] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-21 22:25:01,084] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-21 22:25:03,877] INFO core.views Home page accessed
[2025-09-21 22:25:03,881] INFO django.server "GET / HTTP/1.1" 200 899
[2025-09-21 22:25:06,792] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-21 22:25:06,793] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-21 22:25:06,796] INFO django.server "GET /customers/ HTTP/1.1" 200 7712
[2025-09-21 22:25:19,715] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Irving%' ESCAPE '\'); args=('%Irving%', '%Irving%', '%Irving%', '%Irving%', '%Irving%'); alias=default
[2025-09-21 22:25:19,715] INFO customers.views Search performed: Irving -> 22 results
[2025-09-21 22:25:19,716] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Irving%' ESCAPE '\'); args=('%Irving%', '%Irving%', '%Irving%', '%Irving%', '%Irving%'); alias=default
[2025-09-21 22:25:19,717] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Irving%' ESCAPE '\') ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=('%Irving%', '%Irving%', '%Irving%', '%Irving%', '%Irving%'); alias=default
[2025-09-21 22:25:19,720] INFO django.server "GET /customers/?q=Irving HTTP/1.1" 200 7349
[2025-09-21 22:25:29,833] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Irving%' ESCAPE '\'); args=('%Irving%', '%Irving%', '%Irving%', '%Irving%', '%Irving%'); alias=default
[2025-09-21 22:25:29,833] INFO customers.views Search performed: Irving -> 22 results
[2025-09-21 22:25:29,834] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Irving%' ESCAPE '\'); args=('%Irving%', '%Irving%', '%Irving%', '%Irving%', '%Irving%'); alias=default
[2025-09-21 22:25:29,836] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Irving%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Irving%' ESCAPE '\') ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 10 OFFSET 12; args=('%Irving%', '%Irving%', '%Irving%', '%Irving%', '%Irving%'); alias=default
[2025-09-21 22:25:29,839] INFO django.server "GET /customers/?q=Irving&page=2 HTTP/1.1" 200 6421
[2025-09-21 22:25:38,913] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-21 22:25:38,914] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-21 22:25:38,917] INFO django.server "GET /customers/?q= HTTP/1.1" 200 7700
[2025-09-21 22:26:02,047] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-21 22:26:02,048] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12 OFFSET 12; args=(); alias=default
[2025-09-21 22:26:02,051] INFO django.server "GET /customers/?q=&page=2 HTTP/1.1" 200 7775
[2025-09-21 22:27:04,069] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-21 22:27:04,071] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12 OFFSET 24; args=(); alias=default
[2025-09-21 22:27:04,076] INFO django.server "GET /customers/?q=&page=3 HTTP/1.1" 200 7838
[2025-09-21 22:41:45,101] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-21 22:41:45,112] DEBUG django.db.backends (0.016) DELETE FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-21 22:41:45,117] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-21 22:46:09,192] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-21 22:46:09,200] DEBUG django.db.backends (0.000) DELETE FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-21 22:46:09,205] DEBUG django.db.backends (0.015) COMMIT; args=None; alias=default
[2025-09-21 22:46:09,207] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('1f4e69f8-c763-48eb-ae67-6904cc244ec2', 'Anthony', 'Wilson', '1420 Vasquez Passage', 'Lewisville', 'TX', '76843', '413-739-3644', 'anthony.wilson8598@example.com', '2025-09-21 20:46:09.206879') RETURNING "customers_registeredcustomer"."id"; args=('1f4e69f8-c763-48eb-ae67-6904cc244ec2', 'Anthony', 'Wilson', '1420 Vasquez Passage', 'Lewisville', 'TX', '76843', '413-739-3644', 'anthony.wilson8598@example.com', '2025-09-21 20:46:09.206879'); alias=default
[2025-09-21 22:46:09,214] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('0bda3256-96c4-4901-949d-e30dc18eace2', 'Sandra', 'Mitchell', '2234 Stephanie Trail', 'Grand Prairie', 'TX', '76296', '588-993-0597', 'sandra.mitchell5971@example.com', '2025-09-21 20:46:09.213028') RETURNING "customers_registeredcustomer"."id"; args=('0bda3256-96c4-4901-949d-e30dc18eace2', 'Sandra', 'Mitchell', '2234 Stephanie Trail', 'Grand Prairie', 'TX', '76296', '588-993-0597', 'sandra.mitchell5971@example.com', '2025-09-21 20:46:09.213028'); alias=default
[2025-09-21 22:46:09,220] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('44e94e5e-3988-4d66-a99e-060981f7b66b', 'Lynn', 'Williams', '7064 Smith Springs', 'Mesquite', 'TX', '79366', '601-626-7651', 'lynn.williams7841@example.com', '2025-09-21 20:46:09.219948') RETURNING "customers_registeredcustomer"."id"; args=('44e94e5e-3988-4d66-a99e-060981f7b66b', 'Lynn', 'Williams', '7064 Smith Springs', 'Mesquite', 'TX', '79366', '601-626-7651', 'lynn.williams7841@example.com', '2025-09-21 20:46:09.219948'); alias=default
[2025-09-21 22:46:09,226] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('488f7546-19fa-4ca6-a83a-ee3b46c153ec', 'Robert', 'Thomas', '6180 Debra Port', 'Dallas', 'TX', '76016', '438-316-7406', 'robert.thomas1051@example.com', '2025-09-21 20:46:09.225944') RETURNING "customers_registeredcustomer"."id"; args=('488f7546-19fa-4ca6-a83a-ee3b46c153ec', 'Robert', 'Thomas', '6180 Debra Port', 'Dallas', 'TX', '76016', '438-316-7406', 'robert.thomas1051@example.com', '2025-09-21 20:46:09.225944'); alias=default
[2025-09-21 22:46:09,247] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('75b3c744-b375-4754-be10-c96796f0cb68', 'Cheyenne', 'Jones', '470 Dustin Knoll', 'Fort Worth', 'TX', '78503', '590-766-0450', 'cheyenne.jones1120@example.com', '2025-09-21 20:46:09.246911') RETURNING "customers_registeredcustomer"."id"; args=('75b3c744-b375-4754-be10-c96796f0cb68', 'Cheyenne', 'Jones', '470 Dustin Knoll', 'Fort Worth', 'TX', '78503', '590-766-0450', 'cheyenne.jones1120@example.com', '2025-09-21 20:46:09.246911'); alias=default
[2025-09-21 22:46:09,253] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('a6f033dd-8f78-4522-ab88-4aea57aa9265', 'Timothy', 'Mathews', '1573 Paul Creek', 'Flower Mound', 'TX', '79021', '068-400-9073', 'timothy.mathews2099@example.com', '2025-09-21 20:46:09.251954') RETURNING "customers_registeredcustomer"."id"; args=('a6f033dd-8f78-4522-ab88-4aea57aa9265', 'Timothy', 'Mathews', '1573 Paul Creek', 'Flower Mound', 'TX', '79021', '068-400-9073', 'timothy.mathews2099@example.com', '2025-09-21 20:46:09.251954'); alias=default
[2025-09-21 22:46:09,258] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('f63a0fb2-6868-443d-9626-fb9973a88b7b', 'Courtney', 'Pineda', '660 Adam Harbor', 'Grapevine', 'TX', '76268', '717-030-2103', 'courtney.pineda2073@example.com', '2025-09-21 20:46:09.257650') RETURNING "customers_registeredcustomer"."id"; args=('f63a0fb2-6868-443d-9626-fb9973a88b7b', 'Courtney', 'Pineda', '660 Adam Harbor', 'Grapevine', 'TX', '76268', '717-030-2103', 'courtney.pineda2073@example.com', '2025-09-21 20:46:09.257650'); alias=default
[2025-09-21 22:46:09,263] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('1ca0f355-08b9-4440-baba-e4ea338c23d5', 'Chelsea', 'Olson', '9583 Flores Lane', 'Frisco', 'TX', '76482', '999-785-4272', 'chelsea.olson6475@example.com', '2025-09-21 20:46:09.262849') RETURNING "customers_registeredcustomer"."id"; args=('1ca0f355-08b9-4440-baba-e4ea338c23d5', 'Chelsea', 'Olson', '9583 Flores Lane', 'Frisco', 'TX', '76482', '999-785-4272', 'chelsea.olson6475@example.com', '2025-09-21 20:46:09.262849'); alias=default
[2025-09-21 22:46:09,268] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('298567c8-b8e7-407f-bb2f-987f947291e2', 'Brandon', 'Lam', '7026 Timothy Pike', 'North Richland Hills', 'TX', '76900', '739-875-3566', 'brandon.lam11@example.com', '2025-09-21 20:46:09.267835') RETURNING "customers_registeredcustomer"."id"; args=('298567c8-b8e7-407f-bb2f-987f947291e2', 'Brandon', 'Lam', '7026 Timothy Pike', 'North Richland Hills', 'TX', '76900', '739-875-3566', 'brandon.lam11@example.com', '2025-09-21 20:46:09.267835'); alias=default
[2025-09-21 22:46:09,273] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('7b76b699-f19c-4122-9261-6db49dda445f', 'Tracy', 'Turner', '6725 Claire Terrace', 'Mansfield', 'TX', '78238', '156-172-1070', 'tracy.turner8326@example.com', '2025-09-21 20:46:09.272845') RETURNING "customers_registeredcustomer"."id"; args=('7b76b699-f19c-4122-9261-6db49dda445f', 'Tracy', 'Turner', '6725 Claire Terrace', 'Mansfield', 'TX', '78238', '156-172-1070', 'tracy.turner8326@example.com', '2025-09-21 20:46:09.272845'); alias=default
[2025-09-21 22:46:09,280] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('8ef3d4ba-3a1a-41cc-8361-7eaf3c280e4d', 'Michael', 'Gonzalez', '4869 Harris Square', 'Lewisville', 'TX', '75696', '199-378-5204', 'michael.gonzalez1263@example.com', '2025-09-21 20:46:09.279404') RETURNING "customers_registeredcustomer"."id"; args=('8ef3d4ba-3a1a-41cc-8361-7eaf3c280e4d', 'Michael', 'Gonzalez', '4869 Harris Square', 'Lewisville', 'TX', '75696', '199-378-5204', 'michael.gonzalez1263@example.com', '2025-09-21 20:46:09.279404'); alias=default
[2025-09-21 22:46:09,284] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('e55c9dc1-c0c2-49fa-847a-fa31b446d4ef', 'Margaret', 'Watson', '5191 Erik Inlet', 'Richardson', 'TX', '79956', '895-811-4757', 'margaret.watson6841@example.com', '2025-09-21 20:46:09.283897') RETURNING "customers_registeredcustomer"."id"; args=('e55c9dc1-c0c2-49fa-847a-fa31b446d4ef', 'Margaret', 'Watson', '5191 Erik Inlet', 'Richardson', 'TX', '79956', '895-811-4757', 'margaret.watson6841@example.com', '2025-09-21 20:46:09.283897'); alias=default
[2025-09-21 22:46:09,290] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('8d5f03a6-1327-4b6b-9d23-3607af2fb064', 'Mark', 'Gallagher', '8818 Courtney Spring', 'North Richland Hills', 'TX', '75919', '214-928-6253', 'mark.gallagher3884@example.com', '2025-09-21 20:46:09.289175') RETURNING "customers_registeredcustomer"."id"; args=('8d5f03a6-1327-4b6b-9d23-3607af2fb064', 'Mark', 'Gallagher', '8818 Courtney Spring', 'North Richland Hills', 'TX', '75919', '214-928-6253', 'mark.gallagher3884@example.com', '2025-09-21 20:46:09.289175'); alias=default
[2025-09-21 22:46:09,295] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('9e4a5868-b932-4982-ac9e-88b08849e0c8', 'Erica', 'Gilmore', '2595 Smith Forks', 'McKinney', 'TX', '79115', '297-088-2472', 'erica.gilmore9519@example.com', '2025-09-21 20:46:09.294370') RETURNING "customers_registeredcustomer"."id"; args=('9e4a5868-b932-4982-ac9e-88b08849e0c8', 'Erica', 'Gilmore', '2595 Smith Forks', 'McKinney', 'TX', '79115', '297-088-2472', 'erica.gilmore9519@example.com', '2025-09-21 20:46:09.294370'); alias=default
[2025-09-21 22:46:09,300] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('01593b59-9d26-45de-913e-f76a7c0c5972', 'Barry', 'Reyes', '7758 Hebert Crest', 'Dallas', 'TX', '78995', '360-170-3760', 'barry.reyes1003@example.com', '2025-09-21 20:46:09.299690') RETURNING "customers_registeredcustomer"."id"; args=('01593b59-9d26-45de-913e-f76a7c0c5972', 'Barry', 'Reyes', '7758 Hebert Crest', 'Dallas', 'TX', '78995', '360-170-3760', 'barry.reyes1003@example.com', '2025-09-21 20:46:09.299690'); alias=default
[2025-09-21 22:46:09,305] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('90f8b0b3-14c6-4533-90f0-285295fb1bc2', 'Johnny', 'Contreras', '2228 Connor Skyway', 'Dallas', 'TX', '79156', '175-155-7401', 'johnny.contreras2326@example.com', '2025-09-21 20:46:09.304836') RETURNING "customers_registeredcustomer"."id"; args=('90f8b0b3-14c6-4533-90f0-285295fb1bc2', 'Johnny', 'Contreras', '2228 Connor Skyway', 'Dallas', 'TX', '79156', '175-155-7401', 'johnny.contreras2326@example.com', '2025-09-21 20:46:09.304836'); alias=default
[2025-09-21 22:46:09,312] DEBUG django.db.backends (0.016) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('83722708-5d67-4819-83a6-10a45d634805', 'Benjamin', 'Stone', '5055 Zachary Path', 'Carrollton', 'TX', '78707', '096-054-8538', 'benjamin.stone1122@example.com', '2025-09-21 20:46:09.311115') RETURNING "customers_registeredcustomer"."id"; args=('83722708-5d67-4819-83a6-10a45d634805', 'Benjamin', 'Stone', '5055 Zachary Path', 'Carrollton', 'TX', '78707', '096-054-8538', 'benjamin.stone1122@example.com', '2025-09-21 20:46:09.311115'); alias=default
[2025-09-21 22:46:09,317] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('2b75016c-85b3-4c98-826d-0295e3ef3f71', 'Holly', 'Smith', '6401 Davidson Mountain', 'Cedar Hill', 'TX', '79654', '812-074-4590', 'holly.smith2625@example.com', '2025-09-21 20:46:09.316102') RETURNING "customers_registeredcustomer"."id"; args=('2b75016c-85b3-4c98-826d-0295e3ef3f71', 'Holly', 'Smith', '6401 Davidson Mountain', 'Cedar Hill', 'TX', '79654', '812-074-4590', 'holly.smith2625@example.com', '2025-09-21 20:46:09.316102'); alias=default
[2025-09-21 22:46:09,322] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('9d2171f9-fdca-484b-bad9-27b5fd676b66', 'Sarah', 'Webb', '3371 Hogan Terrace', 'Garland', 'TX', '78852', '283-671-9067', 'sarah.webb7463@example.com', '2025-09-21 20:46:09.322216') RETURNING "customers_registeredcustomer"."id"; args=('9d2171f9-fdca-484b-bad9-27b5fd676b66', 'Sarah', 'Webb', '3371 Hogan Terrace', 'Garland', 'TX', '78852', '283-671-9067', 'sarah.webb7463@example.com', '2025-09-21 20:46:09.322216'); alias=default
[2025-09-21 22:46:09,328] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('e8d1aabd-cfcb-4b94-bc91-3972633c1fbc', 'Matthew', 'Smith', '3230 Bryce Junctions', 'Grapevine', 'TX', '77493', '583-564-6627', 'matthew.smith1677@example.com', '2025-09-21 20:46:09.327453') RETURNING "customers_registeredcustomer"."id"; args=('e8d1aabd-cfcb-4b94-bc91-3972633c1fbc', 'Matthew', 'Smith', '3230 Bryce Junctions', 'Grapevine', 'TX', '77493', '583-564-6627', 'matthew.smith1677@example.com', '2025-09-21 20:46:09.327453'); alias=default
[2025-09-21 22:46:09,333] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('09da0674-0e0d-4a42-832a-b73d0406619d', 'Karen', 'Nguyen', '1386 Bradley Rest', 'Lewisville', 'TX', '78700', '644-109-5423', 'karen.nguyen6066@example.com', '2025-09-21 20:46:09.332409') RETURNING "customers_registeredcustomer"."id"; args=('09da0674-0e0d-4a42-832a-b73d0406619d', 'Karen', 'Nguyen', '1386 Bradley Rest', 'Lewisville', 'TX', '78700', '644-109-5423', 'karen.nguyen6066@example.com', '2025-09-21 20:46:09.332409'); alias=default
[2025-09-21 22:46:09,338] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('7ecde2c8-7d68-4089-b2ce-963b13774db4', 'Wanda', 'Holland', '3633 Sherry Road', 'Mansfield', 'TX', '78192', '694-767-1377', 'wanda.holland1631@example.com', '2025-09-21 20:46:09.337529') RETURNING "customers_registeredcustomer"."id"; args=('7ecde2c8-7d68-4089-b2ce-963b13774db4', 'Wanda', 'Holland', '3633 Sherry Road', 'Mansfield', 'TX', '78192', '694-767-1377', 'wanda.holland1631@example.com', '2025-09-21 20:46:09.337529'); alias=default
[2025-09-21 22:46:09,343] DEBUG django.db.backends (0.016) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('ad2b41e5-5781-48a3-8c6f-21a300b7d4c5', 'Sheila', 'Joyce', '9603 Baldwin Gateway', 'Dallas', 'TX', '77700', '130-802-9377', 'sheila.joyce8146@example.com', '2025-09-21 20:46:09.342590') RETURNING "customers_registeredcustomer"."id"; args=('ad2b41e5-5781-48a3-8c6f-21a300b7d4c5', 'Sheila', 'Joyce', '9603 Baldwin Gateway', 'Dallas', 'TX', '77700', '130-802-9377', 'sheila.joyce8146@example.com', '2025-09-21 20:46:09.342590'); alias=default
[2025-09-21 22:46:09,358] DEBUG django.db.backends (0.016) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('0f6a2414-528c-4897-98b2-3f31d0dfc4e7', 'Mariah', 'Richard', '8172 Megan Row', 'Flower Mound', 'TX', '79823', '955-246-6067', 'mariah.richard7436@example.com', '2025-09-21 20:46:09.357956') RETURNING "customers_registeredcustomer"."id"; args=('0f6a2414-528c-4897-98b2-3f31d0dfc4e7', 'Mariah', 'Richard', '8172 Megan Row', 'Flower Mound', 'TX', '79823', '955-246-6067', 'mariah.richard7436@example.com', '2025-09-21 20:46:09.357956'); alias=default
[2025-09-21 22:46:09,366] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('e2b01bec-af07-48ee-954e-426c5a5c8d4d', 'Bradley', 'Washington', '7650 Eric Radial', 'Plano', 'TX', '76168', '915-269-6400', 'bradley.washington5210@example.com', '2025-09-21 20:46:09.364569') RETURNING "customers_registeredcustomer"."id"; args=('e2b01bec-af07-48ee-954e-426c5a5c8d4d', 'Bradley', 'Washington', '7650 Eric Radial', 'Plano', 'TX', '76168', '915-269-6400', 'bradley.washington5210@example.com', '2025-09-21 20:46:09.364569'); alias=default
[2025-09-21 22:46:09,372] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('de8e30e1-9053-4f9e-b3aa-5f30481eb742', 'David', 'Francis', '208 Mcdowell Shores', 'Grand Prairie', 'TX', '79841', '091-162-1487', 'david.francis8319@example.com', '2025-09-21 20:46:09.370231') RETURNING "customers_registeredcustomer"."id"; args=('de8e30e1-9053-4f9e-b3aa-5f30481eb742', 'David', 'Francis', '208 Mcdowell Shores', 'Grand Prairie', 'TX', '79841', '091-162-1487', 'david.francis8319@example.com', '2025-09-21 20:46:09.370231'); alias=default
[2025-09-21 22:46:09,377] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('ddd26cb3-5dd3-40b0-9138-5dfb617af4aa', 'Tiffany', 'Sullivan', '2405 Taylor Squares', 'Fort Worth', 'TX', '79699', '183-396-9475', 'tiffany.sullivan7628@example.com', '2025-09-21 20:46:09.375832') RETURNING "customers_registeredcustomer"."id"; args=('ddd26cb3-5dd3-40b0-9138-5dfb617af4aa', 'Tiffany', 'Sullivan', '2405 Taylor Squares', 'Fort Worth', 'TX', '79699', '183-396-9475', 'tiffany.sullivan7628@example.com', '2025-09-21 20:46:09.375832'); alias=default
[2025-09-21 22:46:09,382] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('8ee9dfce-b62b-4591-8f18-8d38f694409f', 'Christopher', 'Hall', '8321 Parker Gateway', 'Fort Worth', 'TX', '76537', '906-435-1170', 'christopher.hall8796@example.com', '2025-09-21 20:46:09.381039') RETURNING "customers_registeredcustomer"."id"; args=('8ee9dfce-b62b-4591-8f18-8d38f694409f', 'Christopher', 'Hall', '8321 Parker Gateway', 'Fort Worth', 'TX', '76537', '906-435-1170', 'christopher.hall8796@example.com', '2025-09-21 20:46:09.381039'); alias=default
[2025-09-21 22:46:09,388] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('f404d469-c5c3-45ca-97ea-4870988d95b6', 'Amy', 'Griffin', '3369 Pearson Forge', 'Dallas', 'TX', '78867', '154-791-4637', 'amy.griffin712@example.com', '2025-09-21 20:46:09.387163') RETURNING "customers_registeredcustomer"."id"; args=('f404d469-c5c3-45ca-97ea-4870988d95b6', 'Amy', 'Griffin', '3369 Pearson Forge', 'Dallas', 'TX', '78867', '154-791-4637', 'amy.griffin712@example.com', '2025-09-21 20:46:09.387163'); alias=default
[2025-09-21 22:46:09,393] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('7d53635c-2666-427b-a120-1365acd522db', 'Jillian', 'Bowman', '1388 Mendez Street', 'Mesquite', 'TX', '78969', '030-626-9952', 'jillian.bowman8531@example.com', '2025-09-21 20:46:09.392056') RETURNING "customers_registeredcustomer"."id"; args=('7d53635c-2666-427b-a120-1365acd522db', 'Jillian', 'Bowman', '1388 Mendez Street', 'Mesquite', 'TX', '78969', '030-626-9952', 'jillian.bowman8531@example.com', '2025-09-21 20:46:09.392056'); alias=default
[2025-09-21 22:46:09,398] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('bb860ddc-a4b7-4c95-abf5-421f6b6d410c', 'Kathy', 'Hammond', '4422 Steve Trail', 'Fort Worth', 'TX', '76193', '091-084-8428', 'kathy.hammond1995@example.com', '2025-09-21 20:46:09.398029') RETURNING "customers_registeredcustomer"."id"; args=('bb860ddc-a4b7-4c95-abf5-421f6b6d410c', 'Kathy', 'Hammond', '4422 Steve Trail', 'Fort Worth', 'TX', '76193', '091-084-8428', 'kathy.hammond1995@example.com', '2025-09-21 20:46:09.398029'); alias=default
[2025-09-21 22:46:09,403] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('7513195b-7e11-477a-9e62-6694c88e8059', 'Seth', 'Newton', '234 Carolyn Trace', 'Fort Worth', 'TX', '75775', '056-002-2451', 'seth.newton2284@example.com', '2025-09-21 20:46:09.403166') RETURNING "customers_registeredcustomer"."id"; args=('7513195b-7e11-477a-9e62-6694c88e8059', 'Seth', 'Newton', '234 Carolyn Trace', 'Fort Worth', 'TX', '75775', '056-002-2451', 'seth.newton2284@example.com', '2025-09-21 20:46:09.403166'); alias=default
[2025-09-21 22:46:09,410] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('40d89ea0-2b53-4243-87ca-6e9c322eeb93', 'Karen', 'Kirk', '7952 Jones Divide', 'Allen', 'TX', '77484', '743-270-3779', 'karen.kirk5598@example.com', '2025-09-21 20:46:09.409387') RETURNING "customers_registeredcustomer"."id"; args=('40d89ea0-2b53-4243-87ca-6e9c322eeb93', 'Karen', 'Kirk', '7952 Jones Divide', 'Allen', 'TX', '77484', '743-270-3779', 'karen.kirk5598@example.com', '2025-09-21 20:46:09.409387'); alias=default
[2025-09-21 22:46:09,435] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('a442d1b8-5419-466c-a9b4-0f861c5992d1', 'Christopher', 'Gray', '2520 Harris Cliffs', 'Lewisville', 'TX', '78931', '123-674-0865', 'christopher.gray8572@example.com', '2025-09-21 20:46:09.434365') RETURNING "customers_registeredcustomer"."id"; args=('a442d1b8-5419-466c-a9b4-0f861c5992d1', 'Christopher', 'Gray', '2520 Harris Cliffs', 'Lewisville', 'TX', '78931', '123-674-0865', 'christopher.gray8572@example.com', '2025-09-21 20:46:09.434365'); alias=default
[2025-09-21 22:46:09,442] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('bd8a5cd6-fbc0-4574-a63f-c01f92358016', 'Jennifer', 'Black', '5972 Garcia Park', 'Allen', 'TX', '75981', '944-499-3292', 'jennifer.black8838@example.com', '2025-09-21 20:46:09.441641') RETURNING "customers_registeredcustomer"."id"; args=('bd8a5cd6-fbc0-4574-a63f-c01f92358016', 'Jennifer', 'Black', '5972 Garcia Park', 'Allen', 'TX', '75981', '944-499-3292', 'jennifer.black8838@example.com', '2025-09-21 20:46:09.441641'); alias=default
[2025-09-21 22:46:09,448] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('7ad2df78-8ecc-4358-9af1-c542df538fcb', 'Christine', 'Anderson', '3663 Phillips Light', 'Irving', 'TX', '78738', '105-940-1578', 'christine.anderson6534@example.com', '2025-09-21 20:46:09.447571') RETURNING "customers_registeredcustomer"."id"; args=('7ad2df78-8ecc-4358-9af1-c542df538fcb', 'Christine', 'Anderson', '3663 Phillips Light', 'Irving', 'TX', '78738', '105-940-1578', 'christine.anderson6534@example.com', '2025-09-21 20:46:09.447571'); alias=default
[2025-09-21 22:46:09,455] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('6b706067-3e98-4aea-bcd1-cb649d3b48de', 'Juan', 'Taylor', '8778 Vega Radial', 'Lewisville', 'TX', '79979', '764-689-8161', 'juan.taylor2387@example.com', '2025-09-21 20:46:09.453291') RETURNING "customers_registeredcustomer"."id"; args=('6b706067-3e98-4aea-bcd1-cb649d3b48de', 'Juan', 'Taylor', '8778 Vega Radial', 'Lewisville', 'TX', '79979', '764-689-8161', 'juan.taylor2387@example.com', '2025-09-21 20:46:09.453291'); alias=default
[2025-09-21 22:46:09,459] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('e97671bb-6700-4020-be9c-005810778fdf', 'Gabrielle', 'Evans', '6332 Rodriguez Roads', 'Flower Mound', 'TX', '76982', '474-815-7545', 'gabrielle.evans8951@example.com', '2025-09-21 20:46:09.458711') RETURNING "customers_registeredcustomer"."id"; args=('e97671bb-6700-4020-be9c-005810778fdf', 'Gabrielle', 'Evans', '6332 Rodriguez Roads', 'Flower Mound', 'TX', '76982', '474-815-7545', 'gabrielle.evans8951@example.com', '2025-09-21 20:46:09.458711'); alias=default
[2025-09-21 22:46:09,464] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('efdf439e-092f-4520-a96a-509403f6602a', 'Nicholas', 'Carey', '9061 Anthony Mountains', 'McKinney', 'TX', '77717', '602-818-3067', 'nicholas.carey3148@example.com', '2025-09-21 20:46:09.463654') RETURNING "customers_registeredcustomer"."id"; args=('efdf439e-092f-4520-a96a-509403f6602a', 'Nicholas', 'Carey', '9061 Anthony Mountains', 'McKinney', 'TX', '77717', '602-818-3067', 'nicholas.carey3148@example.com', '2025-09-21 20:46:09.463654'); alias=default
[2025-09-21 22:46:09,470] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('d2f68a50-5304-4761-950c-4425938836eb', 'Samuel', 'Singh', '9015 Jason Views', 'Frisco', 'TX', '75640', '897-064-6099', 'samuel.singh4075@example.com', '2025-09-21 20:46:09.469075') RETURNING "customers_registeredcustomer"."id"; args=('d2f68a50-5304-4761-950c-4425938836eb', 'Samuel', 'Singh', '9015 Jason Views', 'Frisco', 'TX', '75640', '897-064-6099', 'samuel.singh4075@example.com', '2025-09-21 20:46:09.469075'); alias=default
[2025-09-21 22:46:09,477] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('a9cd8a5d-520e-4f84-a665-a876282ed7a8', 'James', 'Mendoza', '2867 Davis Plains', 'Garland', 'TX', '77579', '019-375-9474', 'james.mendoza6039@example.com', '2025-09-21 20:46:09.475550') RETURNING "customers_registeredcustomer"."id"; args=('a9cd8a5d-520e-4f84-a665-a876282ed7a8', 'James', 'Mendoza', '2867 Davis Plains', 'Garland', 'TX', '77579', '019-375-9474', 'james.mendoza6039@example.com', '2025-09-21 20:46:09.475550'); alias=default
[2025-09-21 22:46:09,482] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('744d2798-6f47-4d32-a526-ddeb3b5807e1', 'Ian', 'Jensen', '4711 Austin Extensions', 'Garland', 'TX', '78329', '927-964-7780', 'ian.jensen2492@example.com', '2025-09-21 20:46:09.481068') RETURNING "customers_registeredcustomer"."id"; args=('744d2798-6f47-4d32-a526-ddeb3b5807e1', 'Ian', 'Jensen', '4711 Austin Extensions', 'Garland', 'TX', '78329', '927-964-7780', 'ian.jensen2492@example.com', '2025-09-21 20:46:09.481068'); alias=default
[2025-09-21 22:46:09,488] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('225d8956-baab-4f9a-8e71-cf246f143012', 'Timothy', 'Hernandez', '4244 Mike Isle', 'Grapevine', 'TX', '75707', '950-796-1520', 'timothy.hernandez8583@example.com', '2025-09-21 20:46:09.487050') RETURNING "customers_registeredcustomer"."id"; args=('225d8956-baab-4f9a-8e71-cf246f143012', 'Timothy', 'Hernandez', '4244 Mike Isle', 'Grapevine', 'TX', '75707', '950-796-1520', 'timothy.hernandez8583@example.com', '2025-09-21 20:46:09.487050'); alias=default
[2025-09-21 22:46:09,495] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('c9c47522-dd9d-47c9-af8d-3670a80dd5b8', 'Francisco', 'Carter', '4697 Simon Turnpike', 'Garland', 'TX', '75803', '147-670-5357', 'francisco.carter7724@example.com', '2025-09-21 20:46:09.494046') RETURNING "customers_registeredcustomer"."id"; args=('c9c47522-dd9d-47c9-af8d-3670a80dd5b8', 'Francisco', 'Carter', '4697 Simon Turnpike', 'Garland', 'TX', '75803', '147-670-5357', 'francisco.carter7724@example.com', '2025-09-21 20:46:09.494046'); alias=default
[2025-09-21 22:46:09,501] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('93a439c1-646d-4d7d-93a7-658defcd1f54', 'Denise', 'Green', '3112 Bill Divide', 'Garland', 'TX', '76546', '091-329-0411', 'denise.green2588@example.com', '2025-09-21 20:46:09.500042') RETURNING "customers_registeredcustomer"."id"; args=('93a439c1-646d-4d7d-93a7-658defcd1f54', 'Denise', 'Green', '3112 Bill Divide', 'Garland', 'TX', '76546', '091-329-0411', 'denise.green2588@example.com', '2025-09-21 20:46:09.500042'); alias=default
[2025-09-21 22:46:09,507] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('f98f99e4-2cac-41aa-8ffe-d0d8d24220bd', 'Daniel', 'Adams', '7567 Abigail Track', 'Arlington', 'TX', '77932', '958-243-9978', 'daniel.adams379@example.com', '2025-09-21 20:46:09.506039') RETURNING "customers_registeredcustomer"."id"; args=('f98f99e4-2cac-41aa-8ffe-d0d8d24220bd', 'Daniel', 'Adams', '7567 Abigail Track', 'Arlington', 'TX', '77932', '958-243-9978', 'daniel.adams379@example.com', '2025-09-21 20:46:09.506039'); alias=default
[2025-09-21 22:46:09,513] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('554c8c89-d2e4-40cd-ae53-6ffe70d7642c', 'Tanya', 'Ferrell', '8435 Kaiser Fort', 'Mesquite', 'TX', '77624', '265-183-5760', 'tanya.ferrell4904@example.com', '2025-09-21 20:46:09.512035') RETURNING "customers_registeredcustomer"."id"; args=('554c8c89-d2e4-40cd-ae53-6ffe70d7642c', 'Tanya', 'Ferrell', '8435 Kaiser Fort', 'Mesquite', 'TX', '77624', '265-183-5760', 'tanya.ferrell4904@example.com', '2025-09-21 20:46:09.512035'); alias=default
[2025-09-21 22:46:09,519] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('0abcf29f-061c-42dc-895c-b1aa1f2d2318', 'Kimberly', 'Peterson', '4176 Lucero Route', 'Frisco', 'TX', '79507', '848-318-0942', 'kimberly.peterson4158@example.com', '2025-09-21 20:46:09.518031') RETURNING "customers_registeredcustomer"."id"; args=('0abcf29f-061c-42dc-895c-b1aa1f2d2318', 'Kimberly', 'Peterson', '4176 Lucero Route', 'Frisco', 'TX', '79507', '848-318-0942', 'kimberly.peterson4158@example.com', '2025-09-21 20:46:09.518031'); alias=default
[2025-09-21 22:46:09,525] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('2801c5d9-7141-44d9-8c58-15b96aa33b80', 'Austin', 'Webb', '5951 Roberts Courts', 'Grapevine', 'TX', '78834', '313-182-7124', 'austin.webb3784@example.com', '2025-09-21 20:46:09.524050') RETURNING "customers_registeredcustomer"."id"; args=('2801c5d9-7141-44d9-8c58-15b96aa33b80', 'Austin', 'Webb', '5951 Roberts Courts', 'Grapevine', 'TX', '78834', '313-182-7124', 'austin.webb3784@example.com', '2025-09-21 20:46:09.524050'); alias=default
[2025-09-21 22:46:09,532] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('cf4aa22b-2d64-470a-9ef7-5829dd40a94f', 'Brittany', 'Morales', '5693 Daniel Plains', 'Allen', 'TX', '77439', '254-803-9390', 'brittany.morales5156@example.com', '2025-09-21 20:46:09.531024') RETURNING "customers_registeredcustomer"."id"; args=('cf4aa22b-2d64-470a-9ef7-5829dd40a94f', 'Brittany', 'Morales', '5693 Daniel Plains', 'Allen', 'TX', '77439', '254-803-9390', 'brittany.morales5156@example.com', '2025-09-21 20:46:09.531024'); alias=default
[2025-09-21 22:46:09,538] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('1ae4f655-6e89-459a-8f57-98bbc6bf023c', 'Jennifer', 'Wolf', '9182 Gregory Crossroad', 'Cedar Hill', 'TX', '75951', '068-505-6397', 'jennifer.wolf9491@example.com', '2025-09-21 20:46:09.537021') RETURNING "customers_registeredcustomer"."id"; args=('1ae4f655-6e89-459a-8f57-98bbc6bf023c', 'Jennifer', 'Wolf', '9182 Gregory Crossroad', 'Cedar Hill', 'TX', '75951', '068-505-6397', 'jennifer.wolf9491@example.com', '2025-09-21 20:46:09.537021'); alias=default
[2025-09-21 22:46:09,546] DEBUG django.db.backends (0.015) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('5c9b2668-636c-4d1b-a54e-a4ffa70f0164', 'Eric', 'Fisher', '8097 Carla Fords', 'Carrollton', 'TX', '77459', '113-790-2470', 'eric.fisher3080@example.com', '2025-09-21 20:46:09.545019') RETURNING "customers_registeredcustomer"."id"; args=('5c9b2668-636c-4d1b-a54e-a4ffa70f0164', 'Eric', 'Fisher', '8097 Carla Fords', 'Carrollton', 'TX', '77459', '113-790-2470', 'eric.fisher3080@example.com', '2025-09-21 20:46:09.545019'); alias=default
[2025-09-21 22:46:09,552] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('16536741-3d21-4e89-bbd4-9951798d00fa', 'Sara', 'Whitney', '3878 Simpson Roads', 'Arlington', 'TX', '77771', '424-698-0425', 'sara.whitney7917@example.com', '2025-09-21 20:46:09.551019') RETURNING "customers_registeredcustomer"."id"; args=('16536741-3d21-4e89-bbd4-9951798d00fa', 'Sara', 'Whitney', '3878 Simpson Roads', 'Arlington', 'TX', '77771', '424-698-0425', 'sara.whitney7917@example.com', '2025-09-21 20:46:09.551019'); alias=default
[2025-09-21 22:46:09,557] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('146d4979-cdf0-44cd-b23c-0a15f9b9aa22', 'Cheryl', 'Stone', '229 Shaffer Mission', 'Flower Mound', 'TX', '79373', '419-133-5066', 'cheryl.stone4758@example.com', '2025-09-21 20:46:09.556386') RETURNING "customers_registeredcustomer"."id"; args=('146d4979-cdf0-44cd-b23c-0a15f9b9aa22', 'Cheryl', 'Stone', '229 Shaffer Mission', 'Flower Mound', 'TX', '79373', '419-133-5066', 'cheryl.stone4758@example.com', '2025-09-21 20:46:09.556386'); alias=default
[2025-09-21 22:46:09,563] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('2ad56383-1ac7-4e4b-93e1-56e57df631bf', 'Peggy', 'Williams', '6940 Warren Squares', 'Irving', 'TX', '76761', '227-606-0538', 'peggy.williams3074@example.com', '2025-09-21 20:46:09.561670') RETURNING "customers_registeredcustomer"."id"; args=('2ad56383-1ac7-4e4b-93e1-56e57df631bf', 'Peggy', 'Williams', '6940 Warren Squares', 'Irving', 'TX', '76761', '227-606-0538', 'peggy.williams3074@example.com', '2025-09-21 20:46:09.561670'); alias=default
[2025-09-21 22:46:09,567] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('f0ca8fd2-c54f-4cb9-9bb5-b26640746bd5', 'Tyler', 'Carpenter', '4008 Breanna Lakes', 'Garland', 'TX', '75880', '554-773-8292', 'tyler.carpenter5648@example.com', '2025-09-21 20:46:09.566967') RETURNING "customers_registeredcustomer"."id"; args=('f0ca8fd2-c54f-4cb9-9bb5-b26640746bd5', 'Tyler', 'Carpenter', '4008 Breanna Lakes', 'Garland', 'TX', '75880', '554-773-8292', 'tyler.carpenter5648@example.com', '2025-09-21 20:46:09.566967'); alias=default
[2025-09-21 22:46:09,573] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('0e8f4384-c5ed-4a66-a475-fe03dd9cdd84', 'Susan', 'Gregory', '8604 Michael Inlet', 'Grand Prairie', 'TX', '78894', '646-659-1968', 'susan.gregory6958@example.com', '2025-09-21 20:46:09.572965') RETURNING "customers_registeredcustomer"."id"; args=('0e8f4384-c5ed-4a66-a475-fe03dd9cdd84', 'Susan', 'Gregory', '8604 Michael Inlet', 'Grand Prairie', 'TX', '78894', '646-659-1968', 'susan.gregory6958@example.com', '2025-09-21 20:46:09.572965'); alias=default
[2025-09-21 22:46:09,578] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('aec646ed-fe56-4cfa-95eb-09aa8b455cda', 'Erik', 'Madden', '7602 Lisa Motorway', 'Mesquite', 'TX', '78324', '827-248-0224', 'erik.madden6950@example.com', '2025-09-21 20:46:09.577964') RETURNING "customers_registeredcustomer"."id"; args=('aec646ed-fe56-4cfa-95eb-09aa8b455cda', 'Erik', 'Madden', '7602 Lisa Motorway', 'Mesquite', 'TX', '78324', '827-248-0224', 'erik.madden6950@example.com', '2025-09-21 20:46:09.577964'); alias=default
[2025-09-21 22:46:09,584] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('57645343-28a7-4484-a464-5f13cdc2ce7b', 'Emma', 'Keller', '9408 Sean Brooks', 'Grand Prairie', 'TX', '77586', '587-962-5586', 'emma.keller7532@example.com', '2025-09-21 20:46:09.583959') RETURNING "customers_registeredcustomer"."id"; args=('57645343-28a7-4484-a464-5f13cdc2ce7b', 'Emma', 'Keller', '9408 Sean Brooks', 'Grand Prairie', 'TX', '77586', '587-962-5586', 'emma.keller7532@example.com', '2025-09-21 20:46:09.583959'); alias=default
[2025-09-21 22:46:09,589] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('92ee983b-72e2-4f56-a2e5-cfea6bade05b', 'Kimberly', 'Grimes', '3816 Janice Fort', 'Mesquite', 'TX', '78579', '003-366-2588', 'kimberly.grimes6925@example.com', '2025-09-21 20:46:09.588956') RETURNING "customers_registeredcustomer"."id"; args=('92ee983b-72e2-4f56-a2e5-cfea6bade05b', 'Kimberly', 'Grimes', '3816 Janice Fort', 'Mesquite', 'TX', '78579', '003-366-2588', 'kimberly.grimes6925@example.com', '2025-09-21 20:46:09.588956'); alias=default
[2025-09-21 22:46:09,594] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('1baf2ade-7efb-45d2-8a6b-10a56997480a', 'Tammy', 'Rodriguez', '6573 Natasha Meadows', 'Fort Worth', 'TX', '79492', '876-543-9971', 'tammy.rodriguez1306@example.com', '2025-09-21 20:46:09.594953') RETURNING "customers_registeredcustomer"."id"; args=('1baf2ade-7efb-45d2-8a6b-10a56997480a', 'Tammy', 'Rodriguez', '6573 Natasha Meadows', 'Fort Worth', 'TX', '79492', '876-543-9971', 'tammy.rodriguez1306@example.com', '2025-09-21 20:46:09.594953'); alias=default
[2025-09-21 22:46:09,599] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('d0efc475-edca-4b3a-8156-1aa5ba0a23ba', 'Courtney', 'Foster', '6635 Patel Harbors', 'Lewisville', 'TX', '77195', '079-487-2027', 'courtney.foster967@example.com', '2025-09-21 20:46:09.599950') RETURNING "customers_registeredcustomer"."id"; args=('d0efc475-edca-4b3a-8156-1aa5ba0a23ba', 'Courtney', 'Foster', '6635 Patel Harbors', 'Lewisville', 'TX', '77195', '079-487-2027', 'courtney.foster967@example.com', '2025-09-21 20:46:09.599950'); alias=default
[2025-09-21 22:46:09,606] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('544d9721-9042-45cc-8c60-0c750ced0ae2', 'Mark', 'Gonzalez', '3625 Church Village', 'Carrollton', 'TX', '78266', '690-622-2317', 'mark.gonzalez5117@example.com', '2025-09-21 20:46:09.605961') RETURNING "customers_registeredcustomer"."id"; args=('544d9721-9042-45cc-8c60-0c750ced0ae2', 'Mark', 'Gonzalez', '3625 Church Village', 'Carrollton', 'TX', '78266', '690-622-2317', 'mark.gonzalez5117@example.com', '2025-09-21 20:46:09.605961'); alias=default
[2025-09-21 22:46:09,612] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('cdae1c06-ffdb-42da-b0f2-cce72eb05b2f', 'Robert', 'Walter', '2310 Hansen Common', 'Richardson', 'TX', '76999', '648-438-2704', 'robert.walter8227@example.com', '2025-09-21 20:46:09.611509') RETURNING "customers_registeredcustomer"."id"; args=('cdae1c06-ffdb-42da-b0f2-cce72eb05b2f', 'Robert', 'Walter', '2310 Hansen Common', 'Richardson', 'TX', '76999', '648-438-2704', 'robert.walter8227@example.com', '2025-09-21 20:46:09.611509'); alias=default
[2025-09-21 22:46:09,617] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('744ca76f-410a-45f9-8875-51f64d032bbf', 'Kelly', 'Williams', '3389 George Islands', 'Fort Worth', 'TX', '76798', '486-195-0273', 'kelly.williams184@example.com', '2025-09-21 20:46:09.616787') RETURNING "customers_registeredcustomer"."id"; args=('744ca76f-410a-45f9-8875-51f64d032bbf', 'Kelly', 'Williams', '3389 George Islands', 'Fort Worth', 'TX', '76798', '486-195-0273', 'kelly.williams184@example.com', '2025-09-21 20:46:09.616787'); alias=default
[2025-09-21 22:46:09,623] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('1ab398b2-5d32-4bc3-9057-3028691120e8', 'Fernando', 'Freeman', '3066 Richard Locks', 'North Richland Hills', 'TX', '76802', '863-466-2274', 'fernando.freeman62@example.com', '2025-09-21 20:46:09.623068') RETURNING "customers_registeredcustomer"."id"; args=('1ab398b2-5d32-4bc3-9057-3028691120e8', 'Fernando', 'Freeman', '3066 Richard Locks', 'North Richland Hills', 'TX', '76802', '863-466-2274', 'fernando.freeman62@example.com', '2025-09-21 20:46:09.623068'); alias=default
[2025-09-21 22:46:09,628] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('6b809757-0997-4aa2-b6b7-fd9cacdc553d', 'John', 'Lin', '8171 Alvarez Mission', 'Frisco', 'TX', '79064', '500-524-5202', 'john.lin6636@example.com', '2025-09-21 20:46:09.627466') RETURNING "customers_registeredcustomer"."id"; args=('6b809757-0997-4aa2-b6b7-fd9cacdc553d', 'John', 'Lin', '8171 Alvarez Mission', 'Frisco', 'TX', '79064', '500-524-5202', 'john.lin6636@example.com', '2025-09-21 20:46:09.627466'); alias=default
[2025-09-21 22:46:09,633] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('111e2388-f108-4be6-bfd3-b0332b56dd98', 'Megan', 'Hernandez', '982 Lowery Ports', 'Allen', 'TX', '76141', '494-334-8526', 'megan.hernandez7169@example.com', '2025-09-21 20:46:09.632472') RETURNING "customers_registeredcustomer"."id"; args=('111e2388-f108-4be6-bfd3-b0332b56dd98', 'Megan', 'Hernandez', '982 Lowery Ports', 'Allen', 'TX', '76141', '494-334-8526', 'megan.hernandez7169@example.com', '2025-09-21 20:46:09.632472'); alias=default
[2025-09-21 22:46:09,639] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('51248230-ccd7-47b6-8053-111f81380056', 'Brittany', 'Calhoun', '3687 Lauren Dale', 'Denton', 'TX', '75584', '467-936-4620', 'brittany.calhoun1597@example.com', '2025-09-21 20:46:09.638483') RETURNING "customers_registeredcustomer"."id"; args=('51248230-ccd7-47b6-8053-111f81380056', 'Brittany', 'Calhoun', '3687 Lauren Dale', 'Denton', 'TX', '75584', '467-936-4620', 'brittany.calhoun1597@example.com', '2025-09-21 20:46:09.638483'); alias=default
[2025-09-21 22:46:09,646] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('bc9c7e4f-5f1c-4cdb-86e7-f9ace819b517', 'Sarah', 'Rodgers', '8337 Allen View', 'Dallas', 'TX', '79122', '673-918-0836', 'sarah.rodgers7977@example.com', '2025-09-21 20:46:09.644480') RETURNING "customers_registeredcustomer"."id"; args=('bc9c7e4f-5f1c-4cdb-86e7-f9ace819b517', 'Sarah', 'Rodgers', '8337 Allen View', 'Dallas', 'TX', '79122', '673-918-0836', 'sarah.rodgers7977@example.com', '2025-09-21 20:46:09.644480'); alias=default
[2025-09-21 22:46:09,650] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('a883c2f1-ca62-45b7-8a05-ceda039b7255', 'Theresa', 'Anderson', '4924 Jones Points', 'Grapevine', 'TX', '78088', '606-820-0050', 'theresa.anderson7221@example.com', '2025-09-21 20:46:09.650484') RETURNING "customers_registeredcustomer"."id"; args=('a883c2f1-ca62-45b7-8a05-ceda039b7255', 'Theresa', 'Anderson', '4924 Jones Points', 'Grapevine', 'TX', '78088', '606-820-0050', 'theresa.anderson7221@example.com', '2025-09-21 20:46:09.650484'); alias=default
[2025-09-21 22:46:09,656] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('80475652-2037-4c6d-a170-47c5e6852eec', 'David', 'Perry', '7451 Timothy Cliff', 'Grapevine', 'TX', '77297', '321-909-8712', 'david.perry4076@example.com', '2025-09-21 20:46:09.655484') RETURNING "customers_registeredcustomer"."id"; args=('80475652-2037-4c6d-a170-47c5e6852eec', 'David', 'Perry', '7451 Timothy Cliff', 'Grapevine', 'TX', '77297', '321-909-8712', 'david.perry4076@example.com', '2025-09-21 20:46:09.655484'); alias=default
[2025-09-21 22:46:09,662] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('a399df0e-83ce-4017-8b9a-efe9cc51f762', 'Jaclyn', 'Hicks', '741 Evelyn Plaza', 'North Richland Hills', 'TX', '79421', '806-805-6997', 'jaclyn.hicks7797@example.com', '2025-09-21 20:46:09.661503') RETURNING "customers_registeredcustomer"."id"; args=('a399df0e-83ce-4017-8b9a-efe9cc51f762', 'Jaclyn', 'Hicks', '741 Evelyn Plaza', 'North Richland Hills', 'TX', '79421', '806-805-6997', 'jaclyn.hicks7797@example.com', '2025-09-21 20:46:09.661503'); alias=default
[2025-09-21 22:46:09,667] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('6f54fa85-17ba-4766-abfa-2d4e6b6afdfe', 'Michelle', 'Sanders', '6188 Susan Stravenue', 'Plano', 'TX', '75568', '174-238-2530', 'michelle.sanders5502@example.com', '2025-09-21 20:46:09.666490') RETURNING "customers_registeredcustomer"."id"; args=('6f54fa85-17ba-4766-abfa-2d4e6b6afdfe', 'Michelle', 'Sanders', '6188 Susan Stravenue', 'Plano', 'TX', '75568', '174-238-2530', 'michelle.sanders5502@example.com', '2025-09-21 20:46:09.666490'); alias=default
[2025-09-21 22:46:09,673] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('ffa544c6-3939-4eca-8b35-798b015b537e', 'April', 'Hansen', '1649 Moore Lane', 'Garland', 'TX', '76766', '922-860-4764', 'april.hansen8310@example.com', '2025-09-21 20:46:09.672425') RETURNING "customers_registeredcustomer"."id"; args=('ffa544c6-3939-4eca-8b35-798b015b537e', 'April', 'Hansen', '1649 Moore Lane', 'Garland', 'TX', '76766', '922-860-4764', 'april.hansen8310@example.com', '2025-09-21 20:46:09.672425'); alias=default
[2025-09-21 22:46:09,678] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('d6d82321-42c8-4d2c-80bf-784552a3cc71', 'Lance', 'Joseph', '2612 Ryan Villages', 'Flower Mound', 'TX', '75760', '038-874-4545', 'lance.joseph3335@example.com', '2025-09-21 20:46:09.677662') RETURNING "customers_registeredcustomer"."id"; args=('d6d82321-42c8-4d2c-80bf-784552a3cc71', 'Lance', 'Joseph', '2612 Ryan Villages', 'Flower Mound', 'TX', '75760', '038-874-4545', 'lance.joseph3335@example.com', '2025-09-21 20:46:09.677662'); alias=default
[2025-09-21 22:46:09,683] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('094dfed6-00a4-488b-86cf-9cfedfb4792f', 'Brian', 'Vega', '5510 Peter Mission', 'Grapevine', 'TX', '78016', '619-866-6369', 'brian.vega3150@example.com', '2025-09-21 20:46:09.682867') RETURNING "customers_registeredcustomer"."id"; args=('094dfed6-00a4-488b-86cf-9cfedfb4792f', 'Brian', 'Vega', '5510 Peter Mission', 'Grapevine', 'TX', '78016', '619-866-6369', 'brian.vega3150@example.com', '2025-09-21 20:46:09.682867'); alias=default
[2025-09-21 22:46:09,689] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('35e98aba-7303-49fd-9ee6-47784d4e33fb', 'Jennifer', 'Perry', '6503 Stevenson Highway', 'Garland', 'TX', '78274', '317-402-9834', 'jennifer.perry2866@example.com', '2025-09-21 20:46:09.688374') RETURNING "customers_registeredcustomer"."id"; args=('35e98aba-7303-49fd-9ee6-47784d4e33fb', 'Jennifer', 'Perry', '6503 Stevenson Highway', 'Garland', 'TX', '78274', '317-402-9834', 'jennifer.perry2866@example.com', '2025-09-21 20:46:09.688374'); alias=default
[2025-09-21 22:46:09,694] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('77f40b86-0aa3-4fb6-8b48-6e42dc9c69cd', 'Andrew', 'Black', '1525 Brianna Isle', 'Grand Prairie', 'TX', '77511', '049-837-6340', 'andrew.black1861@example.com', '2025-09-21 20:46:09.693507') RETURNING "customers_registeredcustomer"."id"; args=('77f40b86-0aa3-4fb6-8b48-6e42dc9c69cd', 'Andrew', 'Black', '1525 Brianna Isle', 'Grand Prairie', 'TX', '77511', '049-837-6340', 'andrew.black1861@example.com', '2025-09-21 20:46:09.693507'); alias=default
[2025-09-21 22:46:09,699] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('8d44e37d-5c6a-4c5c-ab3b-0acaa8efc835', 'Christopher', 'Wilkerson', '5691 Jensen Route', 'Irving', 'TX', '79259', '035-119-8531', 'christopher.wilkerson665@example.com', '2025-09-21 20:46:09.698722') RETURNING "customers_registeredcustomer"."id"; args=('8d44e37d-5c6a-4c5c-ab3b-0acaa8efc835', 'Christopher', 'Wilkerson', '5691 Jensen Route', 'Irving', 'TX', '79259', '035-119-8531', 'christopher.wilkerson665@example.com', '2025-09-21 20:46:09.698722'); alias=default
[2025-09-21 22:46:09,705] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('489c6650-366f-4e45-8067-0f7817123f45', 'Stephen', 'Franklin', '1734 John Hill', 'Garland', 'TX', '76617', '327-200-4498', 'stephen.franklin2453@example.com', '2025-09-21 20:46:09.703735') RETURNING "customers_registeredcustomer"."id"; args=('489c6650-366f-4e45-8067-0f7817123f45', 'Stephen', 'Franklin', '1734 John Hill', 'Garland', 'TX', '76617', '327-200-4498', 'stephen.franklin2453@example.com', '2025-09-21 20:46:09.703735'); alias=default
[2025-09-21 22:46:09,710] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('7443c202-70a2-48a3-a3aa-8bcb31aa3d73', 'Derek', 'Smith', '1067 Logan Wells', 'Fort Worth', 'TX', '78666', '663-075-0060', 'derek.smith2013@example.com', '2025-09-21 20:46:09.709697') RETURNING "customers_registeredcustomer"."id"; args=('7443c202-70a2-48a3-a3aa-8bcb31aa3d73', 'Derek', 'Smith', '1067 Logan Wells', 'Fort Worth', 'TX', '78666', '663-075-0060', 'derek.smith2013@example.com', '2025-09-21 20:46:09.709697'); alias=default
[2025-09-21 22:46:09,715] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('a0d8529f-3591-4f8b-994b-4fe0c059ce20', 'James', 'Tran', '5812 Alexandra Drive', 'Lewisville', 'TX', '79676', '823-586-8443', 'james.tran6755@example.com', '2025-09-21 20:46:09.714763') RETURNING "customers_registeredcustomer"."id"; args=('a0d8529f-3591-4f8b-994b-4fe0c059ce20', 'James', 'Tran', '5812 Alexandra Drive', 'Lewisville', 'TX', '79676', '823-586-8443', 'james.tran6755@example.com', '2025-09-21 20:46:09.714763'); alias=default
[2025-09-21 22:46:09,720] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('290180c0-7c50-42bf-a143-d436d6b61055', 'John', 'Luna', '488 Joshua Station', 'Arlington', 'TX', '79707', '784-327-3435', 'john.luna8927@example.com', '2025-09-21 20:46:09.719649') RETURNING "customers_registeredcustomer"."id"; args=('290180c0-7c50-42bf-a143-d436d6b61055', 'John', 'Luna', '488 Joshua Station', 'Arlington', 'TX', '79707', '784-327-3435', 'john.luna8927@example.com', '2025-09-21 20:46:09.719649'); alias=default
[2025-09-21 22:46:09,725] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('7a59eac8-00ae-428b-878c-4093697cf7e9', 'Johnny', 'Herring', '6834 Lisa Ferry', 'Frisco', 'TX', '79512', '351-445-9755', 'johnny.herring5077@example.com', '2025-09-21 20:46:09.725699') RETURNING "customers_registeredcustomer"."id"; args=('7a59eac8-00ae-428b-878c-4093697cf7e9', 'Johnny', 'Herring', '6834 Lisa Ferry', 'Frisco', 'TX', '79512', '351-445-9755', 'johnny.herring5077@example.com', '2025-09-21 20:46:09.725699'); alias=default
[2025-09-21 22:46:09,731] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('5be588ec-f641-468d-a350-616b3c5f41cf', 'Tracey', 'Harris', '2137 Jason Rapids', 'Arlington', 'TX', '77164', '913-595-3871', 'tracey.harris837@example.com', '2025-09-21 20:46:09.730553') RETURNING "customers_registeredcustomer"."id"; args=('5be588ec-f641-468d-a350-616b3c5f41cf', 'Tracey', 'Harris', '2137 Jason Rapids', 'Arlington', 'TX', '77164', '913-595-3871', 'tracey.harris837@example.com', '2025-09-21 20:46:09.730553'); alias=default
[2025-09-21 22:46:09,737] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('d1162e5a-ac00-4390-be85-413c472a21dd', 'Stephanie', 'Adams', '8823 Lawrence Drives', 'Irving', 'TX', '79788', '546-243-2386', 'stephanie.adams2804@example.com', '2025-09-21 20:46:09.736542') RETURNING "customers_registeredcustomer"."id"; args=('d1162e5a-ac00-4390-be85-413c472a21dd', 'Stephanie', 'Adams', '8823 Lawrence Drives', 'Irving', 'TX', '79788', '546-243-2386', 'stephanie.adams2804@example.com', '2025-09-21 20:46:09.736542'); alias=default
[2025-09-21 22:46:09,742] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('73c43469-1c4c-4c57-ab2d-5fa2a25d0ec8', 'Douglas', 'Graves', '8208 Sarah Stream', 'North Richland Hills', 'TX', '79366', '800-585-7551', 'douglas.graves2881@example.com', '2025-09-21 20:46:09.741515') RETURNING "customers_registeredcustomer"."id"; args=('73c43469-1c4c-4c57-ab2d-5fa2a25d0ec8', 'Douglas', 'Graves', '8208 Sarah Stream', 'North Richland Hills', 'TX', '79366', '800-585-7551', 'douglas.graves2881@example.com', '2025-09-21 20:46:09.741515'); alias=default
[2025-09-21 22:46:09,747] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('f06d8029-5b3d-4b77-acfc-b9b55817c812', 'Laura', 'Cooper', '7121 Johnson Highway', 'North Richland Hills', 'TX', '79587', '411-212-3209', 'laura.cooper4448@example.com', '2025-09-21 20:46:09.746495') RETURNING "customers_registeredcustomer"."id"; args=('f06d8029-5b3d-4b77-acfc-b9b55817c812', 'Laura', 'Cooper', '7121 Johnson Highway', 'North Richland Hills', 'TX', '79587', '411-212-3209', 'laura.cooper4448@example.com', '2025-09-21 20:46:09.746495'); alias=default
[2025-09-21 22:46:09,752] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('82f6890c-b2e8-4589-b6e5-41dde05554e8', 'David', 'Holden', '9540 House Coves', 'Plano', 'TX', '76921', '551-241-4484', 'david.holden1370@example.com', '2025-09-21 20:46:09.752594') RETURNING "customers_registeredcustomer"."id"; args=('82f6890c-b2e8-4589-b6e5-41dde05554e8', 'David', 'Holden', '9540 House Coves', 'Plano', 'TX', '76921', '551-241-4484', 'david.holden1370@example.com', '2025-09-21 20:46:09.752594'); alias=default
[2025-09-21 22:46:09,758] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('8af8003a-d7a2-4b16-af14-67efc3174189', 'Kristen', 'Crawford', '4569 Sarah Bypass', 'McKinney', 'TX', '77769', '142-062-5131', 'kristen.crawford3221@example.com', '2025-09-21 20:46:09.757006') RETURNING "customers_registeredcustomer"."id"; args=('8af8003a-d7a2-4b16-af14-67efc3174189', 'Kristen', 'Crawford', '4569 Sarah Bypass', 'McKinney', 'TX', '77769', '142-062-5131', 'kristen.crawford3221@example.com', '2025-09-21 20:46:09.757006'); alias=default
[2025-09-21 22:46:09,763] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('6122bda4-b486-446f-b79b-f14bf3fc7492', 'Christine', 'Thompson', '4616 Miller Knolls', 'North Richland Hills', 'TX', '75747', '024-304-0156', 'christine.thompson67@example.com', '2025-09-21 20:46:09.762519') RETURNING "customers_registeredcustomer"."id"; args=('6122bda4-b486-446f-b79b-f14bf3fc7492', 'Christine', 'Thompson', '4616 Miller Knolls', 'North Richland Hills', 'TX', '75747', '024-304-0156', 'christine.thompson67@example.com', '2025-09-21 20:46:09.762519'); alias=default
[2025-09-21 22:46:09,769] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('2021801f-9d6d-4b08-a15f-e34480cc08e9', 'Michael', 'Perez', '8761 Tammy Center', 'Frisco', 'TX', '78290', '823-020-2443', 'michael.perez8069@example.com', '2025-09-21 20:46:09.768597') RETURNING "customers_registeredcustomer"."id"; args=('2021801f-9d6d-4b08-a15f-e34480cc08e9', 'Michael', 'Perez', '8761 Tammy Center', 'Frisco', 'TX', '78290', '823-020-2443', 'michael.perez8069@example.com', '2025-09-21 20:46:09.768597'); alias=default
[2025-09-21 22:46:09,774] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('acfcf38f-e168-4f7b-82fa-b95ba3ea5b4c', 'Christopher', 'Farrell', '2136 Jessica Pine', 'Fort Worth', 'TX', '78192', '626-605-9893', 'christopher.farrell6382@example.com', '2025-09-21 20:46:09.773396') RETURNING "customers_registeredcustomer"."id"; args=('acfcf38f-e168-4f7b-82fa-b95ba3ea5b4c', 'Christopher', 'Farrell', '2136 Jessica Pine', 'Fort Worth', 'TX', '78192', '626-605-9893', 'christopher.farrell6382@example.com', '2025-09-21 20:46:09.773396'); alias=default
[2025-09-21 22:46:09,779] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('a183a923-b24d-4326-925b-fe93dab2d837', 'Candice', 'Scott', '6598 Dale Mills', 'Denton', 'TX', '78846', '187-515-0724', 'candice.scott508@example.com', '2025-09-21 20:46:09.778543') RETURNING "customers_registeredcustomer"."id"; args=('a183a923-b24d-4326-925b-fe93dab2d837', 'Candice', 'Scott', '6598 Dale Mills', 'Denton', 'TX', '78846', '187-515-0724', 'candice.scott508@example.com', '2025-09-21 20:46:09.778543'); alias=default
[2025-09-21 22:46:09,784] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('9ded63e4-9620-4854-85b1-67072f6eb8ff', 'Elizabeth', 'Gould', '706 Keith Springs', 'Plano', 'TX', '78423', '418-570-3574', 'elizabeth.gould5301@example.com', '2025-09-21 20:46:09.784488') RETURNING "customers_registeredcustomer"."id"; args=('9ded63e4-9620-4854-85b1-67072f6eb8ff', 'Elizabeth', 'Gould', '706 Keith Springs', 'Plano', 'TX', '78423', '418-570-3574', 'elizabeth.gould5301@example.com', '2025-09-21 20:46:09.784488'); alias=default
[2025-09-21 22:46:09,790] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('d4d467be-173e-4f66-8518-941a97cf7613', 'Kimberly', 'Armstrong', '4806 Sandoval Isle', 'Frisco', 'TX', '75956', '555-735-3161', 'kimberly.armstrong2696@example.com', '2025-09-21 20:46:09.789435') RETURNING "customers_registeredcustomer"."id"; args=('d4d467be-173e-4f66-8518-941a97cf7613', 'Kimberly', 'Armstrong', '4806 Sandoval Isle', 'Frisco', 'TX', '75956', '555-735-3161', 'kimberly.armstrong2696@example.com', '2025-09-21 20:46:09.789435'); alias=default
[2025-09-21 22:46:09,796] DEBUG django.db.backends (0.015) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('77794cbf-e98c-4c82-9a5f-c4bcad0eaa70', 'Jason', 'Harris', '2812 Christopher Cliffs', 'Carrollton', 'TX', '78407', '795-991-5562', 'jason.harris8831@example.com', '2025-09-21 20:46:09.795131') RETURNING "customers_registeredcustomer"."id"; args=('77794cbf-e98c-4c82-9a5f-c4bcad0eaa70', 'Jason', 'Harris', '2812 Christopher Cliffs', 'Carrollton', 'TX', '78407', '795-991-5562', 'jason.harris8831@example.com', '2025-09-21 20:46:09.795131'); alias=default
[2025-09-21 22:46:09,801] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('89df2f0a-f05a-4713-8090-b417fa6138c0', 'Mark', 'Stokes', '8676 Patrick Locks', 'Dallas', 'TX', '78057', '768-853-7644', 'mark.stokes3974@example.com', '2025-09-21 20:46:09.800099') RETURNING "customers_registeredcustomer"."id"; args=('89df2f0a-f05a-4713-8090-b417fa6138c0', 'Mark', 'Stokes', '8676 Patrick Locks', 'Dallas', 'TX', '78057', '768-853-7644', 'mark.stokes3974@example.com', '2025-09-21 20:46:09.800099'); alias=default
[2025-09-21 22:46:09,806] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('428c4581-8169-4ba5-84d3-b1a958fca61f', 'Ashley', 'Choi', '2830 Alison Meadow', 'Allen', 'TX', '77298', '073-216-4670', 'ashley.choi7130@example.com', '2025-09-21 20:46:09.805157') RETURNING "customers_registeredcustomer"."id"; args=('428c4581-8169-4ba5-84d3-b1a958fca61f', 'Ashley', 'Choi', '2830 Alison Meadow', 'Allen', 'TX', '77298', '073-216-4670', 'ashley.choi7130@example.com', '2025-09-21 20:46:09.805157'); alias=default
[2025-09-21 22:46:09,811] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('8251a23e-671c-4214-987f-d2eeae7aa0fa', 'April', 'Obrien', '1162 Baker Junctions', 'Plano', 'TX', '78423', '287-276-9047', 'april.obrien7760@example.com', '2025-09-21 20:46:09.810027') RETURNING "customers_registeredcustomer"."id"; args=('8251a23e-671c-4214-987f-d2eeae7aa0fa', 'April', 'Obrien', '1162 Baker Junctions', 'Plano', 'TX', '78423', '287-276-9047', 'april.obrien7760@example.com', '2025-09-21 20:46:09.810027'); alias=default
[2025-09-21 22:46:09,816] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('d7729106-4a8a-4fa2-80cf-8a7ddc9bf2f7', 'Bill', 'Johnson', '4966 Edwards Groves', 'Frisco', 'TX', '77466', '433-554-8800', 'bill.johnson4864@example.com', '2025-09-21 20:46:09.815333') RETURNING "customers_registeredcustomer"."id"; args=('d7729106-4a8a-4fa2-80cf-8a7ddc9bf2f7', 'Bill', 'Johnson', '4966 Edwards Groves', 'Frisco', 'TX', '77466', '433-554-8800', 'bill.johnson4864@example.com', '2025-09-21 20:46:09.815333'); alias=default
[2025-09-21 22:46:09,822] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('e4d95a1c-f1ec-4891-a11b-9dba6f38db88', 'Jesus', 'Smith', '3228 Jessica Street', 'Denton', 'TX', '79629', '260-330-8424', 'jesus.smith9865@example.com', '2025-09-21 20:46:09.821251') RETURNING "customers_registeredcustomer"."id"; args=('e4d95a1c-f1ec-4891-a11b-9dba6f38db88', 'Jesus', 'Smith', '3228 Jessica Street', 'Denton', 'TX', '79629', '260-330-8424', 'jesus.smith9865@example.com', '2025-09-21 20:46:09.821251'); alias=default
[2025-09-21 22:46:09,826] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('8579e8e3-d4cf-49cc-b732-cb3798180b6d', 'Brandon', 'Cabrera', '6825 Williams Grove', 'Allen', 'TX', '78372', '802-105-1506', 'brandon.cabrera1290@example.com', '2025-09-21 20:46:09.825938') RETURNING "customers_registeredcustomer"."id"; args=('8579e8e3-d4cf-49cc-b732-cb3798180b6d', 'Brandon', 'Cabrera', '6825 Williams Grove', 'Allen', 'TX', '78372', '802-105-1506', 'brandon.cabrera1290@example.com', '2025-09-21 20:46:09.825938'); alias=default
[2025-09-21 22:46:09,832] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('1421b085-2805-4397-ae34-8351670531ed', 'Mary', 'Charles', '3334 Zhang Summit', 'Irving', 'TX', '77804', '799-992-7181', 'mary.charles8067@example.com', '2025-09-21 20:46:09.831174') RETURNING "customers_registeredcustomer"."id"; args=('1421b085-2805-4397-ae34-8351670531ed', 'Mary', 'Charles', '3334 Zhang Summit', 'Irving', 'TX', '77804', '799-992-7181', 'mary.charles8067@example.com', '2025-09-21 20:46:09.831174'); alias=default
[2025-09-21 22:46:09,837] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('f53fe98c-e891-4be4-aa6f-3f347e5b49e8', 'Sandra', 'Jackson', '2825 Adam Bypass', 'Grapevine', 'TX', '78195', '375-348-4388', 'sandra.jackson4974@example.com', '2025-09-21 20:46:09.837094') RETURNING "customers_registeredcustomer"."id"; args=('f53fe98c-e891-4be4-aa6f-3f347e5b49e8', 'Sandra', 'Jackson', '2825 Adam Bypass', 'Grapevine', 'TX', '78195', '375-348-4388', 'sandra.jackson4974@example.com', '2025-09-21 20:46:09.837094'); alias=default
[2025-09-21 22:46:09,842] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('91d822ee-415b-4ddb-8072-6c6dc9394ed5', 'Christopher', 'Ferrell', '4099 Rivera Rapids', 'Fort Worth', 'TX', '79116', '407-481-3973', 'christopher.ferrell9555@example.com', '2025-09-21 20:46:09.842456') RETURNING "customers_registeredcustomer"."id"; args=('91d822ee-415b-4ddb-8072-6c6dc9394ed5', 'Christopher', 'Ferrell', '4099 Rivera Rapids', 'Fort Worth', 'TX', '79116', '407-481-3973', 'christopher.ferrell9555@example.com', '2025-09-21 20:46:09.842456'); alias=default
[2025-09-21 22:46:09,847] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('7910fa5b-d2fa-4e7d-8bb0-dd4ba8f51d7d', 'Gina', 'Richard', '5785 Cain Plains', 'Denton', 'TX', '76665', '527-793-6127', 'gina.richard8183@example.com', '2025-09-21 20:46:09.846757') RETURNING "customers_registeredcustomer"."id"; args=('7910fa5b-d2fa-4e7d-8bb0-dd4ba8f51d7d', 'Gina', 'Richard', '5785 Cain Plains', 'Denton', 'TX', '76665', '527-793-6127', 'gina.richard8183@example.com', '2025-09-21 20:46:09.846757'); alias=default
[2025-09-21 22:46:09,852] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('49f5c74d-c540-431f-9802-cd8ecbd512a3', 'Bailey', 'Ramirez', '795 Carlos Rapids', 'Richardson', 'TX', '77600', '875-316-6636', 'bailey.ramirez7082@example.com', '2025-09-21 20:46:09.851858') RETURNING "customers_registeredcustomer"."id"; args=('49f5c74d-c540-431f-9802-cd8ecbd512a3', 'Bailey', 'Ramirez', '795 Carlos Rapids', 'Richardson', 'TX', '77600', '875-316-6636', 'bailey.ramirez7082@example.com', '2025-09-21 20:46:09.851858'); alias=default
[2025-09-21 22:46:09,858] DEBUG django.db.backends (0.016) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('ca9981c8-0dc4-49bf-adf1-26f6bbb2f719', 'Joseph', 'Barnes', '6517 Julia Vista', 'Flower Mound', 'TX', '77763', '599-371-8544', 'joseph.barnes4097@example.com', '2025-09-21 20:46:09.857706') RETURNING "customers_registeredcustomer"."id"; args=('ca9981c8-0dc4-49bf-adf1-26f6bbb2f719', 'Joseph', 'Barnes', '6517 Julia Vista', 'Flower Mound', 'TX', '77763', '599-371-8544', 'joseph.barnes4097@example.com', '2025-09-21 20:46:09.857706'); alias=default
[2025-09-21 22:46:09,864] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('fe2b762d-8d96-43a7-82c9-2b732ef3a941', 'Ryan', 'Smith', '7748 Michael Crossroad', 'North Richland Hills', 'TX', '76255', '073-587-0529', 'ryan.smith9750@example.com', '2025-09-21 20:46:09.863405') RETURNING "customers_registeredcustomer"."id"; args=('fe2b762d-8d96-43a7-82c9-2b732ef3a941', 'Ryan', 'Smith', '7748 Michael Crossroad', 'North Richland Hills', 'TX', '76255', '073-587-0529', 'ryan.smith9750@example.com', '2025-09-21 20:46:09.863405'); alias=default
[2025-09-21 22:46:09,869] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('ad849fb2-85e8-42ce-b3aa-a99b26880850', 'Lisa', 'Parker', '9209 Vang Passage', 'Grapevine', 'TX', '76680', '083-567-4968', 'lisa.parker5635@example.com', '2025-09-21 20:46:09.868523') RETURNING "customers_registeredcustomer"."id"; args=('ad849fb2-85e8-42ce-b3aa-a99b26880850', 'Lisa', 'Parker', '9209 Vang Passage', 'Grapevine', 'TX', '76680', '083-567-4968', 'lisa.parker5635@example.com', '2025-09-21 20:46:09.868523'); alias=default
[2025-09-21 22:46:09,874] DEBUG django.db.backends (0.015) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('482f3f41-d28c-4ab4-adfc-01ba3f881551', 'Latoya', 'Thompson', '2791 Mark Mountains', 'Flower Mound', 'TX', '78382', '302-519-3582', 'latoya.thompson7744@example.com', '2025-09-21 20:46:09.873946') RETURNING "customers_registeredcustomer"."id"; args=('482f3f41-d28c-4ab4-adfc-01ba3f881551', 'Latoya', 'Thompson', '2791 Mark Mountains', 'Flower Mound', 'TX', '78382', '302-519-3582', 'latoya.thompson7744@example.com', '2025-09-21 20:46:09.873946'); alias=default
[2025-09-21 22:46:09,880] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('116f1c64-0027-4232-a4cc-29a67d139ddc', 'Laura', 'Warren', '423 Matthew Squares', 'Grand Prairie', 'TX', '78493', '852-183-6015', 'laura.warren4753@example.com', '2025-09-21 20:46:09.879250') RETURNING "customers_registeredcustomer"."id"; args=('116f1c64-0027-4232-a4cc-29a67d139ddc', 'Laura', 'Warren', '423 Matthew Squares', 'Grand Prairie', 'TX', '78493', '852-183-6015', 'laura.warren4753@example.com', '2025-09-21 20:46:09.879250'); alias=default
[2025-09-21 22:46:09,885] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('3c62e2f9-b696-4de1-a3ab-27bcf049215d', 'Elizabeth', 'Mitchell', '3521 Crane Canyon', 'Flower Mound', 'TX', '75769', '474-579-0671', 'elizabeth.mitchell3485@example.com', '2025-09-21 20:46:09.885525') RETURNING "customers_registeredcustomer"."id"; args=('3c62e2f9-b696-4de1-a3ab-27bcf049215d', 'Elizabeth', 'Mitchell', '3521 Crane Canyon', 'Flower Mound', 'TX', '75769', '474-579-0671', 'elizabeth.mitchell3485@example.com', '2025-09-21 20:46:09.885525'); alias=default
[2025-09-21 22:46:09,891] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('abe37a74-b4b3-42af-a88a-00b02af1fd3e', 'Angela', 'Harris', '1668 Cook Crossing', 'North Richland Hills', 'TX', '78672', '291-355-6194', 'angela.harris646@example.com', '2025-09-21 20:46:09.890017') RETURNING "customers_registeredcustomer"."id"; args=('abe37a74-b4b3-42af-a88a-00b02af1fd3e', 'Angela', 'Harris', '1668 Cook Crossing', 'North Richland Hills', 'TX', '78672', '291-355-6194', 'angela.harris646@example.com', '2025-09-21 20:46:09.890017'); alias=default
[2025-09-21 22:46:09,896] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('2a3c8374-7fba-4004-84e8-0f3546d0a6ce', 'Mark', 'Thompson', '3852 Donna Lock', 'Carrollton', 'TX', '79935', '930-998-5736', 'mark.thompson1467@example.com', '2025-09-21 20:46:09.895262') RETURNING "customers_registeredcustomer"."id"; args=('2a3c8374-7fba-4004-84e8-0f3546d0a6ce', 'Mark', 'Thompson', '3852 Donna Lock', 'Carrollton', 'TX', '79935', '930-998-5736', 'mark.thompson1467@example.com', '2025-09-21 20:46:09.895262'); alias=default
[2025-09-21 22:46:09,901] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('55525fb6-4fc1-40e1-ac8d-dd185ae4ca1a', 'Deborah', 'Walsh', '2607 Odom Curve', 'Richardson', 'TX', '77652', '094-464-7019', 'deborah.walsh5151@example.com', '2025-09-21 20:46:09.900270') RETURNING "customers_registeredcustomer"."id"; args=('55525fb6-4fc1-40e1-ac8d-dd185ae4ca1a', 'Deborah', 'Walsh', '2607 Odom Curve', 'Richardson', 'TX', '77652', '094-464-7019', 'deborah.walsh5151@example.com', '2025-09-21 20:46:09.900270'); alias=default
[2025-09-21 22:46:09,907] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('63d115bb-478b-4407-bbaa-98113da109bb', 'Emily', 'Fischer', '8287 Michael Square', 'Lewisville', 'TX', '76628', '181-963-9164', 'emily.fischer160@example.com', '2025-09-21 20:46:09.905596') RETURNING "customers_registeredcustomer"."id"; args=('63d115bb-478b-4407-bbaa-98113da109bb', 'Emily', 'Fischer', '8287 Michael Square', 'Lewisville', 'TX', '76628', '181-963-9164', 'emily.fischer160@example.com', '2025-09-21 20:46:09.905596'); alias=default
[2025-09-21 22:46:09,911] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('428fa58b-2678-4183-87ed-a5e5c5e62c85', 'Melissa', 'Brown', '9784 Christine Summit', 'Cedar Hill', 'TX', '79626', '320-469-6187', 'melissa.brown3903@example.com', '2025-09-21 20:46:09.910795') RETURNING "customers_registeredcustomer"."id"; args=('428fa58b-2678-4183-87ed-a5e5c5e62c85', 'Melissa', 'Brown', '9784 Christine Summit', 'Cedar Hill', 'TX', '79626', '320-469-6187', 'melissa.brown3903@example.com', '2025-09-21 20:46:09.910795'); alias=default
[2025-09-21 22:46:09,917] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('ec666f94-b9ab-4599-b753-67706e2abfca', 'Michael', 'Garza', '1070 Roberts Ports', 'Denton', 'TX', '77379', '480-902-2308', 'michael.garza7930@example.com', '2025-09-21 20:46:09.916136') RETURNING "customers_registeredcustomer"."id"; args=('ec666f94-b9ab-4599-b753-67706e2abfca', 'Michael', 'Garza', '1070 Roberts Ports', 'Denton', 'TX', '77379', '480-902-2308', 'michael.garza7930@example.com', '2025-09-21 20:46:09.916136'); alias=default
[2025-09-21 22:46:09,922] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('d1f846f5-73d1-4f69-9a39-56335c05f62b', 'Nancy', 'Mora', '4619 Gregory Forge', 'Garland', 'TX', '77887', '672-135-2183', 'nancy.mora9303@example.com', '2025-09-21 20:46:09.922501') RETURNING "customers_registeredcustomer"."id"; args=('d1f846f5-73d1-4f69-9a39-56335c05f62b', 'Nancy', 'Mora', '4619 Gregory Forge', 'Garland', 'TX', '77887', '672-135-2183', 'nancy.mora9303@example.com', '2025-09-21 20:46:09.922501'); alias=default
[2025-09-21 22:46:09,927] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('6674b2cc-4f21-47e5-8f1f-e0de969a5562', 'Corey', 'Williamson', '9655 Hendrix Walk', 'Arlington', 'TX', '76637', '703-100-6054', 'corey.williamson3255@example.com', '2025-09-21 20:46:09.926498') RETURNING "customers_registeredcustomer"."id"; args=('6674b2cc-4f21-47e5-8f1f-e0de969a5562', 'Corey', 'Williamson', '9655 Hendrix Walk', 'Arlington', 'TX', '76637', '703-100-6054', 'corey.williamson3255@example.com', '2025-09-21 20:46:09.926498'); alias=default
[2025-09-21 22:46:09,932] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('803b95fd-d2b3-4cd5-8b99-b2618a21bae5', 'Alexander', 'Butler', '6129 Johnson Estates', 'Richardson', 'TX', '79690', '207-529-8069', 'alexander.butler2508@example.com', '2025-09-21 20:46:09.932495') RETURNING "customers_registeredcustomer"."id"; args=('803b95fd-d2b3-4cd5-8b99-b2618a21bae5', 'Alexander', 'Butler', '6129 Johnson Estates', 'Richardson', 'TX', '79690', '207-529-8069', 'alexander.butler2508@example.com', '2025-09-21 20:46:09.932495'); alias=default
[2025-09-21 22:46:09,938] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('0fcd3cbd-fb33-4b78-b674-9c4654654cef', 'Jessica', 'Barry', '4862 Avila Lakes', 'Frisco', 'TX', '78626', '315-317-7537', 'jessica.barry5878@example.com', '2025-09-21 20:46:09.937493') RETURNING "customers_registeredcustomer"."id"; args=('0fcd3cbd-fb33-4b78-b674-9c4654654cef', 'Jessica', 'Barry', '4862 Avila Lakes', 'Frisco', 'TX', '78626', '315-317-7537', 'jessica.barry5878@example.com', '2025-09-21 20:46:09.937493'); alias=default
[2025-09-21 22:46:09,943] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('99f1634c-82e6-4c8e-a1f4-eb7f002de47a', 'Christopher', 'Anthony', '3403 Lauren Cove', 'Frisco', 'TX', '77636', '270-124-3901', 'christopher.anthony8177@example.com', '2025-09-21 20:46:09.942489') RETURNING "customers_registeredcustomer"."id"; args=('99f1634c-82e6-4c8e-a1f4-eb7f002de47a', 'Christopher', 'Anthony', '3403 Lauren Cove', 'Frisco', 'TX', '77636', '270-124-3901', 'christopher.anthony8177@example.com', '2025-09-21 20:46:09.942489'); alias=default
[2025-09-21 22:46:09,949] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('6439ead8-7859-45e9-ab52-55bcbc48b199', 'Mackenzie', 'Rich', '8442 Robin Extensions', 'Plano', 'TX', '78478', '595-857-7260', 'mackenzie.rich8228@example.com', '2025-09-21 20:46:09.948486') RETURNING "customers_registeredcustomer"."id"; args=('6439ead8-7859-45e9-ab52-55bcbc48b199', 'Mackenzie', 'Rich', '8442 Robin Extensions', 'Plano', 'TX', '78478', '595-857-7260', 'mackenzie.rich8228@example.com', '2025-09-21 20:46:09.948486'); alias=default
[2025-09-21 22:46:09,954] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('058c7796-5aa7-464f-a85c-b2e6017cf98f', 'Joy', 'White', '943 Mills Path', 'Plano', 'TX', '77813', '678-813-3584', 'joy.white1530@example.com', '2025-09-21 20:46:09.954483') RETURNING "customers_registeredcustomer"."id"; args=('058c7796-5aa7-464f-a85c-b2e6017cf98f', 'Joy', 'White', '943 Mills Path', 'Plano', 'TX', '77813', '678-813-3584', 'joy.white1530@example.com', '2025-09-21 20:46:09.954483'); alias=default
[2025-09-21 22:46:09,959] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('928bb348-6378-46b2-9d82-36f270bb6148', 'Morgan', 'Watson', '8244 Noble Station', 'Richardson', 'TX', '75799', '382-808-2172', 'morgan.watson961@example.com', '2025-09-21 20:46:09.959479') RETURNING "customers_registeredcustomer"."id"; args=('928bb348-6378-46b2-9d82-36f270bb6148', 'Morgan', 'Watson', '8244 Noble Station', 'Richardson', 'TX', '75799', '382-808-2172', 'morgan.watson961@example.com', '2025-09-21 20:46:09.959479'); alias=default
[2025-09-21 22:46:09,965] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('0e015044-87cc-4f4e-b26b-077ed5e3b818', 'Kayla', 'Hampton', '4591 Nichols Port', 'Grapevine', 'TX', '75837', '209-823-3457', 'kayla.hampton9677@example.com', '2025-09-21 20:46:09.964476') RETURNING "customers_registeredcustomer"."id"; args=('0e015044-87cc-4f4e-b26b-077ed5e3b818', 'Kayla', 'Hampton', '4591 Nichols Port', 'Grapevine', 'TX', '75837', '209-823-3457', 'kayla.hampton9677@example.com', '2025-09-21 20:46:09.964476'); alias=default
[2025-09-21 22:46:09,971] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('84399510-0f80-4aba-b7b2-1ca221675209', 'Charlotte', 'King', '170 Chavez Isle', 'Plano', 'TX', '75858', '695-306-0362', 'charlotte.king6230@example.com', '2025-09-21 20:46:09.970474') RETURNING "customers_registeredcustomer"."id"; args=('84399510-0f80-4aba-b7b2-1ca221675209', 'Charlotte', 'King', '170 Chavez Isle', 'Plano', 'TX', '75858', '695-306-0362', 'charlotte.king6230@example.com', '2025-09-21 20:46:09.970474'); alias=default
[2025-09-21 22:46:09,976] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('a1acbf04-1e70-4131-896d-4cce6499ab36', 'Elizabeth', 'Thompson', '8963 Lewis Inlet', 'McKinney', 'TX', '76944', '531-369-2237', 'elizabeth.thompson6898@example.com', '2025-09-21 20:46:09.975471') RETURNING "customers_registeredcustomer"."id"; args=('a1acbf04-1e70-4131-896d-4cce6499ab36', 'Elizabeth', 'Thompson', '8963 Lewis Inlet', 'McKinney', 'TX', '76944', '531-369-2237', 'elizabeth.thompson6898@example.com', '2025-09-21 20:46:09.975471'); alias=default
[2025-09-21 22:46:09,981] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('0137dd8d-7898-4db1-ac3c-5cfe1a1d51cd', 'Crystal', 'Massey', '463 Mark Views', 'Frisco', 'TX', '77465', '218-827-3050', 'crystal.massey3124@example.com', '2025-09-21 20:46:09.980468') RETURNING "customers_registeredcustomer"."id"; args=('0137dd8d-7898-4db1-ac3c-5cfe1a1d51cd', 'Crystal', 'Massey', '463 Mark Views', 'Frisco', 'TX', '77465', '218-827-3050', 'crystal.massey3124@example.com', '2025-09-21 20:46:09.980468'); alias=default
[2025-09-21 22:46:09,986] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('a26a8b82-43da-48f3-8ddd-75b450e87143', 'Sara', 'Smith', '6583 Anthony Branch', 'Frisco', 'TX', '75529', '674-011-9491', 'sara.smith3151@example.com', '2025-09-21 20:46:09.985465') RETURNING "customers_registeredcustomer"."id"; args=('a26a8b82-43da-48f3-8ddd-75b450e87143', 'Sara', 'Smith', '6583 Anthony Branch', 'Frisco', 'TX', '75529', '674-011-9491', 'sara.smith3151@example.com', '2025-09-21 20:46:09.985465'); alias=default
[2025-09-21 22:46:09,991] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('31813739-7865-4878-ae67-2b6b9994ec63', 'Jennifer', 'Keith', '898 Jordan Highway', 'Frisco', 'TX', '79478', '828-823-5568', 'jennifer.keith9400@example.com', '2025-09-21 20:46:09.990462') RETURNING "customers_registeredcustomer"."id"; args=('31813739-7865-4878-ae67-2b6b9994ec63', 'Jennifer', 'Keith', '898 Jordan Highway', 'Frisco', 'TX', '79478', '828-823-5568', 'jennifer.keith9400@example.com', '2025-09-21 20:46:09.990462'); alias=default
[2025-09-21 22:46:09,997] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('74836a61-a19f-42da-8ae3-413a4d3952de', 'Ian', 'Mullen', '1800 Williams Port', 'Richardson', 'TX', '79949', '040-264-5096', 'ian.mullen7109@example.com', '2025-09-21 20:46:09.996457') RETURNING "customers_registeredcustomer"."id"; args=('74836a61-a19f-42da-8ae3-413a4d3952de', 'Ian', 'Mullen', '1800 Williams Port', 'Richardson', 'TX', '79949', '040-264-5096', 'ian.mullen7109@example.com', '2025-09-21 20:46:09.996457'); alias=default
[2025-09-21 22:46:10,003] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('41da40ae-7f74-4455-806e-4b562dc5d52f', 'Mary', 'Robbins', '7873 Rogers Place', 'Cedar Hill', 'TX', '79340', '873-056-9385', 'mary.robbins562@example.com', '2025-09-21 20:46:10.002455') RETURNING "customers_registeredcustomer"."id"; args=('41da40ae-7f74-4455-806e-4b562dc5d52f', 'Mary', 'Robbins', '7873 Rogers Place', 'Cedar Hill', 'TX', '79340', '873-056-9385', 'mary.robbins562@example.com', '2025-09-21 20:46:10.002455'); alias=default
[2025-09-21 22:46:10,009] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('e5b8dedf-642e-4462-9319-b3842fdbce3e', 'Nicole', 'Hess', '8925 Gutierrez Springs', 'Arlington', 'TX', '76245', '016-193-2187', 'nicole.hess3709@example.com', '2025-09-21 20:46:10.008450') RETURNING "customers_registeredcustomer"."id"; args=('e5b8dedf-642e-4462-9319-b3842fdbce3e', 'Nicole', 'Hess', '8925 Gutierrez Springs', 'Arlington', 'TX', '76245', '016-193-2187', 'nicole.hess3709@example.com', '2025-09-21 20:46:10.008450'); alias=default
[2025-09-21 22:46:10,014] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('503ced54-4c62-4940-92c6-c7eefe4b438e', 'Kim', 'Jones', '5087 Logan Rue', 'Irving', 'TX', '79314', '204-324-3147', 'kim.jones2946@example.com', '2025-09-21 20:46:10.013448') RETURNING "customers_registeredcustomer"."id"; args=('503ced54-4c62-4940-92c6-c7eefe4b438e', 'Kim', 'Jones', '5087 Logan Rue', 'Irving', 'TX', '79314', '204-324-3147', 'kim.jones2946@example.com', '2025-09-21 20:46:10.013448'); alias=default
[2025-09-21 22:46:10,020] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('21711eef-5fa4-46cc-bca4-7759bcd3b74b', 'Tanya', 'Rodriguez', '8557 Howard Court', 'Frisco', 'TX', '75857', '472-011-5388', 'tanya.rodriguez3929@example.com', '2025-09-21 20:46:10.018445') RETURNING "customers_registeredcustomer"."id"; args=('21711eef-5fa4-46cc-bca4-7759bcd3b74b', 'Tanya', 'Rodriguez', '8557 Howard Court', 'Frisco', 'TX', '75857', '472-011-5388', 'tanya.rodriguez3929@example.com', '2025-09-21 20:46:10.018445'); alias=default
[2025-09-21 22:46:10,025] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('ab2e2ff5-7271-4bae-af56-7fee7fe22785', 'Nicholas', 'Decker', '4069 Peterson Trail', 'Frisco', 'TX', '77927', '864-515-9960', 'nicholas.decker4463@example.com', '2025-09-21 20:46:10.024441') RETURNING "customers_registeredcustomer"."id"; args=('ab2e2ff5-7271-4bae-af56-7fee7fe22785', 'Nicholas', 'Decker', '4069 Peterson Trail', 'Frisco', 'TX', '77927', '864-515-9960', 'nicholas.decker4463@example.com', '2025-09-21 20:46:10.024441'); alias=default
[2025-09-21 22:46:10,032] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('fda799ac-41ae-4cc1-96e9-e553fbbab264', 'Linda', 'Powers', '9230 Robert Ports', 'Arlington', 'TX', '75847', '520-673-4457', 'linda.powers6012@example.com', '2025-09-21 20:46:10.031438') RETURNING "customers_registeredcustomer"."id"; args=('fda799ac-41ae-4cc1-96e9-e553fbbab264', 'Linda', 'Powers', '9230 Robert Ports', 'Arlington', 'TX', '75847', '520-673-4457', 'linda.powers6012@example.com', '2025-09-21 20:46:10.031438'); alias=default
[2025-09-21 22:46:10,038] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('af511067-109c-4e7c-88fd-7904ce24c36b', 'Maria', 'Larson', '9589 Vincent Fall', 'Garland', 'TX', '75666', '697-997-8620', 'maria.larson4621@example.com', '2025-09-21 20:46:10.037442') RETURNING "customers_registeredcustomer"."id"; args=('af511067-109c-4e7c-88fd-7904ce24c36b', 'Maria', 'Larson', '9589 Vincent Fall', 'Garland', 'TX', '75666', '697-997-8620', 'maria.larson4621@example.com', '2025-09-21 20:46:10.037442'); alias=default
[2025-09-21 22:46:10,044] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('04ff5c64-b2cc-4608-85e4-c62fb042a06d', 'Emily', 'Clark', '9388 Craig Meadow', 'Grapevine', 'TX', '78166', '073-803-9134', 'emily.clark4569@example.com', '2025-09-21 20:46:10.043430') RETURNING "customers_registeredcustomer"."id"; args=('04ff5c64-b2cc-4608-85e4-c62fb042a06d', 'Emily', 'Clark', '9388 Craig Meadow', 'Grapevine', 'TX', '78166', '073-803-9134', 'emily.clark4569@example.com', '2025-09-21 20:46:10.043430'); alias=default
[2025-09-21 22:46:10,050] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('7e189e49-2165-461f-a659-dbbd5cb2041e', 'Melinda', 'Brewer', '3023 Zachary Station', 'Garland', 'TX', '77260', '230-869-5938', 'melinda.brewer465@example.com', '2025-09-21 20:46:10.049428') RETURNING "customers_registeredcustomer"."id"; args=('7e189e49-2165-461f-a659-dbbd5cb2041e', 'Melinda', 'Brewer', '3023 Zachary Station', 'Garland', 'TX', '77260', '230-869-5938', 'melinda.brewer465@example.com', '2025-09-21 20:46:10.049428'); alias=default
[2025-09-21 22:46:10,057] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('29786650-7396-48ce-a080-4e2898525f45', 'Gregory', 'Maynard', '945 Justin Pike', 'Cedar Hill', 'TX', '76969', '746-869-6453', 'gregory.maynard7108@example.com', '2025-09-21 20:46:10.056423') RETURNING "customers_registeredcustomer"."id"; args=('29786650-7396-48ce-a080-4e2898525f45', 'Gregory', 'Maynard', '945 Justin Pike', 'Cedar Hill', 'TX', '76969', '746-869-6453', 'gregory.maynard7108@example.com', '2025-09-21 20:46:10.056423'); alias=default
[2025-09-21 22:46:10,062] DEBUG django.db.backends (0.016) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('11f8e375-d41c-49c3-aac0-cc5a03f303a4', 'Rebekah', 'Robbins', '6909 Joyce Freeway', 'Cedar Hill', 'TX', '78549', '561-861-5854', 'rebekah.robbins7992@example.com', '2025-09-21 20:46:10.061419') RETURNING "customers_registeredcustomer"."id"; args=('11f8e375-d41c-49c3-aac0-cc5a03f303a4', 'Rebekah', 'Robbins', '6909 Joyce Freeway', 'Cedar Hill', 'TX', '78549', '561-861-5854', 'rebekah.robbins7992@example.com', '2025-09-21 20:46:10.061419'); alias=default
[2025-09-21 22:46:10,069] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('bdb60a37-e936-438b-97fc-9a308a211352', 'James', 'Brewer', '8010 Brian Rest', 'Cedar Hill', 'TX', '79311', '871-832-7527', 'james.brewer4705@example.com', '2025-09-21 20:46:10.068418') RETURNING "customers_registeredcustomer"."id"; args=('bdb60a37-e936-438b-97fc-9a308a211352', 'James', 'Brewer', '8010 Brian Rest', 'Cedar Hill', 'TX', '79311', '871-832-7527', 'james.brewer4705@example.com', '2025-09-21 20:46:10.068418'); alias=default
[2025-09-21 22:46:10,075] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('ded54b0d-c2e9-4e26-9d99-1008b01d6225', 'Mitchell', 'Rojas', '8053 Gregory Port', 'Garland', 'TX', '79525', '600-288-8200', 'mitchell.rojas6058@example.com', '2025-09-21 20:46:10.074412') RETURNING "customers_registeredcustomer"."id"; args=('ded54b0d-c2e9-4e26-9d99-1008b01d6225', 'Mitchell', 'Rojas', '8053 Gregory Port', 'Garland', 'TX', '79525', '600-288-8200', 'mitchell.rojas6058@example.com', '2025-09-21 20:46:10.074412'); alias=default
[2025-09-21 22:46:10,082] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('f60c09c9-d8a7-424a-8f2b-c71af3ce82bb', 'James', 'Bishop', '7810 Richards Track', 'Grapevine', 'TX', '77301', '241-974-8450', 'james.bishop912@example.com', '2025-09-21 20:46:10.081408') RETURNING "customers_registeredcustomer"."id"; args=('f60c09c9-d8a7-424a-8f2b-c71af3ce82bb', 'James', 'Bishop', '7810 Richards Track', 'Grapevine', 'TX', '77301', '241-974-8450', 'james.bishop912@example.com', '2025-09-21 20:46:10.081408'); alias=default
[2025-09-21 22:46:10,090] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('7fbfa9c3-1751-4813-ae6c-fe2b8feb1dee', 'Phillip', 'Walker', '6138 Melissa Club', 'Fort Worth', 'TX', '75543', '412-335-7662', 'phillip.walker983@example.com', '2025-09-21 20:46:10.089404') RETURNING "customers_registeredcustomer"."id"; args=('7fbfa9c3-1751-4813-ae6c-fe2b8feb1dee', 'Phillip', 'Walker', '6138 Melissa Club', 'Fort Worth', 'TX', '75543', '412-335-7662', 'phillip.walker983@example.com', '2025-09-21 20:46:10.089404'); alias=default
[2025-09-21 22:46:10,096] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('1f2f1f61-b9f8-4aef-bcea-52f8fcb9d4e6', 'Robert', 'Evans', '5698 Hunter Mall', 'Irving', 'TX', '77100', '240-191-0845', 'robert.evans265@example.com', '2025-09-21 20:46:10.095403') RETURNING "customers_registeredcustomer"."id"; args=('1f2f1f61-b9f8-4aef-bcea-52f8fcb9d4e6', 'Robert', 'Evans', '5698 Hunter Mall', 'Irving', 'TX', '77100', '240-191-0845', 'robert.evans265@example.com', '2025-09-21 20:46:10.095403'); alias=default
[2025-09-21 22:46:10,103] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('f62c8675-7ec3-4287-8ec6-69a475c72de6', 'Amy', 'Boyd', '1320 Powell Way', 'Lewisville', 'TX', '77075', '247-990-4241', 'amy.boyd4624@example.com', '2025-09-21 20:46:10.102411') RETURNING "customers_registeredcustomer"."id"; args=('f62c8675-7ec3-4287-8ec6-69a475c72de6', 'Amy', 'Boyd', '1320 Powell Way', 'Lewisville', 'TX', '77075', '247-990-4241', 'amy.boyd4624@example.com', '2025-09-21 20:46:10.102411'); alias=default
[2025-09-21 22:46:10,110] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('37d66dd4-0b8f-48b6-aed3-e1433be425e9', 'Dakota', 'Nunez', '5988 Michelle Glen', 'North Richland Hills', 'TX', '75596', '845-344-4266', 'dakota.nunez6370@example.com', '2025-09-21 20:46:10.109392') RETURNING "customers_registeredcustomer"."id"; args=('37d66dd4-0b8f-48b6-aed3-e1433be425e9', 'Dakota', 'Nunez', '5988 Michelle Glen', 'North Richland Hills', 'TX', '75596', '845-344-4266', 'dakota.nunez6370@example.com', '2025-09-21 20:46:10.109392'); alias=default
[2025-09-21 22:46:10,115] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('889f23f5-819c-4696-9a68-6d30dc5eb555', 'Robert', 'Porter', '5060 Hughes Circle', 'Arlington', 'TX', '78706', '923-392-6909', 'robert.porter9768@example.com', '2025-09-21 20:46:10.114388') RETURNING "customers_registeredcustomer"."id"; args=('889f23f5-819c-4696-9a68-6d30dc5eb555', 'Robert', 'Porter', '5060 Hughes Circle', 'Arlington', 'TX', '78706', '923-392-6909', 'robert.porter9768@example.com', '2025-09-21 20:46:10.114388'); alias=default
[2025-09-21 22:46:10,123] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('38c12fa3-caef-4807-a7b9-f7c241ccaaa8', 'Bruce', 'Lopez', '4159 Wilson River', 'Carrollton', 'TX', '76487', '933-888-1177', 'bruce.lopez1216@example.com', '2025-09-21 20:46:10.122385') RETURNING "customers_registeredcustomer"."id"; args=('38c12fa3-caef-4807-a7b9-f7c241ccaaa8', 'Bruce', 'Lopez', '4159 Wilson River', 'Carrollton', 'TX', '76487', '933-888-1177', 'bruce.lopez1216@example.com', '2025-09-21 20:46:10.122385'); alias=default
[2025-09-21 22:46:10,129] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('c81eb31a-b221-455e-a4f2-f48feb6e0bf4', 'Leslie', 'Barrett', '7061 Anderson Greens', 'Richardson', 'TX', '76766', '195-593-2788', 'leslie.barrett2775@example.com', '2025-09-21 20:46:10.128381') RETURNING "customers_registeredcustomer"."id"; args=('c81eb31a-b221-455e-a4f2-f48feb6e0bf4', 'Leslie', 'Barrett', '7061 Anderson Greens', 'Richardson', 'TX', '76766', '195-593-2788', 'leslie.barrett2775@example.com', '2025-09-21 20:46:10.128381'); alias=default
[2025-09-21 22:46:10,137] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('eb12f830-0544-4148-8a93-5f7ea7e9304c', 'Allen', 'Hines', '3386 Jackson Mission', 'Denton', 'TX', '79014', '070-675-4768', 'allen.hines1568@example.com', '2025-09-21 20:46:10.135377') RETURNING "customers_registeredcustomer"."id"; args=('eb12f830-0544-4148-8a93-5f7ea7e9304c', 'Allen', 'Hines', '3386 Jackson Mission', 'Denton', 'TX', '79014', '070-675-4768', 'allen.hines1568@example.com', '2025-09-21 20:46:10.135377'); alias=default
[2025-09-21 22:46:10,144] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('6759b00c-553c-4e32-94e7-16269057a87e', 'Thomas', 'Peterson', '2325 Bell Spur', 'Frisco', 'TX', '76588', '405-497-9851', 'thomas.peterson5984@example.com', '2025-09-21 20:46:10.143585') RETURNING "customers_registeredcustomer"."id"; args=('6759b00c-553c-4e32-94e7-16269057a87e', 'Thomas', 'Peterson', '2325 Bell Spur', 'Frisco', 'TX', '76588', '405-497-9851', 'thomas.peterson5984@example.com', '2025-09-21 20:46:10.143585'); alias=default
[2025-09-21 22:46:10,149] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('37fe20d9-8bea-4ffc-a0cb-babfd0779de7', 'Thomas', 'Rodriguez', '1904 John Park', 'Allen', 'TX', '79486', '022-947-4244', 'thomas.rodriguez5189@example.com', '2025-09-21 20:46:10.148570') RETURNING "customers_registeredcustomer"."id"; args=('37fe20d9-8bea-4ffc-a0cb-babfd0779de7', 'Thomas', 'Rodriguez', '1904 John Park', 'Allen', 'TX', '79486', '022-947-4244', 'thomas.rodriguez5189@example.com', '2025-09-21 20:46:10.148570'); alias=default
[2025-09-21 22:46:10,156] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('ecebc5fa-c062-410c-9063-6f688812fb51', 'Kayla', 'Jones', '2875 Cantu Neck', 'North Richland Hills', 'TX', '75553', '232-501-4202', 'kayla.jones6523@example.com', '2025-09-21 20:46:10.155566') RETURNING "customers_registeredcustomer"."id"; args=('ecebc5fa-c062-410c-9063-6f688812fb51', 'Kayla', 'Jones', '2875 Cantu Neck', 'North Richland Hills', 'TX', '75553', '232-501-4202', 'kayla.jones6523@example.com', '2025-09-21 20:46:10.155566'); alias=default
[2025-09-21 22:46:10,163] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('30736e11-81e4-447c-90bf-cf16b4b94a6a', 'Jennifer', 'Wells', '5245 Johnson Circle', 'Plano', 'TX', '78961', '677-022-2304', 'jennifer.wells8812@example.com', '2025-09-21 20:46:10.162562') RETURNING "customers_registeredcustomer"."id"; args=('30736e11-81e4-447c-90bf-cf16b4b94a6a', 'Jennifer', 'Wells', '5245 Johnson Circle', 'Plano', 'TX', '78961', '677-022-2304', 'jennifer.wells8812@example.com', '2025-09-21 20:46:10.162562'); alias=default
[2025-09-21 22:46:10,169] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('5b6b9fe6-698c-4958-b144-e2c7ddfc5080', 'Randy', 'White', '4734 April Island', 'Frisco', 'TX', '79894', '181-512-5397', 'randy.white4468@example.com', '2025-09-21 20:46:10.167559') RETURNING "customers_registeredcustomer"."id"; args=('5b6b9fe6-698c-4958-b144-e2c7ddfc5080', 'Randy', 'White', '4734 April Island', 'Frisco', 'TX', '79894', '181-512-5397', 'randy.white4468@example.com', '2025-09-21 20:46:10.167559'); alias=default
[2025-09-21 22:46:10,176] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('d2fc658d-0f19-47fa-a26f-d45e27a0a510', 'Ruth', 'Ferguson', '7146 Michael Parkway', 'Arlington', 'TX', '77504', '614-081-2356', 'ruth.ferguson7045@example.com', '2025-09-21 20:46:10.174558') RETURNING "customers_registeredcustomer"."id"; args=('d2fc658d-0f19-47fa-a26f-d45e27a0a510', 'Ruth', 'Ferguson', '7146 Michael Parkway', 'Arlington', 'TX', '77504', '614-081-2356', 'ruth.ferguson7045@example.com', '2025-09-21 20:46:10.174558'); alias=default
[2025-09-21 22:46:10,183] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('1fd6e9a6-10dd-4362-ba49-ae7aad23bc01', 'Michelle', 'Walters', '5447 Pamela Mount', 'Cedar Hill', 'TX', '76917', '644-812-7856', 'michelle.walters1293@example.com', '2025-09-21 20:46:10.182557') RETURNING "customers_registeredcustomer"."id"; args=('1fd6e9a6-10dd-4362-ba49-ae7aad23bc01', 'Michelle', 'Walters', '5447 Pamela Mount', 'Cedar Hill', 'TX', '76917', '644-812-7856', 'michelle.walters1293@example.com', '2025-09-21 20:46:10.182557'); alias=default
[2025-09-21 22:46:10,192] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('ab6e0abd-fe73-4614-a599-5f9e7c2d97ea', 'Marc', 'Gonzalez', '2433 Michael Crossroad', 'Flower Mound', 'TX', '79914', '666-472-8169', 'marc.gonzalez1928@example.com', '2025-09-21 20:46:10.191562') RETURNING "customers_registeredcustomer"."id"; args=('ab6e0abd-fe73-4614-a599-5f9e7c2d97ea', 'Marc', 'Gonzalez', '2433 Michael Crossroad', 'Flower Mound', 'TX', '79914', '666-472-8169', 'marc.gonzalez1928@example.com', '2025-09-21 20:46:10.191562'); alias=default
[2025-09-21 22:46:10,198] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('8641636c-12fc-41c4-a542-c79c920c2a97', 'Angela', 'Brown', '3962 White Ridges', 'Fort Worth', 'TX', '79141', '855-933-7504', 'angela.brown209@example.com', '2025-09-21 20:46:10.197542') RETURNING "customers_registeredcustomer"."id"; args=('8641636c-12fc-41c4-a542-c79c920c2a97', 'Angela', 'Brown', '3962 White Ridges', 'Fort Worth', 'TX', '79141', '855-933-7504', 'angela.brown209@example.com', '2025-09-21 20:46:10.197542'); alias=default
[2025-09-21 22:46:10,206] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('8b373e1f-28f5-44cc-bb2f-f41f45fe0433', 'Amy', 'Smith', '201 Duffy Knoll', 'Arlington', 'TX', '78075', '289-751-1753', 'amy.smith7747@example.com', '2025-09-21 20:46:10.205540') RETURNING "customers_registeredcustomer"."id"; args=('8b373e1f-28f5-44cc-bb2f-f41f45fe0433', 'Amy', 'Smith', '201 Duffy Knoll', 'Arlington', 'TX', '78075', '289-751-1753', 'amy.smith7747@example.com', '2025-09-21 20:46:10.205540'); alias=default
[2025-09-21 22:46:10,211] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('ffc9ab55-a396-442f-9d4f-b7fb3c203752', 'Patrick', 'Miller', '6099 Heather Heights', 'Mansfield', 'TX', '77727', '669-470-4218', 'patrick.miller7234@example.com', '2025-09-21 20:46:10.210534') RETURNING "customers_registeredcustomer"."id"; args=('ffc9ab55-a396-442f-9d4f-b7fb3c203752', 'Patrick', 'Miller', '6099 Heather Heights', 'Mansfield', 'TX', '77727', '669-470-4218', 'patrick.miller7234@example.com', '2025-09-21 20:46:10.210534'); alias=default
[2025-09-21 22:46:10,217] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('9c1777bc-2b51-4efb-bc20-29f89bec7376', 'William', 'Phillips', '8449 Joshua Knoll', 'Mesquite', 'TX', '76825', '734-503-8205', 'william.phillips7941@example.com', '2025-09-21 20:46:10.216531') RETURNING "customers_registeredcustomer"."id"; args=('9c1777bc-2b51-4efb-bc20-29f89bec7376', 'William', 'Phillips', '8449 Joshua Knoll', 'Mesquite', 'TX', '76825', '734-503-8205', 'william.phillips7941@example.com', '2025-09-21 20:46:10.216531'); alias=default
[2025-09-21 22:46:10,224] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('c7b2e043-d048-4962-834f-6ea531582f10', 'Kristen', 'Walker', '5169 Cook Track', 'Lewisville', 'TX', '76668', '558-929-2219', 'kristen.walker8580@example.com', '2025-09-21 20:46:10.223528') RETURNING "customers_registeredcustomer"."id"; args=('c7b2e043-d048-4962-834f-6ea531582f10', 'Kristen', 'Walker', '5169 Cook Track', 'Lewisville', 'TX', '76668', '558-929-2219', 'kristen.walker8580@example.com', '2025-09-21 20:46:10.223528'); alias=default
[2025-09-21 22:46:10,231] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('e1cf8a0d-dbad-4634-9831-e01936595cfc', 'Monica', 'Solomon', '4284 Craig Fields', 'Arlington', 'TX', '78863', '688-152-0964', 'monica.solomon7411@example.com', '2025-09-21 20:46:10.229538') RETURNING "customers_registeredcustomer"."id"; args=('e1cf8a0d-dbad-4634-9831-e01936595cfc', 'Monica', 'Solomon', '4284 Craig Fields', 'Arlington', 'TX', '78863', '688-152-0964', 'monica.solomon7411@example.com', '2025-09-21 20:46:10.229538'); alias=default
[2025-09-21 22:46:10,237] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('80b6e745-8141-4352-a4c1-36d1c1af1cae', 'Jaime', 'Gutierrez', '6026 Johnson Islands', 'Garland', 'TX', '79367', '064-622-7670', 'jaime.gutierrez4191@example.com', '2025-09-21 20:46:10.236525') RETURNING "customers_registeredcustomer"."id"; args=('80b6e745-8141-4352-a4c1-36d1c1af1cae', 'Jaime', 'Gutierrez', '6026 Johnson Islands', 'Garland', 'TX', '79367', '064-622-7670', 'jaime.gutierrez4191@example.com', '2025-09-21 20:46:10.236525'); alias=default
[2025-09-21 22:46:10,243] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('82e98a67-3944-40fd-8372-e128f273c305', 'Lynn', 'Glass', '3644 Hays Canyon', 'Grapevine', 'TX', '77849', '171-152-6235', 'lynn.glass7023@example.com', '2025-09-21 20:46:10.242517') RETURNING "customers_registeredcustomer"."id"; args=('82e98a67-3944-40fd-8372-e128f273c305', 'Lynn', 'Glass', '3644 Hays Canyon', 'Grapevine', 'TX', '77849', '171-152-6235', 'lynn.glass7023@example.com', '2025-09-21 20:46:10.242517'); alias=default
[2025-09-21 22:46:10,249] DEBUG django.db.backends (0.015) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('b823500d-aafc-403f-957f-ea1dbc36fde4', 'Brittany', 'Wood', '1631 Smith Course', 'Allen', 'TX', '79496', '650-009-6921', 'brittany.wood9204@example.com', '2025-09-21 20:46:10.248513') RETURNING "customers_registeredcustomer"."id"; args=('b823500d-aafc-403f-957f-ea1dbc36fde4', 'Brittany', 'Wood', '1631 Smith Course', 'Allen', 'TX', '79496', '650-009-6921', 'brittany.wood9204@example.com', '2025-09-21 20:46:10.248513'); alias=default
[2025-09-21 22:46:10,255] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('1e085fa5-69b8-4765-989b-1dfda2363f6b', 'Spencer', 'Brown', '338 Francis Shore', 'Fort Worth', 'TX', '78755', '814-854-0036', 'spencer.brown4421@example.com', '2025-09-21 20:46:10.254510') RETURNING "customers_registeredcustomer"."id"; args=('1e085fa5-69b8-4765-989b-1dfda2363f6b', 'Spencer', 'Brown', '338 Francis Shore', 'Fort Worth', 'TX', '78755', '814-854-0036', 'spencer.brown4421@example.com', '2025-09-21 20:46:10.254510'); alias=default
[2025-09-21 22:46:10,260] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('b7228642-08b1-4900-9701-fa569e5b904a', 'Robert', 'Ortega', '9748 Molina Turnpike', 'Arlington', 'TX', '78190', '728-889-2324', 'robert.ortega7943@example.com', '2025-09-21 20:46:10.260506') RETURNING "customers_registeredcustomer"."id"; args=('b7228642-08b1-4900-9701-fa569e5b904a', 'Robert', 'Ortega', '9748 Molina Turnpike', 'Arlington', 'TX', '78190', '728-889-2324', 'robert.ortega7943@example.com', '2025-09-21 20:46:10.260506'); alias=default
[2025-09-21 22:46:10,267] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('e1acf5ab-eb87-41fc-9df6-192da1ef4863', 'Francisco', 'Daniels', '1716 Valdez Wells', 'Grand Prairie', 'TX', '79845', '570-629-0836', 'francisco.daniels2320@example.com', '2025-09-21 20:46:10.266503') RETURNING "customers_registeredcustomer"."id"; args=('e1acf5ab-eb87-41fc-9df6-192da1ef4863', 'Francisco', 'Daniels', '1716 Valdez Wells', 'Grand Prairie', 'TX', '79845', '570-629-0836', 'francisco.daniels2320@example.com', '2025-09-21 20:46:10.266503'); alias=default
[2025-09-21 22:46:10,273] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('6e35bbeb-1fab-47e3-8d28-c6e602d7df40', 'Rodney', 'Wilkinson', '2602 Stephenson Trace', 'Flower Mound', 'TX', '75665', '955-246-6020', 'rodney.wilkinson3864@example.com', '2025-09-21 20:46:10.272499') RETURNING "customers_registeredcustomer"."id"; args=('6e35bbeb-1fab-47e3-8d28-c6e602d7df40', 'Rodney', 'Wilkinson', '2602 Stephenson Trace', 'Flower Mound', 'TX', '75665', '955-246-6020', 'rodney.wilkinson3864@example.com', '2025-09-21 20:46:10.272499'); alias=default
[2025-09-21 22:46:10,279] DEBUG django.db.backends (0.000) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('d958085c-ace3-4613-9dfd-7ab4be3aeb38', 'Kathy', 'Gross', '8587 Murphy Gardens', 'Frisco', 'TX', '77510', '027-517-5899', 'kathy.gross3775@example.com', '2025-09-21 20:46:10.278496') RETURNING "customers_registeredcustomer"."id"; args=('d958085c-ace3-4613-9dfd-7ab4be3aeb38', 'Kathy', 'Gross', '8587 Murphy Gardens', 'Frisco', 'TX', '77510', '027-517-5899', 'kathy.gross3775@example.com', '2025-09-21 20:46:10.278496'); alias=default
[2025-09-21 22:46:58,376] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-21 22:46:58,434] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-21 22:46:58,437] DEBUG django.db.backends (0.016) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-21 22:47:00,895] INFO core.views Home page accessed
[2025-09-21 22:47:00,897] INFO django.server "GET / HTTP/1.1" 200 899
[2025-09-21 22:47:07,531] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-21 22:47:07,532] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-21 22:47:07,535] INFO django.server "GET /customers/ HTTP/1.1" 200 7787
[2025-09-21 22:47:15,356] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%None%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%None%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%None%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%None%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%None%' ESCAPE '\'); args=('%None%', '%None%', '%None%', '%None%', '%None%'); alias=default
[2025-09-21 22:47:15,356] INFO customers.views Search performed: None -> 0 results
[2025-09-21 22:47:15,357] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%None%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%None%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%None%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%None%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%None%' ESCAPE '\'); args=('%None%', '%None%', '%None%', '%None%', '%None%'); alias=default
[2025-09-21 22:47:15,358] INFO django.server "GET /customers/?q=None&page=2 HTTP/1.1" 200 1370
[2025-09-21 22:47:29,436] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-21 22:47:29,437] DEBUG django.db.backends (0.016) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-21 22:47:29,439] INFO django.server "GET /customers/?q= HTTP/1.1" 200 7775
[2025-09-21 22:47:35,502] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-21 22:47:35,503] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12 OFFSET 12; args=(); alias=default
[2025-09-21 22:47:35,505] INFO django.server "GET /customers/?q=&page=2 HTTP/1.1" 200 7867
[2025-09-21 22:47:38,889] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-21 22:47:38,890] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12 OFFSET 24; args=(); alias=default
[2025-09-21 22:47:38,893] INFO django.server "GET /customers/?q=&page=3 HTTP/1.1" 200 7983
[2025-09-21 22:47:44,052] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-21 22:47:44,053] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12 OFFSET 36; args=(); alias=default
[2025-09-21 22:47:44,058] INFO django.server "GET /customers/?q=&page=4 HTTP/1.1" 200 7994
[2025-09-21 22:48:31,601] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-21 22:48:31,602] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12 OFFSET 48; args=(); alias=default
[2025-09-21 22:48:31,605] INFO django.server "GET /customers/?q=&page=5 HTTP/1.1" 200 7964
[2025-09-21 22:48:45,691] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Plano%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Plano%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Plano%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Plano%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Plano%' ESCAPE '\'); args=('%Plano%', '%Plano%', '%Plano%', '%Plano%', '%Plano%'); alias=default
[2025-09-21 22:48:45,691] INFO customers.views Search performed: Plano -> 9 results
[2025-09-21 22:48:45,692] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Plano%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Plano%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Plano%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Plano%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Plano%' ESCAPE '\'); args=('%Plano%', '%Plano%', '%Plano%', '%Plano%', '%Plano%'); alias=default
[2025-09-21 22:48:45,693] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Plano%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Plano%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Plano%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Plano%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Plano%' ESCAPE '\') ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 9; args=('%Plano%', '%Plano%', '%Plano%', '%Plano%', '%Plano%'); alias=default
[2025-09-21 22:48:45,694] INFO django.server "GET /customers/?q=Plano HTTP/1.1" 200 5512
[2025-09-21 22:50:03,956] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 450 LIMIT 21; args=(450,); alias=default
[2025-09-21 22:50:03,958] INFO django.server "GET /customers/450/ HTTP/1.1" 200 1024
[2025-09-21 22:50:06,469] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-21 22:50:06,470] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-21 22:50:06,474] INFO django.server "GET /customers/ HTTP/1.1" 200 7787
[2025-09-22 19:31:58,718] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-22 19:31:58,815] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-22 19:31:58,819] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-22 19:32:02,802] INFO core.views Home page accessed
[2025-09-22 19:32:02,820] INFO django.server "GET / HTTP/1.1" 200 899
[2025-09-22 19:32:02,961] WARNING django.request Not Found: /favicon.ico
[2025-09-22 19:32:02,962] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2357
[2025-09-22 19:32:06,666] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-22 19:32:06,670] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-22 19:32:06,677] INFO django.server "GET /customers/ HTTP/1.1" 200 8129
[2025-09-22 19:32:19,472] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-22 19:32:19,473] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-22 19:32:19,476] INFO django.server "GET /customers/?q= HTTP/1.1" 200 8129
[2025-09-22 19:32:29,697] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Frisco%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Frisco%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Frisco%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Frisco%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Frisco%' ESCAPE '\'); args=('%Frisco%', '%Frisco%', '%Frisco%', '%Frisco%', '%Frisco%'); alias=default
[2025-09-22 19:32:29,697] INFO customers.views Search performed: 'Frisco' -> 18 results
[2025-09-22 19:32:29,698] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Frisco%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Frisco%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Frisco%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Frisco%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Frisco%' ESCAPE '\'); args=('%Frisco%', '%Frisco%', '%Frisco%', '%Frisco%', '%Frisco%'); alias=default
[2025-09-22 19:32:29,699] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Frisco%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Frisco%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Frisco%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Frisco%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Frisco%' ESCAPE '\') ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=('%Frisco%', '%Frisco%', '%Frisco%', '%Frisco%', '%Frisco%'); alias=default
[2025-09-22 19:32:29,702] INFO django.server "GET /customers/?q=Frisco HTTP/1.1" 200 7739
[2025-09-22 19:40:20,833] INFO django.utils.autoreload C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\customers\views.py changed, reloading.
[2025-09-22 19:40:21,845] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-22 19:40:21,936] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-22 19:40:21,939] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-22 19:44:49,363] INFO django.server "GET /customers/?q=Frisco HTTP/1.1" 302 0
[2025-09-22 19:44:49,380] WARNING django.request Not Found: /accounts/login/
[2025-09-22 19:44:49,381] WARNING django.server "GET /accounts/login/?next=/customers/%3Fq%3DFrisco HTTP/1.1" 404 2399
[2025-09-22 19:44:49,421] WARNING django.request Not Found: /favicon.ico
[2025-09-22 19:44:49,422] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2357
[2025-09-22 19:45:50,419] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-22 19:45:50,480] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-22 19:45:50,484] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-22 19:45:51,995] INFO core.views Home page accessed
[2025-09-22 19:45:52,021] INFO django.server "GET / HTTP/1.1" 200 899
[2025-09-22 19:45:54,669] INFO django.server "GET /customers/ HTTP/1.1" 302 0
[2025-09-22 19:45:54,708] WARNING django.request Not Found: /accounts/login/
[2025-09-22 19:45:54,708] WARNING django.server "GET /accounts/login/?next=/customers/ HTTP/1.1" 404 2386
[2025-09-22 19:50:55,920] INFO django.utils.autoreload C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\customers\views.py changed, reloading.
[2025-09-22 19:50:56,625] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-22 19:50:56,711] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-22 19:50:56,715] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-22 19:54:52,105] INFO django.utils.autoreload C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\customers\forms.py changed, reloading.
[2025-09-22 19:54:52,725] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-22 19:54:52,804] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-22 19:54:52,806] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-22 19:55:50,477] WARNING django.request Not Found: /accounts/login/
[2025-09-22 19:55:50,478] WARNING django.server "GET /accounts/login/?next=/customers/ HTTP/1.1" 404 2386
[2025-09-22 19:55:50,512] WARNING django.request Not Found: /favicon.ico
[2025-09-22 19:55:50,513] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2357
[2025-09-22 19:56:13,518] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-22 19:56:13,583] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-22 19:56:13,587] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-22 19:56:15,468] INFO core.views Home page accessed
[2025-09-22 19:56:15,484] INFO django.server "GET / HTTP/1.1" 200 899
[2025-09-22 19:56:18,319] INFO django.server "GET /customers/ HTTP/1.1" 302 0
[2025-09-22 19:56:18,357] WARNING django.request Not Found: /accounts/login/
[2025-09-22 19:56:18,358] WARNING django.server "GET /accounts/login/?next=/customers/ HTTP/1.1" 404 2386
[2025-09-22 20:00:13,189] INFO django.utils.autoreload C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\tucker_and_dales_home_services\settings.py changed, reloading.
[2025-09-22 20:00:13,942] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-22 20:00:14,019] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-22 20:00:14,023] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-22 20:01:49,861] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-22 20:01:49,864] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-22 20:01:49,866] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'paxto' LIMIT 21; args=('paxto',); alias=default
[2025-09-22 20:02:12,939] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'paxtrodamus' LIMIT 21; args=('paxtrodamus',); alias=default
[2025-09-22 20:02:29,594] DEBUG django.db.backends (0.000) INSERT INTO "auth_user" ("password", "last_login", "is_superuser", "username", "first_name", "last_name", "email", "is_staff", "is_active", "date_joined") VALUES ('pbkdf2_sha256$600000$H3D82iEBwYXy9J5yZevG5I$fOq3lYbFUQPwoLhTPfqk7Ed3k0Z/6OvM18YUtoEWD2U=', NULL, 1, 'paxtrodamus', '', '', '', 1, 1, '2025-09-22 18:02:29.015764') RETURNING "auth_user"."id"; args=('pbkdf2_sha256$600000$H3D82iEBwYXy9J5yZevG5I$fOq3lYbFUQPwoLhTPfqk7Ed3k0Z/6OvM18YUtoEWD2U=', None, True, 'paxtrodamus', '', '', '', True, True, '2025-09-22 18:02:29.015764'); alias=default
[2025-09-22 20:03:13,045] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-22 20:03:13,110] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-22 20:03:13,113] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-22 20:03:15,024] INFO core.views Home page accessed
[2025-09-22 20:03:15,039] INFO django.server "GET / HTTP/1.1" 200 899
[2025-09-22 20:03:17,535] INFO django.server "GET /customers/ HTTP/1.1" 302 0
[2025-09-22 20:03:17,605] INFO django.server "GET /admin/login/?next=/customers/ HTTP/1.1" 200 4189
[2025-09-22 20:03:17,626] INFO django.server "GET /static/admin/css/dark_mode.css HTTP/1.1" 304 0
[2025-09-22 20:03:17,627] INFO django.server "GET /static/admin/css/base.css HTTP/1.1" 304 0
[2025-09-22 20:03:17,629] INFO django.server "GET /static/admin/css/login.css HTTP/1.1" 304 0
[2025-09-22 20:03:17,629] INFO django.server "GET /static/admin/css/responsive.css HTTP/1.1" 304 0
[2025-09-22 20:03:17,630] INFO django.server "GET /static/admin/css/nav_sidebar.css HTTP/1.1" 304 0
[2025-09-22 20:03:17,630] INFO django.server "GET /static/admin/js/nav_sidebar.js HTTP/1.1" 304 0
[2025-09-22 20:03:17,631] INFO django.server "GET /static/admin/js/theme.js HTTP/1.1" 304 0
[2025-09-22 20:03:19,808] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'paxtrodamus' LIMIT 21; args=('paxtrodamus',); alias=default
[2025-09-22 20:03:20,379] DEBUG django.db.backends (0.000) SELECT 1 AS "a" FROM "django_session" WHERE "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr' LIMIT 1; args=(1, 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-22 20:03:20,380] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-22 20:03:20,381] DEBUG django.db.backends (0.000) INSERT INTO "django_session" ("session_key", "session_data", "expire_date") VALUES ('rzodvczxt58486ne9lxkcxji90uj13yr', 'e30:1v0ksi:OzuAxGglvbIs8s27K9cYc5Y703sIkknI6MpsRr6h7PE', '2025-10-06 18:03:20.380097'); args=('rzodvczxt58486ne9lxkcxji90uj13yr', 'e30:1v0ksi:OzuAxGglvbIs8s27K9cYc5Y703sIkknI6MpsRr6h7PE', '2025-10-06 18:03:20.380097'); alias=default
[2025-09-22 20:03:20,385] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-22 20:03:20,391] DEBUG django.db.backends (0.016) UPDATE "auth_user" SET "last_login" = '2025-09-22 18:03:20.385607' WHERE "auth_user"."id" = 1; args=('2025-09-22 18:03:20.385607', 1); alias=default
[2025-09-22 20:03:20,392] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-22 20:03:20,393] DEBUG django.db.backends (0.000) UPDATE "django_session" SET "session_data" = '.eJxVjDkOwjAUBe_iGllx5JWSnjNYfzMOIEeKkwpxd4iUAto3M--lMmxrzVuXJU-szsqo0--GQA9pO-A7tNusaW7rMqHeFX3Qrq8zy_NyuH8HFXr91pYiE5APngIkkFhGXxyiIAxxDNZSgjgQeyF07EwS40oC9NZwsMGo9wcWtTjN:1v0ksi:no829tDUusKdQJgkr3QndK0zVIIl9kHC7idP7VX5W9Q', "expire_date" = '2025-10-06 18:03:20.392577' WHERE "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr'; args=('.eJxVjDkOwjAUBe_iGllx5JWSnjNYfzMOIEeKkwpxd4iUAto3M--lMmxrzVuXJU-szsqo0--GQA9pO-A7tNusaW7rMqHeFX3Qrq8zy_NyuH8HFXr91pYiE5APngIkkFhGXxyiIAxxDNZSgjgQeyF07EwS40oC9NZwsMGo9wcWtTjN:1v0ksi:no829tDUusKdQJgkr3QndK0zVIIl9kHC7idP7VX5W9Q', '2025-10-06 18:03:20.392577', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-22 20:03:20,397] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-22 20:03:20,397] INFO django.server "POST /admin/login/?next=/customers/ HTTP/1.1" 302 0
[2025-09-22 20:03:20,401] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-22 18:03:20.400310' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-22 18:03:20.400310', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-22 20:03:20,402] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-22 20:03:20,402] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-22 20:03:20,405] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-22 20:03:20,408] INFO django.server "GET /customers/ HTTP/1.1" 200 9293
[2025-09-22 20:04:35,327] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-22 18:04:35.326034' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-22 18:04:35.326034', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-22 20:04:35,328] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-22 20:04:35,328] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-22 20:04:35,331] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-22 20:04:35,335] INFO django.server "GET /customers/ HTTP/1.1" 200 9233
[2025-09-22 20:04:35,518] WARNING django.request Not Found: /favicon.ico
[2025-09-22 20:04:35,518] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2357
[2025-09-22 20:04:38,691] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-22 18:04:38.689054' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-22 18:04:38.689054', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-22 20:04:38,691] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-22 20:04:38,692] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 447 LIMIT 21; args=(447,); alias=default
[2025-09-22 20:04:38,701] INFO django.server "GET /customers/447/ HTTP/1.1" 200 3052
[2025-09-22 20:04:49,739] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-22 18:04:49.738703' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-22 18:04:49.738703', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-22 20:04:49,740] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-22 20:04:49,741] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-22 20:04:49,742] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-22 20:04:49,747] INFO django.server "GET /customers/ HTTP/1.1" 200 9233
[2025-09-22 20:04:51,225] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-22 18:04:51.224807' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-22 18:04:51.224807', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-22 20:04:51,226] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-22 20:04:51,227] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 447 LIMIT 21; args=(447,); alias=default
[2025-09-22 20:04:51,234] INFO django.server "GET /customers/447/edit/ HTTP/1.1" 200 2911
[2025-09-22 20:05:10,583] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-22 18:05:10.582279' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-22 18:05:10.582279', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-22 20:05:10,584] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-22 20:05:10,585] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-22 20:05:10,586] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-22 20:05:10,589] INFO django.server "GET /customers/ HTTP/1.1" 200 9233
[2025-09-22 20:05:12,176] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-22 18:05:12.175600' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-22 18:05:12.175600', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-22 20:05:12,177] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-22 20:05:12,178] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 447 LIMIT 21; args=(447,); alias=default
[2025-09-22 20:05:12,182] INFO django.server "GET /customers/447/ HTTP/1.1" 200 3052
[2025-09-22 20:05:19,600] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-22 18:05:19.599119' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-22 18:05:19.599119', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-22 20:05:19,601] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-22 20:05:19,602] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-22 20:05:19,603] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-22 20:05:19,607] INFO django.server "GET /customers/ HTTP/1.1" 200 9233
[2025-09-22 20:05:22,484] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-22 18:05:22.483556' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-22 18:05:22.483556', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-22 20:05:22,485] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-22 20:05:22,486] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 447 LIMIT 21; args=(447,); alias=default
[2025-09-22 20:05:22,490] INFO django.server "GET /customers/447/edit/ HTTP/1.1" 200 2911
[2025-09-22 20:06:15,225] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-22 18:06:15.224204' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-22 18:06:15.224204', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-22 20:06:15,226] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-22 20:06:15,226] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 447 LIMIT 21; args=(447,); alias=default
[2025-09-22 20:06:15,231] INFO django.server "GET /customers/447/ HTTP/1.1" 200 3052
[2025-09-22 20:06:17,990] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-22 18:06:17.988894' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-22 18:06:17.988894', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-22 20:06:17,990] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-22 20:06:17,991] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-22 20:06:17,992] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-22 20:06:17,996] INFO django.server "GET /customers/ HTTP/1.1" 200 9233
[2025-09-22 20:06:23,249] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-22 18:06:23.248582' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-22 18:06:23.248582', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-22 20:06:23,250] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-22 20:06:23,251] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 447 LIMIT 21; args=(447,); alias=default
[2025-09-22 20:06:23,256] INFO django.server "GET /customers/447/ HTTP/1.1" 200 3052
[2025-09-22 20:06:35,218] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-22 18:06:35.216251' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-22 18:06:35.216251', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-22 20:06:35,218] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-22 20:06:35,219] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-22 20:06:35,220] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-22 20:06:35,223] INFO django.server "GET /customers/ HTTP/1.1" 200 9233
[2025-09-22 20:06:36,541] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-22 18:06:36.540979' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-22 18:06:36.540979', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-22 20:06:36,542] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-22 20:06:36,543] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 447 LIMIT 21; args=(447,); alias=default
[2025-09-22 20:06:36,547] INFO django.server "GET /customers/447/ HTTP/1.1" 200 3052
[2025-09-22 20:06:49,400] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-22 18:06:49.398829' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-22 18:06:49.398829', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-22 20:06:49,401] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-22 20:06:49,401] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-22 20:06:49,402] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-22 20:06:49,406] INFO django.server "GET /customers/ HTTP/1.1" 200 9233
[2025-09-22 20:13:31,301] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-22 18:13:31.299977' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-22 18:13:31.299977', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-22 20:13:31,302] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-22 20:13:31,302] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-22 20:13:31,305] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-22 20:13:31,307] INFO django.server "GET /customers/ HTTP/1.1" 200 8069
[2025-09-22 20:13:31,475] WARNING django.request Not Found: /favicon.ico
[2025-09-22 20:13:31,476] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2357
[2025-09-22 20:13:34,193] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-22 18:13:34.192335' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-22 18:13:34.192335', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-22 20:13:34,194] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-22 20:13:34,195] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 406 LIMIT 21; args=(406,); alias=default
[2025-09-22 20:13:34,201] INFO django.server "GET /customers/406/ HTTP/1.1" 200 3043
[2025-09-22 20:15:58,794] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-22 18:15:58.790727' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-22 18:15:58.790727', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-22 20:15:58,795] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-22 20:15:58,797] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-22 20:15:58,799] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-22 20:15:58,804] INFO django.server "GET /customers/ HTTP/1.1" 200 8069
[2025-09-24 17:23:47,387] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-24 17:23:47,500] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-24 17:23:47,504] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-24 17:23:49,645] INFO core.views Home page accessed
[2025-09-24 17:23:49,675] INFO django.server "GET / HTTP/1.1" 200 899
[2025-09-24 17:23:50,149] WARNING django.request Not Found: /favicon.ico
[2025-09-24 17:23:50,150] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2357
[2025-09-24 17:38:17,014] INFO django.utils.autoreload C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\customers\views.py changed, reloading.
[2025-09-24 17:38:17,772] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-24 17:38:17,870] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-24 17:38:17,875] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-24 17:42:00,708] INFO django.utils.autoreload C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\tucker_and_dales_home_services\urls.py changed, reloading.
[2025-09-24 17:42:01,667] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-24 17:42:01,752] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-24 17:42:01,754] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-24 18:06:22,784] INFO django.utils.autoreload C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\tucker_and_dales_home_services\settings.py changed, reloading.
[2025-09-24 18:06:23,446] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-24 18:06:23,514] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-24 18:06:23,517] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-24 18:06:39,833] INFO core.views Home page accessed
[2025-09-24 18:06:39,840] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 16:06:39.838572' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 16:06:39.838572', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 18:06:39,848] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 18:06:39,852] INFO django.server "GET / HTTP/1.1" 200 1370
[2025-09-24 18:06:39,995] WARNING django.request Not Found: /favicon.ico
[2025-09-24 18:06:39,995] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2466
[2025-09-24 18:08:33,816] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 16:08:33.815792' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 16:08:33.815792', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 18:08:33,817] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 18:08:33,828] INFO django.server "GET /accounts/login/ HTTP/1.1" 200 2031
[2025-09-24 18:08:40,901] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'paxtrodamus' LIMIT 21; args=('paxtrodamus',); alias=default
[2025-09-24 18:08:41,447] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 16:08:41.446167' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 16:08:41.446167', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 18:08:41,460] DEBUG django.db.backends (0.016) UPDATE "auth_user" SET "last_login" = '2025-09-24 16:08:41.447167' WHERE "auth_user"."id" = 1; args=('2025-09-24 16:08:41.447167', 1); alias=default
[2025-09-24 18:08:41,461] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-24 18:08:41,462] DEBUG django.db.backends (0.000) UPDATE "django_session" SET "session_data" = '.eJxVjDkOwjAUBe_iGllx5JWSnjNYfzMOIEeKkwpxd4iUAto3M--lMmxrzVuXJU-szsqo0--GQA9pO-A7tNusaW7rMqHeFX3Qrq8zy_NyuH8HFXr91pYiE5APngIkkFhGXxyiIAxxDNZSgjgQeyF07EwS40oC9NZwsMGo9wcWtTjN:1v1S2r:admDWb0TAlbPu2sTd1f4HhMp0QgiRVuOGt0CZ6eSjIs', "expire_date" = '2025-10-08 16:08:41.461254' WHERE "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr'; args=('.eJxVjDkOwjAUBe_iGllx5JWSnjNYfzMOIEeKkwpxd4iUAto3M--lMmxrzVuXJU-szsqo0--GQA9pO-A7tNusaW7rMqHeFX3Qrq8zy_NyuH8HFXr91pYiE5APngIkkFhGXxyiIAxxDNZSgjgQeyF07EwS40oC9NZwsMGo9wcWtTjN:1v1S2r:admDWb0TAlbPu2sTd1f4HhMp0QgiRVuOGt0CZ6eSjIs', '2025-10-08 16:08:41.461254', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 18:08:41,466] DEBUG django.db.backends (0.015) COMMIT; args=None; alias=default
[2025-09-24 18:08:41,466] INFO django.server "POST /accounts/login/ HTTP/1.1" 302 0
[2025-09-24 18:08:41,469] INFO core.views Home page accessed
[2025-09-24 18:08:41,470] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 16:08:41.469749' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 16:08:41.469749', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 18:08:41,471] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 18:08:41,472] INFO django.server "GET / HTTP/1.1" 200 1370
[2025-09-24 18:09:11,390] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 16:09:11.389974' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 16:09:11.389974', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 18:09:11,391] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 18:09:11,392] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 18:09:11,395] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 18:09:11,401] INFO django.server "GET /customers/ HTTP/1.1" 200 8540
[2025-09-24 19:01:03,782] INFO django.utils.autoreload C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\customers\views.py changed, reloading.
[2025-09-24 19:01:04,474] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-24 19:01:04,552] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-24 19:01:04,557] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-24 19:01:11,220] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 17:01:11.218876' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 17:01:11.218876', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 19:01:11,221] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 19:01:11,223] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 19:01:11,236] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 19:01:11,262] INFO django.server "GET /customers/ HTTP/1.1" 200 9028
[2025-09-24 19:01:11,412] WARNING django.request Not Found: /favicon.ico
[2025-09-24 19:01:11,412] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2466
[2025-09-24 19:01:18,930] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 17:01:18.928389' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 17:01:18.928389', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 19:01:18,931] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 19:01:18,932] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 447 LIMIT 21; args=(447,); alias=default
[2025-09-24 19:01:18,935] INFO django.server "GET /customers/447/ HTTP/1.1" 200 3521
[2025-09-24 19:01:25,536] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 17:01:25.535411' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 17:01:25.535411', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 19:01:25,537] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 19:01:25,538] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 447 LIMIT 21; args=(447,); alias=default
[2025-09-24 19:01:25,548] INFO django.server "GET /customers/447/edit/ HTTP/1.1" 200 5372
[2025-09-24 19:01:30,547] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 17:01:30.546528' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 17:01:30.546528', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 19:01:30,548] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 19:01:30,549] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 19:01:30,550] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 19:01:30,553] INFO django.server "GET /customers/ HTTP/1.1" 200 9028
[2025-09-24 19:01:32,223] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 17:01:32.222977' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 17:01:32.222977', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 19:01:32,224] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 19:01:32,224] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 447 LIMIT 21; args=(447,); alias=default
[2025-09-24 19:01:32,226] INFO django.server "GET /customers/447/ HTTP/1.1" 200 3521
[2025-09-24 19:01:47,481] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 17:01:47.480931' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 17:01:47.480931', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 19:01:47,482] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 19:01:47,483] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 19:01:47,485] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 19:01:47,489] INFO django.server "GET /customers/ HTTP/1.1" 200 9028
[2025-09-24 19:02:06,149] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 19:02:06,150] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 19:17:21,452] INFO django.utils.autoreload C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\tucker_and_dales_home_services\settings.py changed, reloading.
[2025-09-24 19:17:22,018] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-24 19:17:22,090] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-24 19:17:22,093] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-24 19:31:02,794] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-24 19:31:02,855] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-24 19:31:02,857] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-24 19:31:04,829] INFO core.views Home page accessed
[2025-09-24 19:31:04,851] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 17:31:04.846905' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 17:31:04.846905', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 19:31:04,855] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 19:31:04,865] INFO django.server "GET / HTTP/1.1" 200 1966
[2025-09-24 19:31:10,843] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 17:31:10.842747' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 17:31:10.842747', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 19:31:10,845] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 19:31:10,846] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 19:31:10,850] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 19:31:10,856] INFO django.server "GET /customers/ HTTP/1.1" 200 9036
[2025-09-24 19:32:56,412] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 17:32:56.411762' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 17:32:56.411762', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 19:32:56,413] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 19:32:56,414] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 19:32:56,415] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 19:32:56,417] INFO django.server "GET /customers/ HTTP/1.1" 200 9036
[2025-09-24 19:32:56,602] WARNING django.request Not Found: /favicon.ico
[2025-09-24 19:32:56,603] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2466
[2025-09-24 19:33:52,572] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 17:33:52.571871' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 17:33:52.571871', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 19:33:52,573] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 19:33:52,574] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 406 LIMIT 21; args=(406,); alias=default
[2025-09-24 19:33:52,577] INFO django.server "GET /customers/406/ HTTP/1.1" 200 3514
[2025-09-24 19:33:56,865] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 17:33:56.864367' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 17:33:56.864367', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 19:33:56,866] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 19:33:56,867] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 19:33:56,868] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 19:33:56,870] INFO django.server "GET /customers/ HTTP/1.1" 200 9036
[2025-09-24 19:34:27,023] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 19:34:27,023] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 19:43:42,715] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 17:43:42.714949' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 17:43:42.714949', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 19:43:42,717] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 19:43:42,719] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 19:43:42,724] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 19:43:42,727] INFO django.server "GET /customers/ HTTP/1.1" 200 9190
[2025-09-24 19:43:42,762] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 19:43:42,763] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 19:43:42,824] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 200 1616
[2025-09-24 19:43:42,970] WARNING django.request Not Found: /favicon.ico
[2025-09-24 19:43:42,972] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2466
[2025-09-24 19:49:38,717] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 17:49:38.715475' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 17:49:38.715475', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 19:49:38,718] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 19:49:38,719] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 19:49:38,721] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 19:49:38,724] INFO django.server "GET /customers/ HTTP/1.1" 200 9190
[2025-09-24 19:49:38,745] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 200 1616
[2025-09-24 19:49:38,775] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 19:49:38,786] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 19:49:42,899] WARNING django.request Not Found: /favicon.ico
[2025-09-24 19:49:42,900] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2466
[2025-09-24 19:49:59,806] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-24 19:49:59,870] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-24 19:49:59,874] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-24 19:50:02,015] INFO core.views Home page accessed
[2025-09-24 19:50:02,036] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 17:50:02.032264' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 17:50:02.032264', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 19:50:02,039] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 19:50:02,051] INFO django.server "GET / HTTP/1.1" 200 2120
[2025-09-24 19:50:11,432] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 19:50:11,433] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 19:50:22,662] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 17:50:22.661089' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 17:50:22.661089', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 19:50:22,663] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 19:50:22,664] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 19:50:22,668] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 19:50:22,674] INFO django.server "GET /customers/ HTTP/1.1" 200 9190
[2025-09-24 19:50:22,707] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 304 0
[2025-09-24 19:50:22,724] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 19:50:22,725] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 19:59:32,365] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 17:59:32.363809' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 17:59:32.363809', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 19:59:32,367] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 19:59:32,368] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 19:59:32,373] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 19:59:32,378] INFO django.server "GET /customers/ HTTP/1.1" 200 10401
[2025-09-24 19:59:32,412] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 19:59:32,413] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 19:59:32,458] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 200 1835
[2025-09-24 19:59:32,554] WARNING django.request Not Found: /favicon.ico
[2025-09-24 19:59:32,555] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2466
[2025-09-24 20:00:26,580] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 18:00:26.578771' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 18:00:26.578771', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 20:00:26,581] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 20:00:26,582] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 20:00:26,587] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 20:00:26,591] INFO django.server "GET /customers/ HTTP/1.1" 200 10341
[2025-09-24 20:00:26,634] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 200 1835
[2025-09-24 20:00:26,648] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 20:00:26,648] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 20:00:26,734] WARNING django.request Not Found: /favicon.ico
[2025-09-24 20:00:26,734] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2466
[2025-09-24 20:05:45,615] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 18:05:45.613660' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 18:05:45.613660', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 20:05:45,617] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 20:05:45,618] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 20:05:45,621] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 20:05:45,624] INFO django.server "GET /customers/ HTTP/1.1" 200 10341
[2025-09-24 20:05:45,654] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 200 2901
[2025-09-24 20:05:45,662] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 20:05:45,663] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 20:05:45,782] WARNING django.request Not Found: /favicon.ico
[2025-09-24 20:05:45,783] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2466
[2025-09-24 20:05:58,972] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 18:05:58.970055' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 18:05:58.970055', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 20:05:58,973] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 20:05:58,974] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 406 LIMIT 21; args=(406,); alias=default
[2025-09-24 20:05:58,977] INFO django.server "GET /customers/406/ HTTP/1.1" 200 3668
[2025-09-24 20:05:59,016] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 20:05:59,017] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 20:05:59,022] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 304 0
[2025-09-24 20:06:31,593] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 18:06:31.592651' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 18:06:31.592651', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 20:06:31,594] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 20:06:31,594] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 20:06:31,595] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 20:06:31,599] INFO django.server "GET /customers/ HTTP/1.1" 200 10341
[2025-09-24 20:06:31,642] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 20:06:31,643] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 20:06:31,645] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 304 0
[2025-09-24 20:06:33,376] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 18:06:33.375576' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 18:06:33.375576', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 20:06:33,377] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 20:06:33,378] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 406 LIMIT 21; args=(406,); alias=default
[2025-09-24 20:06:33,379] INFO django.server "GET /customers/406/ HTTP/1.1" 200 3668
[2025-09-24 20:06:33,420] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 20:06:33,421] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 20:06:37,481] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 18:06:37.479370' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 18:06:37.479370', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 20:06:37,482] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 20:06:37,483] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 20:06:37,484] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 20:06:37,488] INFO django.server "GET /customers/ HTTP/1.1" 200 10341
[2025-09-24 20:06:37,527] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 20:06:37,528] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 20:12:27,966] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 18:12:27.965296' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 18:12:27.965296', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 20:12:27,967] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 20:12:27,968] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 20:12:27,969] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 20:12:27,974] INFO django.server "GET /customers/ HTTP/1.1" 200 10341
[2025-09-24 20:12:27,998] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 200 4820
[2025-09-24 20:12:28,008] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 20:12:28,008] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 20:12:28,246] WARNING django.request Not Found: /favicon.ico
[2025-09-24 20:12:28,247] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2466
[2025-09-24 20:14:12,002] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 18:14:12.000541' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 18:14:12.000541', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 20:14:12,002] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 20:14:12,003] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 406 LIMIT 21; args=(406,); alias=default
[2025-09-24 20:14:12,005] INFO django.server "GET /customers/406/ HTTP/1.1" 200 3668
[2025-09-24 20:14:12,050] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 20:14:12,051] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 20:14:12,055] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 304 0
[2025-09-24 20:14:16,269] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 18:14:16.267821' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 18:14:16.267821', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 20:14:16,269] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 20:14:16,270] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 20:14:16,271] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 20:14:16,276] INFO django.server "GET /customers/ HTTP/1.1" 200 10341
[2025-09-24 20:14:16,318] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 20:14:16,318] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 20:14:20,864] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 18:14:20.863871' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 18:14:20.863871', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 20:14:20,865] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 20:14:20,866] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 406 LIMIT 21; args=(406,); alias=default
[2025-09-24 20:14:20,879] INFO django.server "GET /customers/406/edit/ HTTP/1.1" 200 5522
[2025-09-24 20:14:20,917] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 20:14:20,918] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 20:14:24,916] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 18:14:24.915413' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 18:14:24.915413', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 20:14:24,917] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 20:14:24,917] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 20:14:24,919] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 20:14:24,923] INFO django.server "GET /customers/ HTTP/1.1" 200 10341
[2025-09-24 20:14:24,967] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 20:14:24,967] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 20:14:24,974] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 304 0
[2025-09-24 20:14:29,487] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 18:14:29.486620' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 18:14:29.486620', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 20:14:29,488] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 20:14:29,489] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 406 LIMIT 21; args=(406,); alias=default
[2025-09-24 20:14:29,495] INFO django.server "GET /customers/406/edit/ HTTP/1.1" 200 5522
[2025-09-24 20:14:29,540] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 20:14:29,540] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 20:14:39,450] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 18:14:39.449270' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 18:14:39.449270', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 20:14:39,451] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 20:14:39,452] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 20:14:39,453] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 20:14:39,457] INFO django.server "GET /customers/ HTTP/1.1" 200 10341
[2025-09-24 20:14:39,501] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 20:14:39,502] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 20:14:39,508] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 304 0
[2025-09-24 20:14:41,895] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 18:14:41.893897' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 18:14:41.893897', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 20:14:41,896] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 20:14:41,896] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 406 LIMIT 21; args=(406,); alias=default
[2025-09-24 20:14:41,898] INFO django.server "GET /customers/406/ HTTP/1.1" 200 3668
[2025-09-24 20:14:41,942] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 20:14:41,943] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 20:19:03,478] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 18:19:03.476502' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 18:19:03.476502', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 20:19:03,479] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 20:19:03,480] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 406 LIMIT 21; args=(406,); alias=default
[2025-09-24 20:19:03,482] INFO django.server "GET /customers/406/ HTTP/1.1" 200 3668
[2025-09-24 20:19:03,500] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 200 5318
[2025-09-24 20:19:03,510] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 20:19:03,511] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 20:19:03,609] WARNING django.request Not Found: /favicon.ico
[2025-09-24 20:19:03,610] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2466
[2025-09-24 20:19:07,339] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 18:19:07.338672' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 18:19:07.338672', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 20:19:07,340] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 20:19:07,341] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 20:19:07,342] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 20:19:07,345] INFO django.server "GET /customers/ HTTP/1.1" 200 10341
[2025-09-24 20:19:07,391] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 20:19:07,392] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 20:19:07,397] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 304 0
[2025-09-24 20:25:18,269] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 18:25:18.267967' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 18:25:18.267967', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 20:25:18,270] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 20:25:18,270] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 431 LIMIT 21; args=(431,); alias=default
[2025-09-24 20:25:18,276] INFO django.server "GET /customers/431/edit/ HTTP/1.1" 200 5530
[2025-09-24 20:25:18,317] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 20:25:18,318] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 20:25:18,325] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 304 0
[2025-09-24 20:25:22,360] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 18:25:22.358935' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 18:25:22.358935', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 20:25:22,360] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 20:25:22,361] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 20:25:22,362] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 20:25:22,366] INFO django.server "GET /customers/ HTTP/1.1" 200 10341
[2025-09-24 20:25:22,412] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 20:25:22,413] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 20:25:24,378] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 18:25:24.376661' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 18:25:24.376661', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 20:25:24,379] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 20:25:24,379] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 406 LIMIT 21; args=(406,); alias=default
[2025-09-24 20:25:24,381] INFO django.server "GET /customers/406/ HTTP/1.1" 200 3668
[2025-09-24 20:25:24,421] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 20:25:24,422] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 20:30:51,342] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 18:30:51.341791' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 18:30:51.341791', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 20:30:51,343] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 20:30:51,344] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 406 LIMIT 21; args=(406,); alias=default
[2025-09-24 20:30:51,346] INFO django.server "GET /customers/406/ HTTP/1.1" 200 3668
[2025-09-24 20:30:51,360] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 200 5723
[2025-09-24 20:30:51,379] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 20:30:51,380] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 20:30:51,506] WARNING django.request Not Found: /favicon.ico
[2025-09-24 20:30:51,507] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2466
[2025-09-24 20:31:21,095] INFO core.views Home page accessed
[2025-09-24 20:31:21,097] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 18:31:21.096417' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 18:31:21.096417', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 20:31:21,098] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 20:31:21,099] INFO django.server "GET / HTTP/1.1" 200 2120
[2025-09-24 20:31:21,144] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 20:31:21,145] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 20:31:21,152] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 304 0
[2025-09-24 20:31:24,759] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 18:31:24.758954' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 18:31:24.758954', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 20:31:24,760] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 20:31:24,761] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 20:31:24,762] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 20:31:24,766] INFO django.server "GET /customers/ HTTP/1.1" 200 10341
[2025-09-24 20:31:24,803] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 20:31:24,804] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 20:31:24,809] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 304 0
[2025-09-24 20:32:15,280] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 18:32:15.279605' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 18:32:15.279605', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 20:32:15,281] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 20:32:15,282] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 20:32:15,283] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 20:32:15,286] INFO django.server "GET /customers/ HTTP/1.1" 200 10341
[2025-09-24 20:32:15,303] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 200 5723
[2025-09-24 20:32:15,319] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 20:32:15,319] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 20:32:15,441] WARNING django.request Not Found: /favicon.ico
[2025-09-24 20:32:15,442] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2466
[2025-09-24 20:37:03,066] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 18:37:03.065704' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 18:37:03.065704', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 20:37:03,067] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 20:37:03,068] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 20:37:03,070] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 20:37:03,073] INFO django.server "GET /customers/ HTTP/1.1" 200 10341
[2025-09-24 20:37:03,098] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 200 1497
[2025-09-24 20:37:03,104] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 20:37:03,105] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 20:37:03,230] WARNING django.request Not Found: /favicon.ico
[2025-09-24 20:37:03,261] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2466
[2025-09-24 20:37:41,288] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 18:37:41.287448' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 18:37:41.287448', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 20:37:41,289] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 20:37:41,290] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 20:37:41,291] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 20:37:41,296] INFO django.server "GET /customers/ HTTP/1.1" 200 10341
[2025-09-24 20:37:41,313] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 200 5723
[2025-09-24 20:37:41,327] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 20:37:41,328] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 20:37:41,525] WARNING django.request Not Found: /favicon.ico
[2025-09-24 20:37:41,526] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2466
[2025-09-24 20:38:18,500] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 18:38:18.499698' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 18:38:18.499698', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 20:38:18,501] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 20:38:18,502] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 20:38:18,504] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 20:38:18,508] INFO django.server "GET /customers/ HTTP/1.1" 200 10341
[2025-09-24 20:38:18,524] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 200 5870
[2025-09-24 20:38:18,539] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 20:38:18,539] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 20:38:18,683] WARNING django.request Not Found: /favicon.ico
[2025-09-24 20:38:18,684] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2466
[2025-09-24 20:38:23,920] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 18:38:23.919771' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 18:38:23.919771', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 20:38:23,921] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 20:38:23,922] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 20:38:23,923] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 20:38:23,926] INFO django.server "GET /customers/ HTTP/1.1" 200 10341
[2025-09-24 20:38:23,944] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 200 5870
[2025-09-24 20:38:23,957] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 20:38:23,958] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 20:38:24,080] WARNING django.request Not Found: /favicon.ico
[2025-09-24 20:38:24,081] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2466
[2025-09-24 20:49:41,711] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 18:49:41.709693' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 18:49:41.709693', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 20:49:41,712] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 20:49:41,713] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 20:49:41,717] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 20:49:41,721] INFO django.server "GET /customers/ HTTP/1.1" 200 10365
[2025-09-24 20:49:41,743] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 200 6313
[2025-09-24 20:49:41,748] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 20:49:41,748] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 20:49:41,941] WARNING django.request Not Found: /favicon.ico
[2025-09-24 20:49:41,942] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2466
[2025-09-24 20:50:37,719] INFO core.views Home page accessed
[2025-09-24 20:50:37,721] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 18:50:37.720024' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 18:50:37.720024', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 20:50:37,722] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 20:50:37,722] INFO django.server "GET / HTTP/1.1" 200 2120
[2025-09-24 20:50:37,770] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 20:50:37,771] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 20:50:37,774] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 304 0
[2025-09-24 20:50:48,347] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 18:50:48.346257' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 18:50:48.346257', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 20:50:48,348] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 20:50:48,349] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 20:50:48,350] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 20:50:48,355] INFO django.server "GET /customers/ HTTP/1.1" 200 10365
[2025-09-24 20:50:48,400] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 20:50:48,409] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 304 0
[2025-09-24 20:50:48,422] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 20:57:05,229] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 18:57:05.227692' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 18:57:05.227692', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 20:57:05,230] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 20:57:05,231] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 20:57:05,235] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 20:57:05,239] INFO django.server "GET /customers/ HTTP/1.1" 200 10437
[2025-09-24 20:57:05,264] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 200 6632
[2025-09-24 20:57:05,270] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 20:57:05,270] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 20:57:05,298] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 20:57:05,411] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 20:57:05,457] WARNING django.request Not Found: /favicon.ico
[2025-09-24 20:57:05,458] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2466
[2025-09-24 20:57:28,247] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 18:57:28.246151' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 18:57:28.246151', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 20:57:28,248] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 20:57:28,249] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 20:57:28,250] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12 OFFSET 12; args=(); alias=default
[2025-09-24 20:57:28,255] INFO django.server "GET /customers/?q=&page=2 HTTP/1.1" 200 10529
[2025-09-24 20:57:28,305] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 20:57:28,305] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 20:57:28,308] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 304 0
[2025-09-24 20:57:28,330] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 20:57:34,230] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 18:57:34.228499' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 18:57:34.228499', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 20:57:34,231] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 20:57:34,232] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 20:57:34,234] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12 OFFSET 24; args=(); alias=default
[2025-09-24 20:57:34,237] INFO django.server "GET /customers/?q=&page=3 HTTP/1.1" 200 10645
[2025-09-24 20:57:34,278] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 304 0
[2025-09-24 20:57:34,284] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 20:57:34,284] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 20:57:34,307] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 20:57:41,946] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 18:57:41.945464' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 18:57:41.945464', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 20:57:41,947] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 20:57:41,949] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Denton%' ESCAPE '\'); args=('%Denton%', '%Denton%', '%Denton%', '%Denton%', '%Denton%'); alias=default
[2025-09-24 20:57:41,949] INFO customers.views Search performed: 'Denton' -> 6 results
[2025-09-24 20:57:41,950] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Denton%' ESCAPE '\'); args=('%Denton%', '%Denton%', '%Denton%', '%Denton%', '%Denton%'); alias=default
[2025-09-24 20:57:41,951] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Denton%' ESCAPE '\') ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 6; args=('%Denton%', '%Denton%', '%Denton%', '%Denton%', '%Denton%'); alias=default
[2025-09-24 20:57:41,954] INFO django.server "GET /customers/?q=Denton HTTP/1.1" 200 6137
[2025-09-24 20:57:42,001] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 304 0
[2025-09-24 20:57:42,003] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 20:57:42,004] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 20:57:42,025] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 20:59:17,006] INFO core.views Home page accessed
[2025-09-24 20:59:17,008] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 18:59:17.007773' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 18:59:17.007773', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 20:59:17,009] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 20:59:17,010] INFO django.server "GET / HTTP/1.1" 200 2192
[2025-09-24 20:59:17,053] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 20:59:17,054] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 20:59:17,058] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 304 0
[2025-09-24 20:59:17,077] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 21:20:31,367] INFO core.views Home page accessed
[2025-09-24 21:20:31,371] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 19:20:31.369070' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 19:20:31.369070', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 21:20:31,372] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 21:20:31,373] INFO django.server "GET / HTTP/1.1" 200 2285
[2025-09-24 21:20:31,390] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 200 8456
[2025-09-24 21:20:31,411] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 21:20:31,412] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 21:20:31,447] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 21:20:31,495] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 21:20:31,553] WARNING django.request Not Found: /favicon.ico
[2025-09-24 21:20:31,553] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2466
[2025-09-24 21:20:37,083] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 19:20:37.082356' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 19:20:37.082356', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 21:20:37,084] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 21:20:37,085] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 21:20:37,089] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 21:20:37,094] INFO django.server "GET /customers/ HTTP/1.1" 200 10530
[2025-09-24 21:20:37,146] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 21:20:37,147] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 21:20:37,152] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 304 0
[2025-09-24 21:20:37,204] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 21:20:44,466] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 19:20:44.465985' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 19:20:44.465985', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 21:20:44,467] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 21:20:44,468] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 406 LIMIT 21; args=(406,); alias=default
[2025-09-24 21:20:44,470] INFO django.server "GET /customers/406/ HTTP/1.1" 200 3833
[2025-09-24 21:20:44,522] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 304 0
[2025-09-24 21:20:44,530] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 21:20:44,532] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 21:20:44,542] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 21:20:48,117] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 19:20:48.115855' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 19:20:48.115855', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 21:20:48,117] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 21:20:48,118] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 21:20:48,120] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 21:20:48,125] INFO django.server "GET /customers/ HTTP/1.1" 200 10530
[2025-09-24 21:20:48,173] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 21:20:48,174] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 21:20:48,180] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 304 0
[2025-09-24 21:20:48,199] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 21:20:49,537] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 19:20:49.536832' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 19:20:49.536832', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 21:20:49,537] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 21:20:49,539] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 406 LIMIT 21; args=(406,); alias=default
[2025-09-24 21:20:49,550] INFO django.server "GET /customers/406/edit/ HTTP/1.1" 200 5687
[2025-09-24 21:20:49,594] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 21:20:49,595] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 21:20:49,614] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 21:20:55,831] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 19:20:55.830658' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 19:20:55.830658', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 21:20:55,832] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 21:20:55,833] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 21:20:55,835] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 21:20:55,839] INFO django.server "GET /customers/ HTTP/1.1" 200 10530
[2025-09-24 21:20:55,894] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 21:20:55,895] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 21:20:55,900] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 304 0
[2025-09-24 21:20:55,921] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 21:22:39,357] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 19:22:39.355762' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 19:22:39.355762', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 21:22:39,358] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 21:22:39,359] DEBUG django.db.backends (0.015) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 21:22:39,363] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 21:22:39,367] INFO django.server "GET /customers/ HTTP/1.1" 200 10697
[2025-09-24 21:22:39,399] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 200 8456
[2025-09-24 21:22:39,405] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 21:22:39,406] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 21:22:39,425] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 21:22:39,551] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 21:22:39,613] WARNING django.request Not Found: /favicon.ico
[2025-09-24 21:22:39,614] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2466
[2025-09-24 21:29:07,002] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 19:29:07.000394' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 19:29:07.000394', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 21:29:07,003] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 21:29:07,004] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 21:29:07,009] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 21:29:07,016] INFO django.server "GET /customers/ HTTP/1.1" 200 10871
[2025-09-24 21:29:07,047] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 200 8456
[2025-09-24 21:29:07,052] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 21:29:07,053] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 21:29:07,083] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 21:29:07,157] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 21:29:07,250] WARNING django.request Not Found: /favicon.ico
[2025-09-24 21:29:07,250] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2466
[2025-09-24 21:29:09,981] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 19:29:09.979877' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 19:29:09.979877', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 21:29:09,982] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 21:29:09,983] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 21:29:09,985] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 21:29:09,990] INFO django.server "GET /customers/?q= HTTP/1.1" 200 10871
[2025-09-24 21:29:10,041] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 21:29:10,042] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 21:29:10,078] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 21:29:20,839] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 19:29:20.837952' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 19:29:20.837952', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 21:29:20,841] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 21:29:20,843] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Dallas%' ESCAPE '\'); args=('%Dallas%', '%Dallas%', '%Dallas%', '%Dallas%', '%Dallas%'); alias=default
[2025-09-24 21:29:20,844] INFO customers.views Search performed: 'Dallas' -> 7 results
[2025-09-24 21:29:20,845] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Dallas%' ESCAPE '\'); args=('%Dallas%', '%Dallas%', '%Dallas%', '%Dallas%', '%Dallas%'); alias=default
[2025-09-24 21:29:20,847] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Dallas%' ESCAPE '\') ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 7; args=('%Dallas%', '%Dallas%', '%Dallas%', '%Dallas%', '%Dallas%'); alias=default
[2025-09-24 21:29:20,849] INFO django.server "GET /customers/?q=Dallas HTTP/1.1" 200 6961
[2025-09-24 21:29:20,904] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 21:29:20,905] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 21:29:20,933] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 21:29:28,838] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 19:29:28.837886' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 19:29:28.837886', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 21:29:28,839] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 21:29:28,840] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 21:29:28,841] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 21:29:28,847] INFO django.server "GET /customers/ HTTP/1.1" 200 10871
[2025-09-24 21:29:28,895] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 21:29:28,896] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 21:29:28,919] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 21:29:35,821] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 19:29:35.820087' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 19:29:35.820087', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 21:29:35,822] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 21:29:35,823] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Denton%' ESCAPE '\'); args=('%Denton%', '%Denton%', '%Denton%', '%Denton%', '%Denton%'); alias=default
[2025-09-24 21:29:35,824] INFO customers.views Search performed: 'Denton' -> 6 results
[2025-09-24 21:29:35,825] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Denton%' ESCAPE '\'); args=('%Denton%', '%Denton%', '%Denton%', '%Denton%', '%Denton%'); alias=default
[2025-09-24 21:29:35,827] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Denton%' ESCAPE '\') ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 6; args=('%Denton%', '%Denton%', '%Denton%', '%Denton%', '%Denton%'); alias=default
[2025-09-24 21:29:35,829] INFO django.server "GET /customers/?q=Denton HTTP/1.1" 200 6396
[2025-09-24 21:29:35,879] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 21:29:35,880] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 21:29:35,905] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 21:29:44,699] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 19:29:44.697572' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 19:29:44.697572', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 21:29:44,699] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 21:29:44,701] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Denton%' ESCAPE '\'); args=('%Denton%', '%Denton%', '%Denton%', '%Denton%', '%Denton%'); alias=default
[2025-09-24 21:29:44,701] INFO customers.views Search performed: 'Denton' -> 6 results
[2025-09-24 21:29:44,702] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Denton%' ESCAPE '\'); args=('%Denton%', '%Denton%', '%Denton%', '%Denton%', '%Denton%'); alias=default
[2025-09-24 21:29:44,703] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Denton%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Denton%' ESCAPE '\') ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 6; args=('%Denton%', '%Denton%', '%Denton%', '%Denton%', '%Denton%'); alias=default
[2025-09-24 21:29:44,707] INFO django.server "GET /customers/?q=Denton HTTP/1.1" 200 6396
[2025-09-24 21:29:44,751] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 21:29:44,752] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 21:29:44,753] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 21:29:56,813] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 19:29:56.811094' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 19:29:56.811094', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 21:29:56,814] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 21:29:56,815] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Dallas%' ESCAPE '\'); args=('%Dallas%', '%Dallas%', '%Dallas%', '%Dallas%', '%Dallas%'); alias=default
[2025-09-24 21:29:56,815] INFO customers.views Search performed: 'Dallas' -> 7 results
[2025-09-24 21:29:56,816] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Dallas%' ESCAPE '\'); args=('%Dallas%', '%Dallas%', '%Dallas%', '%Dallas%', '%Dallas%'); alias=default
[2025-09-24 21:29:56,818] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."first_name" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."last_name" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."street_address" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."city" LIKE '%Dallas%' ESCAPE '\' OR "customers_registeredcustomer"."email" LIKE '%Dallas%' ESCAPE '\') ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 7; args=('%Dallas%', '%Dallas%', '%Dallas%', '%Dallas%', '%Dallas%'); alias=default
[2025-09-24 21:29:56,821] INFO django.server "GET /customers/?q=Dallas HTTP/1.1" 200 6961
[2025-09-24 21:29:56,865] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 21:29:56,866] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 21:29:56,894] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 21:30:05,302] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 19:30:05.300057' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 19:30:05.300057', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 21:30:05,303] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 21:30:05,304] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 21:30:05,305] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 21:30:05,309] INFO django.server "GET /customers/ HTTP/1.1" 200 10871
[2025-09-24 21:30:05,359] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 304 0
[2025-09-24 21:30:05,361] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 21:30:05,362] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 21:30:05,380] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 21:30:09,338] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 19:30:09.337320' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 19:30:09.337320', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 21:30:09,339] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 21:30:09,339] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 21:30:09,340] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 21:30:09,344] INFO django.server "GET /customers/ HTTP/1.1" 200 10871
[2025-09-24 21:30:09,386] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 21:30:09,388] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 21:30:09,388] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 21:34:01,973] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 19:34:01.971092' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 19:34:01.971092', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 21:34:01,974] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 21:34:01,975] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 21:34:01,979] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 21:34:01,982] INFO django.server "GET /customers/ HTTP/1.1" 200 11249
[2025-09-24 21:34:02,007] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 21:34:02,008] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 21:34:02,010] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 200 8456
[2025-09-24 21:34:02,042] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 21:34:02,116] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 21:34:02,206] WARNING django.request Not Found: /favicon.ico
[2025-09-24 21:34:02,207] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2466
[2025-09-24 22:18:39,957] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 20:18:39.955718' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 20:18:39.955718', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 22:18:39,958] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 22:18:39,959] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 22:18:39,964] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 22:18:39,967] INFO django.server "GET /customers/ HTTP/1.1" 200 9556
[2025-09-24 22:18:39,991] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 200 8456
[2025-09-24 22:18:39,994] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 22:18:39,995] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 22:18:40,009] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 22:18:40,092] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 22:18:40,177] WARNING django.request Not Found: /favicon.ico
[2025-09-24 22:18:40,178] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2466
[2025-09-24 22:18:54,154] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 20:18:54.150771' AND "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr') LIMIT 21; args=('2025-09-24 20:18:54.150771', 'rzodvczxt58486ne9lxkcxji90uj13yr'); alias=default
[2025-09-24 22:18:54,154] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 22:18:54,154] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE "django_session"."session_key" = 'rzodvczxt58486ne9lxkcxji90uj13yr' LIMIT 21; args=('rzodvczxt58486ne9lxkcxji90uj13yr',); alias=default
[2025-09-24 22:18:54,166] DEBUG django.db.backends (0.015) DELETE FROM "django_session" WHERE "django_session"."session_key" IN ('rzodvczxt58486ne9lxkcxji90uj13yr'); args=('rzodvczxt58486ne9lxkcxji90uj13yr',); alias=default
[2025-09-24 22:18:54,168] INFO django.server "GET /accounts/logout/ HTTP/1.1" 302 0
[2025-09-24 22:18:54,177] INFO django.server "GET /accounts/login/ HTTP/1.1" 200 2897
[2025-09-24 22:18:54,222] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 22:18:54,222] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 22:18:54,247] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 22:19:06,992] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'paxtrodamus' LIMIT 21; args=('paxtrodamus',); alias=default
[2025-09-24 22:19:07,539] DEBUG django.db.backends (0.000) SELECT 1 AS "a" FROM "django_session" WHERE "django_session"."session_key" = 'ndrx35jtdeo42y0x10ci7md8hlwis5zn' LIMIT 1; args=(1, 'ndrx35jtdeo42y0x10ci7md8hlwis5zn'); alias=default
[2025-09-24 22:19:07,540] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-24 22:19:07,548] DEBUG django.db.backends (0.016) INSERT INTO "django_session" ("session_key", "session_data", "expire_date") VALUES ('ndrx35jtdeo42y0x10ci7md8hlwis5zn', 'e30:1v1VxD:7IbyBNCp2qowSzGdXQVqolrpjl-3b1dYNO7XgXNr1Lw', '2025-10-08 20:19:07.540647'); args=('ndrx35jtdeo42y0x10ci7md8hlwis5zn', 'e30:1v1VxD:7IbyBNCp2qowSzGdXQVqolrpjl-3b1dYNO7XgXNr1Lw', '2025-10-08 20:19:07.540647'); alias=default
[2025-09-24 22:19:07,552] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-24 22:19:07,557] DEBUG django.db.backends (0.000) UPDATE "auth_user" SET "last_login" = '2025-09-24 20:19:07.552223' WHERE "auth_user"."id" = 1; args=('2025-09-24 20:19:07.552223', 1); alias=default
[2025-09-24 22:19:07,558] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-24 22:19:07,559] DEBUG django.db.backends (0.000) UPDATE "django_session" SET "session_data" = '.eJxVjDkOwjAUBe_iGllx5JWSnjNYfzMOIEeKkwpxd4iUAto3M--lMmxrzVuXJU-szsqo0--GQA9pO-A7tNusaW7rMqHeFX3Qrq8zy_NyuH8HFXr91pYiE5APngIkkFhGXxyiIAxxDNZSgjgQeyF07EwS40oC9NZwsMGo9wcWtTjN:1v1VxD:4JI5mkXcIihiVl4iXObqiEp1ejnTuyw8EEhe-rOKVvU', "expire_date" = '2025-10-08 20:19:07.558785' WHERE "django_session"."session_key" = 'ndrx35jtdeo42y0x10ci7md8hlwis5zn'; args=('.eJxVjDkOwjAUBe_iGllx5JWSnjNYfzMOIEeKkwpxd4iUAto3M--lMmxrzVuXJU-szsqo0--GQA9pO-A7tNusaW7rMqHeFX3Qrq8zy_NyuH8HFXr91pYiE5APngIkkFhGXxyiIAxxDNZSgjgQeyF07EwS40oC9NZwsMGo9wcWtTjN:1v1VxD:4JI5mkXcIihiVl4iXObqiEp1ejnTuyw8EEhe-rOKVvU', '2025-10-08 20:19:07.558785', 'ndrx35jtdeo42y0x10ci7md8hlwis5zn'); alias=default
[2025-09-24 22:19:07,563] DEBUG django.db.backends (0.016) COMMIT; args=None; alias=default
[2025-09-24 22:19:07,563] INFO django.server "POST /accounts/login/ HTTP/1.1" 302 0
[2025-09-24 22:19:07,566] INFO core.views Home page accessed
[2025-09-24 22:19:07,568] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 20:19:07.567668' AND "django_session"."session_key" = 'ndrx35jtdeo42y0x10ci7md8hlwis5zn') LIMIT 21; args=('2025-09-24 20:19:07.567668', 'ndrx35jtdeo42y0x10ci7md8hlwis5zn'); alias=default
[2025-09-24 22:19:07,569] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 22:19:07,569] INFO django.server "GET / HTTP/1.1" 200 2285
[2025-09-24 22:19:07,618] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 22:19:07,618] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 22:19:07,627] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 22:19:12,399] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 20:19:12.398839' AND "django_session"."session_key" = 'ndrx35jtdeo42y0x10ci7md8hlwis5zn') LIMIT 21; args=('2025-09-24 20:19:12.398839', 'ndrx35jtdeo42y0x10ci7md8hlwis5zn'); alias=default
[2025-09-24 22:19:12,400] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 22:19:12,401] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 22:19:12,402] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 22:19:12,406] INFO django.server "GET /customers/ HTTP/1.1" 200 9556
[2025-09-24 22:19:12,450] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 22:19:12,451] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 22:19:12,473] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 22:20:34,285] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 20:20:34.283610' AND "django_session"."session_key" = 'ndrx35jtdeo42y0x10ci7md8hlwis5zn') LIMIT 21; args=('2025-09-24 20:20:34.283610', 'ndrx35jtdeo42y0x10ci7md8hlwis5zn'); alias=default
[2025-09-24 22:20:34,286] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 22:20:34,287] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 406 LIMIT 21; args=(406,); alias=default
[2025-09-24 22:20:34,290] INFO django.server "GET /customers/406/ HTTP/1.1" 200 5137
[2025-09-24 22:20:34,335] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 22:20:34,336] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 22:20:34,365] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 22:20:49,695] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 20:20:49.694280' AND "django_session"."session_key" = 'ndrx35jtdeo42y0x10ci7md8hlwis5zn') LIMIT 21; args=('2025-09-24 20:20:49.694280', 'ndrx35jtdeo42y0x10ci7md8hlwis5zn'); alias=default
[2025-09-24 22:20:49,696] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 22:20:49,697] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 406 LIMIT 21; args=(406,); alias=default
[2025-09-24 22:20:49,702] INFO django.server "GET /customers/406/edit/ HTTP/1.1" 200 5613
[2025-09-24 22:20:49,749] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 22:20:49,750] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 22:20:49,775] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 22:20:52,747] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 20:20:52.745722' AND "django_session"."session_key" = 'ndrx35jtdeo42y0x10ci7md8hlwis5zn') LIMIT 21; args=('2025-09-24 20:20:52.745722', 'ndrx35jtdeo42y0x10ci7md8hlwis5zn'); alias=default
[2025-09-24 22:20:52,748] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 22:20:52,749] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 22:20:52,750] DEBUG django.db.backends (0.016) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 22:20:52,753] INFO django.server "GET /customers/ HTTP/1.1" 200 9556
[2025-09-24 22:20:52,803] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 22:20:52,804] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 22:20:52,816] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 22:20:54,209] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 20:20:54.208209' AND "django_session"."session_key" = 'ndrx35jtdeo42y0x10ci7md8hlwis5zn') LIMIT 21; args=('2025-09-24 20:20:54.208209', 'ndrx35jtdeo42y0x10ci7md8hlwis5zn'); alias=default
[2025-09-24 22:20:54,210] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 22:20:54,211] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 406 LIMIT 21; args=(406,); alias=default
[2025-09-24 22:20:54,212] INFO django.server "GET /customers/406/ HTTP/1.1" 200 5137
[2025-09-24 22:20:54,260] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 22:20:54,261] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 22:20:54,286] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 22:20:55,803] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 22:21:10,404] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 20:21:10.402375' AND "django_session"."session_key" = 'ndrx35jtdeo42y0x10ci7md8hlwis5zn') LIMIT 21; args=('2025-09-24 20:21:10.402375', 'ndrx35jtdeo42y0x10ci7md8hlwis5zn'); alias=default
[2025-09-24 22:21:10,405] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 22:21:10,406] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 22:21:10,407] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 22:21:10,411] INFO django.server "GET /customers/ HTTP/1.1" 200 9556
[2025-09-24 22:21:10,458] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 22:21:10,458] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 22:21:10,477] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 22:30:25,586] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 20:30:25.585533' AND "django_session"."session_key" = 'ndrx35jtdeo42y0x10ci7md8hlwis5zn') LIMIT 21; args=('2025-09-24 20:30:25.585533', 'ndrx35jtdeo42y0x10ci7md8hlwis5zn'); alias=default
[2025-09-24 22:30:25,587] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 22:30:25,588] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 22:30:25,592] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 22:30:25,596] INFO django.server "GET /customers/ HTTP/1.1" 200 9556
[2025-09-24 22:30:25,618] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 200 10778
[2025-09-24 22:30:25,629] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 22:30:25,629] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 22:30:25,635] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 22:30:25,750] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 22:30:25,869] WARNING django.request Not Found: /favicon.ico
[2025-09-24 22:30:25,871] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2466
[2025-09-24 22:30:29,213] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 20:30:29.211270' AND "django_session"."session_key" = 'ndrx35jtdeo42y0x10ci7md8hlwis5zn') LIMIT 21; args=('2025-09-24 20:30:29.211270', 'ndrx35jtdeo42y0x10ci7md8hlwis5zn'); alias=default
[2025-09-24 22:30:29,214] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 22:30:29,215] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 406 LIMIT 21; args=(406,); alias=default
[2025-09-24 22:30:29,279] ERROR django.request Internal Server Error: /customers/406/
Traceback (most recent call last):
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\contrib\auth\decorators.py", line 23, in _wrapper_view
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\contrib\auth\decorators.py", line 23, in _wrapper_view
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\customers\views.py", line 50, in customer_detail
    return render(request, "customers/customer_detail.html", {"customer": customer})
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\shortcuts.py", line 24, in render
    content = loader.render_to_string(template_name, context, request, using=using)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader.py", line 15, in get_template
    return engine.get_template(template_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\backends\django.py", line 33, in get_template
    return Template(self.engine.get_template(template_name), self)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\engine.py", line 175, in get_template
    template, origin = self.find_template(template_name)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\engine.py", line 157, in find_template
    template = loader.get_template(name, skip=skip)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loaders\cached.py", line 57, in get_template
    template = super().get_template(template_name, skip)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loaders\base.py", line 28, in get_template
    return Template(
           ^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 154, in __init__
    self.nodelist = self.compile_nodelist()
                    ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 200, in compile_nodelist
    return parser.parse()
           ^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 513, in parse
    raise self.error(token, e)
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 511, in parse
    compiled_result = compile_func(self, token)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader_tags.py", line 293, in do_extends
    nodelist = parser.parse()
               ^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 513, in parse
    raise self.error(token, e)
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 511, in parse
    compiled_result = compile_func(self, token)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader_tags.py", line 232, in do_block
    nodelist = parser.parse(("endblock",))
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 518, in parse
    self.unclosed_block_tag(parse_until)
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 581, in unclosed_block_tag
    raise self.error(token, msg)
django.template.exceptions.TemplateSyntaxError: Unclosed tag on line 5: 'block'. Looking for one of: endblock.
[2025-09-24 22:30:29,288] ERROR django.server "GET /customers/406/ HTTP/1.1" 500 186261
[2025-09-24 22:30:29,343] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 22:30:29,344] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 22:31:07,569] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 20:31:07.568118' AND "django_session"."session_key" = 'ndrx35jtdeo42y0x10ci7md8hlwis5zn') LIMIT 21; args=('2025-09-24 20:31:07.568118', 'ndrx35jtdeo42y0x10ci7md8hlwis5zn'); alias=default
[2025-09-24 22:31:07,570] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 22:31:07,571] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 406 LIMIT 21; args=(406,); alias=default
[2025-09-24 22:31:07,615] ERROR django.request Internal Server Error: /customers/406/
Traceback (most recent call last):
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\contrib\auth\decorators.py", line 23, in _wrapper_view
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\contrib\auth\decorators.py", line 23, in _wrapper_view
    return view_func(request, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\customers\views.py", line 50, in customer_detail
    return render(request, "customers/customer_detail.html", {"customer": customer})
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\shortcuts.py", line 24, in render
    content = loader.render_to_string(template_name, context, request, using=using)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader.py", line 15, in get_template
    return engine.get_template(template_name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\backends\django.py", line 33, in get_template
    return Template(self.engine.get_template(template_name), self)
                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\engine.py", line 175, in get_template
    template, origin = self.find_template(template_name)
                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\engine.py", line 157, in find_template
    template = loader.get_template(name, skip=skip)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loaders\cached.py", line 57, in get_template
    template = super().get_template(template_name, skip)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loaders\base.py", line 28, in get_template
    return Template(
           ^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 154, in __init__
    self.nodelist = self.compile_nodelist()
                    ^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 200, in compile_nodelist
    return parser.parse()
           ^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 513, in parse
    raise self.error(token, e)
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 511, in parse
    compiled_result = compile_func(self, token)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader_tags.py", line 293, in do_extends
    nodelist = parser.parse()
               ^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 513, in parse
    raise self.error(token, e)
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 511, in parse
    compiled_result = compile_func(self, token)
                      ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader_tags.py", line 232, in do_block
    nodelist = parser.parse(("endblock",))
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 518, in parse
    self.unclosed_block_tag(parse_until)
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\base.py", line 581, in unclosed_block_tag
    raise self.error(token, msg)
django.template.exceptions.TemplateSyntaxError: Unclosed tag on line 5: 'block'. Looking for one of: endblock.
[2025-09-24 22:31:07,621] ERROR django.server "GET /customers/406/ HTTP/1.1" 500 186344
[2025-09-24 22:31:07,666] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 22:31:07,667] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 22:31:07,845] WARNING django.request Not Found: /favicon.ico
[2025-09-24 22:31:07,845] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2466
[2025-09-24 22:39:32,745] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 20:39:32.743389' AND "django_session"."session_key" = 'ndrx35jtdeo42y0x10ci7md8hlwis5zn') LIMIT 21; args=('2025-09-24 20:39:32.743389', 'ndrx35jtdeo42y0x10ci7md8hlwis5zn'); alias=default
[2025-09-24 22:39:32,746] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 22:39:32,747] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 406 LIMIT 21; args=(406,); alias=default
[2025-09-24 22:39:32,750] INFO django.server "GET /customers/406/ HTTP/1.1" 200 4238
[2025-09-24 22:39:32,795] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 22:39:32,796] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 22:39:32,799] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 200 10778
[2025-09-24 22:39:32,822] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 22:39:32,924] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 22:39:32,987] WARNING django.request Not Found: /favicon.ico
[2025-09-24 22:39:32,988] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2466
[2025-09-24 22:39:41,991] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 20:39:41.987276' AND "django_session"."session_key" = 'ndrx35jtdeo42y0x10ci7md8hlwis5zn') LIMIT 21; args=('2025-09-24 20:39:41.987276', 'ndrx35jtdeo42y0x10ci7md8hlwis5zn'); alias=default
[2025-09-24 22:39:41,992] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 22:39:41,994] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 22:39:41,998] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 22:39:42,003] INFO django.server "GET /customers/ HTTP/1.1" 200 9556
[2025-09-24 22:39:42,056] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 22:39:42,058] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 22:39:42,081] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 22:39:44,817] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 20:39:44.815181' AND "django_session"."session_key" = 'ndrx35jtdeo42y0x10ci7md8hlwis5zn') LIMIT 21; args=('2025-09-24 20:39:44.815181', 'ndrx35jtdeo42y0x10ci7md8hlwis5zn'); alias=default
[2025-09-24 22:39:44,818] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 22:39:44,819] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 406 LIMIT 21; args=(406,); alias=default
[2025-09-24 22:39:44,821] INFO django.server "GET /customers/406/ HTTP/1.1" 200 4238
[2025-09-24 22:39:44,877] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 22:39:44,878] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 22:39:44,903] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 22:39:47,737] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 22:48:37,181] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 20:48:37.180536' AND "django_session"."session_key" = 'ndrx35jtdeo42y0x10ci7md8hlwis5zn') LIMIT 21; args=('2025-09-24 20:48:37.180536', 'ndrx35jtdeo42y0x10ci7md8hlwis5zn'); alias=default
[2025-09-24 22:48:37,182] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 22:48:37,183] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 406 LIMIT 21; args=(406,); alias=default
[2025-09-24 22:48:37,186] INFO django.server "GET /customers/406/ HTTP/1.1" 200 3946
[2025-09-24 22:48:37,213] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 200 10919
[2025-09-24 22:48:37,220] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 22:48:37,220] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 22:48:37,245] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 22:48:37,325] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 22:48:37,347] WARNING django.request Not Found: /favicon.ico
[2025-09-24 22:48:37,349] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2466
[2025-09-24 22:50:13,078] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 20:50:13.077301' AND "django_session"."session_key" = 'ndrx35jtdeo42y0x10ci7md8hlwis5zn') LIMIT 21; args=('2025-09-24 20:50:13.077301', 'ndrx35jtdeo42y0x10ci7md8hlwis5zn'); alias=default
[2025-09-24 22:50:13,079] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 22:50:13,080] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 406 LIMIT 21; args=(406,); alias=default
[2025-09-24 22:50:13,084] INFO django.server "GET /customers/406/ HTTP/1.1" 200 4251
[2025-09-24 22:50:13,100] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 200 10919
[2025-09-24 22:50:13,113] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 22:50:13,114] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 22:50:13,164] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 22:50:13,213] WARNING django.request Not Found: /favicon.ico
[2025-09-24 22:50:13,214] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2466
[2025-09-24 22:58:03,955] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 20:58:03.954063' AND "django_session"."session_key" = 'ndrx35jtdeo42y0x10ci7md8hlwis5zn') LIMIT 21; args=('2025-09-24 20:58:03.954063', 'ndrx35jtdeo42y0x10ci7md8hlwis5zn'); alias=default
[2025-09-24 22:58:03,957] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 22:58:03,957] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 406 LIMIT 21; args=(406,); alias=default
[2025-09-24 22:58:03,961] INFO django.server "GET /customers/406/ HTTP/1.1" 200 4265
[2025-09-24 22:58:03,988] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 200 10919
[2025-09-24 22:58:03,995] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 22:58:03,996] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 22:58:04,022] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 22:58:04,089] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 22:58:04,133] WARNING django.request Not Found: /favicon.ico
[2025-09-24 22:58:04,133] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2466
[2025-09-24 22:58:10,313] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 20:58:10.312221' AND "django_session"."session_key" = 'ndrx35jtdeo42y0x10ci7md8hlwis5zn') LIMIT 21; args=('2025-09-24 20:58:10.312221', 'ndrx35jtdeo42y0x10ci7md8hlwis5zn'); alias=default
[2025-09-24 22:58:10,314] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 22:58:10,315] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 22:58:10,318] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 22:58:10,322] INFO django.server "GET /customers/ HTTP/1.1" 200 9556
[2025-09-24 22:58:10,362] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 22:58:10,363] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 22:58:10,385] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 22:58:21,297] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 20:58:21.295709' AND "django_session"."session_key" = 'ndrx35jtdeo42y0x10ci7md8hlwis5zn') LIMIT 21; args=('2025-09-24 20:58:21.295709', 'ndrx35jtdeo42y0x10ci7md8hlwis5zn'); alias=default
[2025-09-24 22:58:21,298] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 22:58:21,299] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 406 LIMIT 21; args=(406,); alias=default
[2025-09-24 22:58:21,300] INFO django.server "GET /customers/406/ HTTP/1.1" 200 4265
[2025-09-24 22:58:21,349] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 22:58:21,349] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 22:58:21,375] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 22:58:25,680] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 20:58:25.678918' AND "django_session"."session_key" = 'ndrx35jtdeo42y0x10ci7md8hlwis5zn') LIMIT 21; args=('2025-09-24 20:58:25.678918', 'ndrx35jtdeo42y0x10ci7md8hlwis5zn'); alias=default
[2025-09-24 22:58:25,681] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 22:58:25,681] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 406 LIMIT 21; args=(406,); alias=default
[2025-09-24 22:58:25,690] INFO django.server "GET /customers/406/edit/ HTTP/1.1" 200 5613
[2025-09-24 22:58:25,745] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 22:58:25,746] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 22:58:25,764] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 22:58:33,808] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 20:58:33.806895' AND "django_session"."session_key" = 'ndrx35jtdeo42y0x10ci7md8hlwis5zn') LIMIT 21; args=('2025-09-24 20:58:33.806895', 'ndrx35jtdeo42y0x10ci7md8hlwis5zn'); alias=default
[2025-09-24 22:58:33,809] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 22:58:33,810] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 22:58:33,811] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 22:58:33,815] INFO django.server "GET /customers/ HTTP/1.1" 200 9556
[2025-09-24 22:58:33,867] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 22:58:33,868] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 22:58:33,891] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 22:58:39,543] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 20:58:39.541457' AND "django_session"."session_key" = 'ndrx35jtdeo42y0x10ci7md8hlwis5zn') LIMIT 21; args=('2025-09-24 20:58:39.541457', 'ndrx35jtdeo42y0x10ci7md8hlwis5zn'); alias=default
[2025-09-24 22:58:39,544] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 22:58:39,545] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 406 LIMIT 21; args=(406,); alias=default
[2025-09-24 22:58:39,546] INFO django.server "GET /customers/406/ HTTP/1.1" 200 4265
[2025-09-24 22:58:39,597] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 22:58:39,598] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 22:58:39,620] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 22:58:40,809] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 22:58:51,207] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 20:58:51.205398' AND "django_session"."session_key" = 'ndrx35jtdeo42y0x10ci7md8hlwis5zn') LIMIT 21; args=('2025-09-24 20:58:51.205398', 'ndrx35jtdeo42y0x10ci7md8hlwis5zn'); alias=default
[2025-09-24 22:58:51,208] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 22:58:51,209] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 406 LIMIT 21; args=(406,); alias=default
[2025-09-24 22:58:51,214] INFO django.server "GET /customers/406/edit/ HTTP/1.1" 200 5613
[2025-09-24 22:58:51,258] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 22:58:51,259] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 22:58:51,288] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 22:59:00,372] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 20:59:00.369834' AND "django_session"."session_key" = 'ndrx35jtdeo42y0x10ci7md8hlwis5zn') LIMIT 21; args=('2025-09-24 20:59:00.369834', 'ndrx35jtdeo42y0x10ci7md8hlwis5zn'); alias=default
[2025-09-24 22:59:00,373] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 22:59:00,373] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 406 LIMIT 21; args=(406,); alias=default
[2025-09-24 22:59:00,376] DEBUG django.db.backends (0.000) SELECT 1 AS "a" FROM "customers_registeredcustomer" WHERE ("customers_registeredcustomer"."email" = 'daniel.adams379@example.com' AND NOT ("customers_registeredcustomer"."id" = 406)) LIMIT 1; args=(1, 'daniel.adams379@example.com', 406); alias=default
[2025-09-24 22:59:00,383] DEBUG django.db.backends (0.000) UPDATE "customers_registeredcustomer" SET "unique_customer_id" = 'f98f99e4-2cac-41aa-8ffe-d0d8d24220bd', "first_name" = 'Daniel', "last_name" = 'Adams', "street_address" = '7567 Abigail Track', "city" = 'Arlington', "state" = 'TX', "zipcode" = '77932', "phone" = '958-243-9978', "email" = 'daniel.adams379@example.com', "created_at" = '2025-09-21 20:46:09.506039' WHERE "customers_registeredcustomer"."id" = 406; args=('f98f99e4-2cac-41aa-8ffe-d0d8d24220bd', 'Daniel', 'Adams', '7567 Abigail Track', 'Arlington', 'TX', '77932', '958-243-9978', 'daniel.adams379@example.com', '2025-09-21 20:46:09.506039', 406); alias=default
[2025-09-24 22:59:00,384] INFO customers.views Customer 406 updated by paxtrodamus
[2025-09-24 22:59:00,384] INFO django.server "POST /customers/406/edit/ HTTP/1.1" 302 0
[2025-09-24 22:59:00,389] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 20:59:00.388822' AND "django_session"."session_key" = 'ndrx35jtdeo42y0x10ci7md8hlwis5zn') LIMIT 21; args=('2025-09-24 20:59:00.388822', 'ndrx35jtdeo42y0x10ci7md8hlwis5zn'); alias=default
[2025-09-24 22:59:00,390] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 22:59:00,391] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 406 LIMIT 21; args=(406,); alias=default
[2025-09-24 22:59:00,393] INFO django.server "GET /customers/406/ HTTP/1.1" 200 4406
[2025-09-24 22:59:00,445] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 22:59:00,445] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 22:59:00,451] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 304 0
[2025-09-24 22:59:00,471] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 23:10:00,751] DEBUG django.db.backends (0.016) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 21:10:00.749300' AND "django_session"."session_key" = 'ndrx35jtdeo42y0x10ci7md8hlwis5zn') LIMIT 21; args=('2025-09-24 21:10:00.749300', 'ndrx35jtdeo42y0x10ci7md8hlwis5zn'); alias=default
[2025-09-24 23:10:00,751] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 23:10:00,752] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 406 LIMIT 21; args=(406,); alias=default
[2025-09-24 23:10:00,755] INFO django.server "GET /customers/406/ HTTP/1.1" 200 4330
[2025-09-24 23:10:00,781] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 200 10928
[2025-09-24 23:10:00,788] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 23:10:00,789] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 23:10:00,811] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 23:10:00,913] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 23:10:00,985] WARNING django.request Not Found: /favicon.ico
[2025-09-24 23:10:00,986] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2466
[2025-09-24 23:10:07,643] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 21:10:07.641682' AND "django_session"."session_key" = 'ndrx35jtdeo42y0x10ci7md8hlwis5zn') LIMIT 21; args=('2025-09-24 21:10:07.641682', 'ndrx35jtdeo42y0x10ci7md8hlwis5zn'); alias=default
[2025-09-24 23:10:07,644] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 23:10:07,644] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 406 LIMIT 21; args=(406,); alias=default
[2025-09-24 23:10:07,652] INFO django.server "GET /customers/406/edit/ HTTP/1.1" 200 5627
[2025-09-24 23:10:07,703] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 23:10:07,711] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 304 0
[2025-09-24 23:10:07,744] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 23:10:07,751] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 23:10:11,544] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 21:10:11.542498' AND "django_session"."session_key" = 'ndrx35jtdeo42y0x10ci7md8hlwis5zn') LIMIT 21; args=('2025-09-24 21:10:11.542498', 'ndrx35jtdeo42y0x10ci7md8hlwis5zn'); alias=default
[2025-09-24 23:10:11,545] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 23:10:11,546] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 23:10:11,550] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 23:10:11,553] INFO django.server "GET /customers/ HTTP/1.1" 200 9556
[2025-09-24 23:10:11,601] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 304 0
[2025-09-24 23:10:11,607] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 23:10:11,608] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 23:10:11,619] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 23:10:13,742] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 21:10:13.741344' AND "django_session"."session_key" = 'ndrx35jtdeo42y0x10ci7md8hlwis5zn') LIMIT 21; args=('2025-09-24 21:10:13.741344', 'ndrx35jtdeo42y0x10ci7md8hlwis5zn'); alias=default
[2025-09-24 23:10:13,743] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 23:10:13,744] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 406 LIMIT 21; args=(406,); alias=default
[2025-09-24 23:10:13,745] INFO django.server "GET /customers/406/ HTTP/1.1" 200 4330
[2025-09-24 23:10:13,795] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 23:10:13,795] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 23:10:13,803] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 304 0
[2025-09-24 23:10:13,823] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 23:10:18,986] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 23:10:30,739] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-24 21:10:30.738736' AND "django_session"."session_key" = 'ndrx35jtdeo42y0x10ci7md8hlwis5zn') LIMIT 21; args=('2025-09-24 21:10:30.738736', 'ndrx35jtdeo42y0x10ci7md8hlwis5zn'); alias=default
[2025-09-24 23:10:30,740] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-24 23:10:30,741] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-24 23:10:30,742] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-24 23:10:30,746] INFO django.server "GET /customers/ HTTP/1.1" 200 9556
[2025-09-24 23:10:30,788] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-24 23:10:30,789] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2577
[2025-09-24 23:10:30,793] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 304 0
[2025-09-24 23:10:30,808] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 23:12:55,847] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-24 23:12:55,880] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-25 16:11:50,607] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-25 16:11:50,708] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-25 16:11:50,711] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-25 16:11:53,758] INFO core.views Home page accessed
[2025-09-25 16:11:53,782] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-25 14:11:53.779790' AND "django_session"."session_key" = 'ndrx35jtdeo42y0x10ci7md8hlwis5zn') LIMIT 21; args=('2025-09-25 14:11:53.779790', 'ndrx35jtdeo42y0x10ci7md8hlwis5zn'); alias=default
[2025-09-25 16:11:53,786] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-25 16:11:53,799] INFO django.server "GET / HTTP/1.1" 200 2285
[2025-09-25 16:11:53,839] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 304 0
[2025-09-25 16:11:54,066] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-25 16:11:54,083] WARNING django.request Not Found: /favicon.ico
[2025-09-25 16:11:54,084] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2466
[2025-09-25 16:13:59,706] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-25 14:13:59.705990' AND "django_session"."session_key" = 'ndrx35jtdeo42y0x10ci7md8hlwis5zn') LIMIT 21; args=('2025-09-25 14:13:59.705990', 'ndrx35jtdeo42y0x10ci7md8hlwis5zn'); alias=default
[2025-09-25 16:13:59,707] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-25 16:13:59,708] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE "django_session"."session_key" = 'ndrx35jtdeo42y0x10ci7md8hlwis5zn' LIMIT 21; args=('ndrx35jtdeo42y0x10ci7md8hlwis5zn',); alias=default
[2025-09-25 16:13:59,720] DEBUG django.db.backends (0.016) DELETE FROM "django_session" WHERE "django_session"."session_key" IN ('ndrx35jtdeo42y0x10ci7md8hlwis5zn'); args=('ndrx35jtdeo42y0x10ci7md8hlwis5zn',); alias=default
[2025-09-25 16:13:59,721] INFO django.server "GET /accounts/logout/ HTTP/1.1" 302 0
[2025-09-25 16:13:59,736] INFO django.server "GET /accounts/login/ HTTP/1.1" 200 2897
[2025-09-25 16:13:59,771] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-25 20:29:10,472] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-25 20:29:10,538] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-25 20:29:10,541] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-25 20:29:17,008] INFO core.views Home page accessed
[2025-09-25 20:29:17,036] INFO django.server "GET / HTTP/1.1" 200 1928
[2025-09-25 20:29:17,085] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 304 0
[2025-09-25 20:29:17,317] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-25 20:29:24,271] INFO django.server "GET /accounts/login/ HTTP/1.1" 200 2897
[2025-09-25 20:29:24,308] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-25 20:29:26,278] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'paxtrodamus' LIMIT 21; args=('paxtrodamus',); alias=default
[2025-09-25 20:29:26,837] DEBUG django.db.backends (0.000) SELECT 1 AS "a" FROM "django_session" WHERE "django_session"."session_key" = 'axtvxubc8mmbbaghsthxdavzan27hd0g' LIMIT 1; args=(1, 'axtvxubc8mmbbaghsthxdavzan27hd0g'); alias=default
[2025-09-25 20:29:26,837] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-25 20:29:26,838] DEBUG django.db.backends (0.000) INSERT INTO "django_session" ("session_key", "session_data", "expire_date") VALUES ('axtvxubc8mmbbaghsthxdavzan27hd0g', 'e30:1v1qic:M2C2u_EZNRzuvfvD3HmlgPPmbi9zLSvg35vD_7zca8E', '2025-10-09 18:29:26.837202'); args=('axtvxubc8mmbbaghsthxdavzan27hd0g', 'e30:1v1qic:M2C2u_EZNRzuvfvD3HmlgPPmbi9zLSvg35vD_7zca8E', '2025-10-09 18:29:26.837202'); alias=default
[2025-09-25 20:29:26,843] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-25 20:29:26,848] DEBUG django.db.backends (0.015) UPDATE "auth_user" SET "last_login" = '2025-09-25 18:29:26.843840' WHERE "auth_user"."id" = 1; args=('2025-09-25 18:29:26.843840', 1); alias=default
[2025-09-25 20:29:26,849] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-25 20:29:26,850] DEBUG django.db.backends (0.000) UPDATE "django_session" SET "session_data" = '.eJxVjDkOwjAUBe_iGllx5JWSnjNYfzMOIEeKkwpxd4iUAto3M--lMmxrzVuXJU-szsqo0--GQA9pO-A7tNusaW7rMqHeFX3Qrq8zy_NyuH8HFXr91pYiE5APngIkkFhGXxyiIAxxDNZSgjgQeyF07EwS40oC9NZwsMGo9wcWtTjN:1v1qic:XVoC3oAZC7XOGeDk7mhVJtS5HXAat8XxEeO5iaKbcZg', "expire_date" = '2025-10-09 18:29:26.848909' WHERE "django_session"."session_key" = 'axtvxubc8mmbbaghsthxdavzan27hd0g'; args=('.eJxVjDkOwjAUBe_iGllx5JWSnjNYfzMOIEeKkwpxd4iUAto3M--lMmxrzVuXJU-szsqo0--GQA9pO-A7tNusaW7rMqHeFX3Qrq8zy_NyuH8HFXr91pYiE5APngIkkFhGXxyiIAxxDNZSgjgQeyF07EwS40oC9NZwsMGo9wcWtTjN:1v1qic:XVoC3oAZC7XOGeDk7mhVJtS5HXAat8XxEeO5iaKbcZg', '2025-10-09 18:29:26.848909', 'axtvxubc8mmbbaghsthxdavzan27hd0g'); alias=default
[2025-09-25 20:29:26,854] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-25 20:29:26,854] INFO django.server "POST /accounts/login/ HTTP/1.1" 302 0
[2025-09-25 20:29:26,857] INFO core.views Home page accessed
[2025-09-25 20:29:26,858] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-25 18:29:26.857516' AND "django_session"."session_key" = 'axtvxubc8mmbbaghsthxdavzan27hd0g') LIMIT 21; args=('2025-09-25 18:29:26.857516', 'axtvxubc8mmbbaghsthxdavzan27hd0g'); alias=default
[2025-09-25 20:29:26,859] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-25 20:29:26,860] INFO django.server "GET / HTTP/1.1" 200 2285
[2025-09-25 20:29:26,890] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-25 20:29:29,827] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-25 18:29:29.826097' AND "django_session"."session_key" = 'axtvxubc8mmbbaghsthxdavzan27hd0g') LIMIT 21; args=('2025-09-25 18:29:29.826097', 'axtvxubc8mmbbaghsthxdavzan27hd0g'); alias=default
[2025-09-25 20:29:29,829] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-25 20:29:29,836] DEBUG django.db.backends (0.016) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-25 20:29:29,841] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-25 20:29:29,847] INFO django.server "GET /customers/ HTTP/1.1" 200 9556
[2025-09-25 20:29:29,870] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-25 20:29:31,618] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-25 18:29:31.617930' AND "django_session"."session_key" = 'axtvxubc8mmbbaghsthxdavzan27hd0g') LIMIT 21; args=('2025-09-25 18:29:31.617930', 'axtvxubc8mmbbaghsthxdavzan27hd0g'); alias=default
[2025-09-25 20:29:31,619] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-25 20:29:31,620] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" WHERE "customers_registeredcustomer"."id" = 406 LIMIT 21; args=(406,); alias=default
[2025-09-25 20:29:31,623] INFO django.server "GET /customers/406/ HTTP/1.1" 200 4330
[2025-09-25 20:29:31,650] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-25 20:30:47,345] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-25 18:30:47.344655' AND "django_session"."session_key" = 'axtvxubc8mmbbaghsthxdavzan27hd0g') LIMIT 21; args=('2025-09-25 18:30:47.344655', 'axtvxubc8mmbbaghsthxdavzan27hd0g'); alias=default
[2025-09-25 20:30:47,346] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-25 20:30:47,347] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE "django_session"."session_key" = 'axtvxubc8mmbbaghsthxdavzan27hd0g' LIMIT 21; args=('axtvxubc8mmbbaghsthxdavzan27hd0g',); alias=default
[2025-09-25 20:30:47,368] DEBUG django.db.backends (0.016) DELETE FROM "django_session" WHERE "django_session"."session_key" IN ('axtvxubc8mmbbaghsthxdavzan27hd0g'); args=('axtvxubc8mmbbaghsthxdavzan27hd0g',); alias=default
[2025-09-25 20:30:47,368] INFO django.server "GET /accounts/logout/ HTTP/1.1" 302 0
[2025-09-25 20:30:47,375] INFO django.server "GET /accounts/login/ HTTP/1.1" 200 2897
[2025-09-25 20:30:47,409] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-25 20:31:03,337] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'paxtrodamus' LIMIT 21; args=('paxtrodamus',); alias=default
[2025-09-25 20:31:03,914] DEBUG django.db.backends (0.000) SELECT 1 AS "a" FROM "django_session" WHERE "django_session"."session_key" = '7gpqvpdnalsurogbx3y5k0dnheqapxhu' LIMIT 1; args=(1, '7gpqvpdnalsurogbx3y5k0dnheqapxhu'); alias=default
[2025-09-25 20:31:03,914] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-25 20:31:03,921] DEBUG django.db.backends (0.000) INSERT INTO "django_session" ("session_key", "session_data", "expire_date") VALUES ('7gpqvpdnalsurogbx3y5k0dnheqapxhu', 'e30:1v1qkB:gwa2DoIL2mu8kGc7dX7pM-JBduLvXp_rUFL4PNnqpBk', '2025-10-09 18:31:03.914039'); args=('7gpqvpdnalsurogbx3y5k0dnheqapxhu', 'e30:1v1qkB:gwa2DoIL2mu8kGc7dX7pM-JBduLvXp_rUFL4PNnqpBk', '2025-10-09 18:31:03.914039'); alias=default
[2025-09-25 20:31:03,926] DEBUG django.db.backends (0.015) COMMIT; args=None; alias=default
[2025-09-25 20:31:03,931] DEBUG django.db.backends (0.000) UPDATE "auth_user" SET "last_login" = '2025-09-25 18:31:03.926098' WHERE "auth_user"."id" = 1; args=('2025-09-25 18:31:03.926098', 1); alias=default
[2025-09-25 20:31:03,932] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-25 20:31:03,933] DEBUG django.db.backends (0.000) UPDATE "django_session" SET "session_data" = '.eJxVjDkOwjAUBe_iGllx5JWSnjNYfzMOIEeKkwpxd4iUAto3M--lMmxrzVuXJU-szsqo0--GQA9pO-A7tNusaW7rMqHeFX3Qrq8zy_NyuH8HFXr91pYiE5APngIkkFhGXxyiIAxxDNZSgjgQeyF07EwS40oC9NZwsMGo9wcWtTjN:1v1qkB:qjzYCLpsR8eHBMzuCfqOWjJ9HAAry8OsRu5WbAzvm40', "expire_date" = '2025-10-09 18:31:03.932179' WHERE "django_session"."session_key" = '7gpqvpdnalsurogbx3y5k0dnheqapxhu'; args=('.eJxVjDkOwjAUBe_iGllx5JWSnjNYfzMOIEeKkwpxd4iUAto3M--lMmxrzVuXJU-szsqo0--GQA9pO-A7tNusaW7rMqHeFX3Qrq8zy_NyuH8HFXr91pYiE5APngIkkFhGXxyiIAxxDNZSgjgQeyF07EwS40oC9NZwsMGo9wcWtTjN:1v1qkB:qjzYCLpsR8eHBMzuCfqOWjJ9HAAry8OsRu5WbAzvm40', '2025-10-09 18:31:03.932179', '7gpqvpdnalsurogbx3y5k0dnheqapxhu'); alias=default
[2025-09-25 20:31:03,937] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-25 20:31:03,937] INFO django.server "POST /accounts/login/ HTTP/1.1" 302 0
[2025-09-25 20:31:03,940] INFO core.views Home page accessed
[2025-09-25 20:31:03,942] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-25 18:31:03.941281' AND "django_session"."session_key" = '7gpqvpdnalsurogbx3y5k0dnheqapxhu') LIMIT 21; args=('2025-09-25 18:31:03.941281', '7gpqvpdnalsurogbx3y5k0dnheqapxhu'); alias=default
[2025-09-25 20:31:03,943] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-25 20:31:03,944] INFO django.server "GET / HTTP/1.1" 200 2285
[2025-09-25 20:31:03,975] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-25 20:31:07,917] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-25 18:31:07.916044' AND "django_session"."session_key" = '7gpqvpdnalsurogbx3y5k0dnheqapxhu') LIMIT 21; args=('2025-09-25 18:31:07.916044', '7gpqvpdnalsurogbx3y5k0dnheqapxhu'); alias=default
[2025-09-25 20:31:07,918] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-25 20:31:07,919] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-25 20:31:07,920] DEBUG django.db.backends (0.000) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 12; args=(); alias=default
[2025-09-25 20:31:07,922] INFO django.server "GET /customers/ HTTP/1.1" 200 9556
[2025-09-25 20:31:07,950] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-25 20:31:14,857] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-25 18:31:14.856194' AND "django_session"."session_key" = '7gpqvpdnalsurogbx3y5k0dnheqapxhu') LIMIT 21; args=('2025-09-25 18:31:14.856194', '7gpqvpdnalsurogbx3y5k0dnheqapxhu'); alias=default
[2025-09-25 20:31:14,858] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-25 20:31:14,858] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE "django_session"."session_key" = '7gpqvpdnalsurogbx3y5k0dnheqapxhu' LIMIT 21; args=('7gpqvpdnalsurogbx3y5k0dnheqapxhu',); alias=default
[2025-09-25 20:31:14,870] DEBUG django.db.backends (0.016) DELETE FROM "django_session" WHERE "django_session"."session_key" IN ('7gpqvpdnalsurogbx3y5k0dnheqapxhu'); args=('7gpqvpdnalsurogbx3y5k0dnheqapxhu',); alias=default
[2025-09-25 20:31:14,871] INFO django.server "GET /accounts/logout/ HTTP/1.1" 302 0
[2025-09-25 20:31:14,876] INFO django.server "GET /accounts/login/ HTTP/1.1" 200 2897
[2025-09-25 20:31:14,910] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-25 20:31:18,459] INFO core.views Home page accessed
[2025-09-25 20:31:18,460] INFO django.server "GET / HTTP/1.1" 200 1928
[2025-09-25 20:31:18,490] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-25 20:31:32,308] INFO django.server "GET /accounts/login/ HTTP/1.1" 200 2897
[2025-09-25 20:31:32,339] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-25 20:31:34,503] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."username" = 'paxtrodamus' LIMIT 21; args=('paxtrodamus',); alias=default
[2025-09-25 20:31:35,073] DEBUG django.db.backends (0.000) SELECT 1 AS "a" FROM "django_session" WHERE "django_session"."session_key" = 'p1smpq0b7bj0xetnmhcgx0gsq8jz0871' LIMIT 1; args=(1, 'p1smpq0b7bj0xetnmhcgx0gsq8jz0871'); alias=default
[2025-09-25 20:31:35,073] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-25 20:31:35,081] DEBUG django.db.backends (0.016) INSERT INTO "django_session" ("session_key", "session_data", "expire_date") VALUES ('p1smpq0b7bj0xetnmhcgx0gsq8jz0871', 'e30:1v1qkh:m1OFlL1t1OECWC9oSHHHwBTYnTD7aDCyCSCUt-PAmew', '2025-10-09 18:31:35.073826'); args=('p1smpq0b7bj0xetnmhcgx0gsq8jz0871', 'e30:1v1qkh:m1OFlL1t1OECWC9oSHHHwBTYnTD7aDCyCSCUt-PAmew', '2025-10-09 18:31:35.073826'); alias=default
[2025-09-25 20:31:35,086] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-25 20:31:35,091] DEBUG django.db.backends (0.000) UPDATE "auth_user" SET "last_login" = '2025-09-25 18:31:35.086814' WHERE "auth_user"."id" = 1; args=('2025-09-25 18:31:35.086814', 1); alias=default
[2025-09-25 20:31:35,092] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-25 20:31:35,093] DEBUG django.db.backends (0.000) UPDATE "django_session" SET "session_data" = '.eJxVjDkOwjAUBe_iGllx5JWSnjNYfzMOIEeKkwpxd4iUAto3M--lMmxrzVuXJU-szsqo0--GQA9pO-A7tNusaW7rMqHeFX3Qrq8zy_NyuH8HFXr91pYiE5APngIkkFhGXxyiIAxxDNZSgjgQeyF07EwS40oC9NZwsMGo9wcWtTjN:1v1qkh:lAMqYaJVYWCXlmn2y_j2_ERN8KMYRf7Zf_T_RyFktDg', "expire_date" = '2025-10-09 18:31:35.091705' WHERE "django_session"."session_key" = 'p1smpq0b7bj0xetnmhcgx0gsq8jz0871'; args=('.eJxVjDkOwjAUBe_iGllx5JWSnjNYfzMOIEeKkwpxd4iUAto3M--lMmxrzVuXJU-szsqo0--GQA9pO-A7tNusaW7rMqHeFX3Qrq8zy_NyuH8HFXr91pYiE5APngIkkFhGXxyiIAxxDNZSgjgQeyF07EwS40oC9NZwsMGo9wcWtTjN:1v1qkh:lAMqYaJVYWCXlmn2y_j2_ERN8KMYRf7Zf_T_RyFktDg', '2025-10-09 18:31:35.091705', 'p1smpq0b7bj0xetnmhcgx0gsq8jz0871'); alias=default
[2025-09-25 20:31:35,097] DEBUG django.db.backends (0.015) COMMIT; args=None; alias=default
[2025-09-25 20:31:35,097] INFO django.server "POST /accounts/login/ HTTP/1.1" 302 0
[2025-09-25 20:31:35,100] INFO core.views Home page accessed
[2025-09-25 20:31:35,102] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-25 18:31:35.101646' AND "django_session"."session_key" = 'p1smpq0b7bj0xetnmhcgx0gsq8jz0871') LIMIT 21; args=('2025-09-25 18:31:35.101646', 'p1smpq0b7bj0xetnmhcgx0gsq8jz0871'); alias=default
[2025-09-25 20:31:35,103] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-25 20:31:35,103] INFO django.server "GET / HTTP/1.1" 200 2285
[2025-09-25 20:31:35,136] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-27 22:07:09,340] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-27 22:07:09,342] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-27 22:07:10,002] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-27 22:07:10,007] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-27 22:07:10,008] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-27 22:07:10,008] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-27 22:07:10,019] DEBUG django.db.backends (0.016) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-27 22:07:10,019] DEBUG django.db.backends (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
[2025-09-27 22:07:10,019] DEBUG django.db.backends (0.000) PRAGMA foreign_keys; args=None; alias=default
[2025-09-27 22:07:10,020] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-27 22:07:10,021] DEBUG django.db.backends.schema CREATE TABLE "scheduling_booking" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "customer_name" varchar(200) NOT NULL, "customer_address" varchar(255) NOT NULL); (params None)
[2025-09-27 22:07:10,030] DEBUG django.db.backends (0.000) CREATE TABLE "scheduling_booking" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "customer_name" varchar(200) NOT NULL, "customer_address" varchar(255) NOT NULL); args=None; alias=default
[2025-09-27 22:07:10,031] DEBUG django.db.backends.schema CREATE TABLE "scheduling_employee" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "home_address" varchar(255) NOT NULL); (params None)
[2025-09-27 22:07:10,032] DEBUG django.db.backends (0.000) CREATE TABLE "scheduling_employee" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "home_address" varchar(255) NOT NULL); args=None; alias=default
[2025-09-27 22:07:10,033] DEBUG django.db.backends.schema CREATE TABLE "scheduling_servicecategory" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL UNIQUE); (params None)
[2025-09-27 22:07:10,033] DEBUG django.db.backends (0.000) CREATE TABLE "scheduling_servicecategory" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL UNIQUE); args=None; alias=default
[2025-09-27 22:07:10,035] DEBUG django.db.backends.schema CREATE TABLE "scheduling_timeslot" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "start" datetime NOT NULL, "end" datetime NOT NULL); (params None)
[2025-09-27 22:07:10,035] DEBUG django.db.backends (0.000) CREATE TABLE "scheduling_timeslot" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "start" datetime NOT NULL, "end" datetime NOT NULL); args=None; alias=default
[2025-09-27 22:07:10,039] DEBUG django.db.backends.schema CREATE TABLE "scheduling_jobassignment" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "jobsite_address" varchar(255) NOT NULL, "booking_id" bigint NOT NULL REFERENCES "scheduling_booking" ("id") DEFERRABLE INITIALLY DEFERRED, "employee_id" bigint NOT NULL REFERENCES "scheduling_employee" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
[2025-09-27 22:07:10,040] DEBUG django.db.backends (0.000) CREATE TABLE "scheduling_jobassignment" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "jobsite_address" varchar(255) NOT NULL, "booking_id" bigint NOT NULL REFERENCES "scheduling_booking" ("id") DEFERRABLE INITIALLY DEFERRED, "employee_id" bigint NOT NULL REFERENCES "scheduling_employee" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
[2025-09-27 22:07:10,047] DEBUG django.db.backends.schema CREATE TABLE "new__scheduling_employee" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "home_address" varchar(255) NOT NULL, "service_category_id" bigint NOT NULL REFERENCES "scheduling_servicecategory" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
[2025-09-27 22:07:10,047] DEBUG django.db.backends (0.000) CREATE TABLE "new__scheduling_employee" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "home_address" varchar(255) NOT NULL, "service_category_id" bigint NOT NULL REFERENCES "scheduling_servicecategory" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
[2025-09-27 22:07:10,047] DEBUG django.db.backends.schema INSERT INTO "new__scheduling_employee" ("id", "name", "home_address", "service_category_id") SELECT "id", "name", "home_address", NULL FROM "scheduling_employee"; (params ())
[2025-09-27 22:07:10,048] DEBUG django.db.backends (0.000) INSERT INTO "new__scheduling_employee" ("id", "name", "home_address", "service_category_id") SELECT "id", "name", "home_address", NULL FROM "scheduling_employee"; args=(); alias=default
[2025-09-27 22:07:10,048] DEBUG django.db.backends.schema DROP TABLE "scheduling_employee"; (params ())
[2025-09-27 22:07:10,048] DEBUG django.db.backends (0.000) DROP TABLE "scheduling_employee"; args=(); alias=default
[2025-09-27 22:07:10,048] DEBUG django.db.backends.schema ALTER TABLE "new__scheduling_employee" RENAME TO "scheduling_employee"; (params ())
[2025-09-27 22:07:10,050] DEBUG django.db.backends (0.015) ALTER TABLE "new__scheduling_employee" RENAME TO "scheduling_employee"; args=(); alias=default
[2025-09-27 22:07:10,051] DEBUG django.db.backends.schema CREATE UNIQUE INDEX "scheduling_jobassignment_employee_id_booking_id_c8555a05_uniq" ON "scheduling_jobassignment" ("employee_id", "booking_id"); (params ())
[2025-09-27 22:07:10,052] DEBUG django.db.backends (0.000) CREATE UNIQUE INDEX "scheduling_jobassignment_employee_id_booking_id_c8555a05_uniq" ON "scheduling_jobassignment" ("employee_id", "booking_id"); args=(); alias=default
[2025-09-27 22:07:10,052] DEBUG django.db.backends.schema CREATE INDEX "scheduling_jobassignment_booking_id_728c9ae6" ON "scheduling_jobassignment" ("booking_id"); (params ())
[2025-09-27 22:07:10,052] DEBUG django.db.backends (0.000) CREATE INDEX "scheduling_jobassignment_booking_id_728c9ae6" ON "scheduling_jobassignment" ("booking_id"); args=(); alias=default
[2025-09-27 22:07:10,052] DEBUG django.db.backends.schema CREATE INDEX "scheduling_jobassignment_employee_id_3167ac53" ON "scheduling_jobassignment" ("employee_id"); (params ())
[2025-09-27 22:07:10,052] DEBUG django.db.backends (0.000) CREATE INDEX "scheduling_jobassignment_employee_id_3167ac53" ON "scheduling_jobassignment" ("employee_id"); args=(); alias=default
[2025-09-27 22:07:10,052] DEBUG django.db.backends.schema CREATE INDEX "scheduling_employee_service_category_id_5a713c42" ON "scheduling_employee" ("service_category_id"); (params ())
[2025-09-27 22:07:10,053] DEBUG django.db.backends (0.000) CREATE INDEX "scheduling_employee_service_category_id_5a713c42" ON "scheduling_employee" ("service_category_id"); args=(); alias=default
[2025-09-27 22:07:10,058] DEBUG django.db.backends.schema CREATE TABLE "new__scheduling_booking" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "customer_name" varchar(200) NOT NULL, "customer_address" varchar(255) NOT NULL); (params None)
[2025-09-27 22:07:10,059] DEBUG django.db.backends (0.000) CREATE TABLE "new__scheduling_booking" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "customer_name" varchar(200) NOT NULL, "customer_address" varchar(255) NOT NULL); args=None; alias=default
[2025-09-27 22:07:10,060] DEBUG django.db.backends.schema INSERT INTO "new__scheduling_booking" ("id", "customer_name", "customer_address") SELECT "id", "customer_name", "customer_address" FROM "scheduling_booking"; (params ())
[2025-09-27 22:07:10,060] DEBUG django.db.backends (0.000) INSERT INTO "new__scheduling_booking" ("id", "customer_name", "customer_address") SELECT "id", "customer_name", "customer_address" FROM "scheduling_booking"; args=(); alias=default
[2025-09-27 22:07:10,061] DEBUG django.db.backends.schema DROP TABLE "scheduling_booking"; (params ())
[2025-09-27 22:07:10,061] DEBUG django.db.backends (0.000) DROP TABLE "scheduling_booking"; args=(); alias=default
[2025-09-27 22:07:10,061] DEBUG django.db.backends.schema ALTER TABLE "new__scheduling_booking" RENAME TO "scheduling_booking"; (params ())
[2025-09-27 22:07:10,063] DEBUG django.db.backends (0.000) ALTER TABLE "new__scheduling_booking" RENAME TO "scheduling_booking"; args=(); alias=default
[2025-09-27 22:07:10,068] DEBUG django.db.backends.schema CREATE TABLE "new__scheduling_booking" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "customer_name" varchar(200) NOT NULL, "customer_address" varchar(255) NOT NULL, "service_category_id" bigint NOT NULL REFERENCES "scheduling_servicecategory" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
[2025-09-27 22:07:10,069] DEBUG django.db.backends (0.000) CREATE TABLE "new__scheduling_booking" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "customer_name" varchar(200) NOT NULL, "customer_address" varchar(255) NOT NULL, "service_category_id" bigint NOT NULL REFERENCES "scheduling_servicecategory" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
[2025-09-27 22:07:10,069] DEBUG django.db.backends.schema INSERT INTO "new__scheduling_booking" ("id", "customer_name", "customer_address", "service_category_id") SELECT "id", "customer_name", "customer_address", NULL FROM "scheduling_booking"; (params ())
[2025-09-27 22:07:10,069] DEBUG django.db.backends (0.000) INSERT INTO "new__scheduling_booking" ("id", "customer_name", "customer_address", "service_category_id") SELECT "id", "customer_name", "customer_address", NULL FROM "scheduling_booking"; args=(); alias=default
[2025-09-27 22:07:10,069] DEBUG django.db.backends.schema DROP TABLE "scheduling_booking"; (params ())
[2025-09-27 22:07:10,069] DEBUG django.db.backends (0.000) DROP TABLE "scheduling_booking"; args=(); alias=default
[2025-09-27 22:07:10,069] DEBUG django.db.backends.schema ALTER TABLE "new__scheduling_booking" RENAME TO "scheduling_booking"; (params ())
[2025-09-27 22:07:10,070] DEBUG django.db.backends (0.000) ALTER TABLE "new__scheduling_booking" RENAME TO "scheduling_booking"; args=(); alias=default
[2025-09-27 22:07:10,070] DEBUG django.db.backends.schema CREATE INDEX "scheduling_booking_service_category_id_6691953b" ON "scheduling_booking" ("service_category_id"); (params ())
[2025-09-27 22:07:10,071] DEBUG django.db.backends (0.000) CREATE INDEX "scheduling_booking_service_category_id_6691953b" ON "scheduling_booking" ("service_category_id"); args=(); alias=default
[2025-09-27 22:07:10,075] DEBUG django.db.backends.schema CREATE TABLE "new__scheduling_booking" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "customer_name" varchar(200) NOT NULL, "customer_address" varchar(255) NOT NULL, "service_category_id" bigint NOT NULL REFERENCES "scheduling_servicecategory" ("id") DEFERRABLE INITIALLY DEFERRED, "time_slot_id" bigint NOT NULL REFERENCES "scheduling_timeslot" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
[2025-09-27 22:07:10,075] DEBUG django.db.backends (0.000) CREATE TABLE "new__scheduling_booking" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "customer_name" varchar(200) NOT NULL, "customer_address" varchar(255) NOT NULL, "service_category_id" bigint NOT NULL REFERENCES "scheduling_servicecategory" ("id") DEFERRABLE INITIALLY DEFERRED, "time_slot_id" bigint NOT NULL REFERENCES "scheduling_timeslot" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
[2025-09-27 22:07:10,076] DEBUG django.db.backends.schema INSERT INTO "new__scheduling_booking" ("id", "customer_name", "customer_address", "service_category_id", "time_slot_id") SELECT "id", "customer_name", "customer_address", "service_category_id", NULL FROM "scheduling_booking"; (params ())
[2025-09-27 22:07:10,076] DEBUG django.db.backends (0.000) INSERT INTO "new__scheduling_booking" ("id", "customer_name", "customer_address", "service_category_id", "time_slot_id") SELECT "id", "customer_name", "customer_address", "service_category_id", NULL FROM "scheduling_booking"; args=(); alias=default
[2025-09-27 22:07:10,076] DEBUG django.db.backends.schema DROP TABLE "scheduling_booking"; (params ())
[2025-09-27 22:07:10,076] DEBUG django.db.backends (0.000) DROP TABLE "scheduling_booking"; args=(); alias=default
[2025-09-27 22:07:10,076] DEBUG django.db.backends.schema ALTER TABLE "new__scheduling_booking" RENAME TO "scheduling_booking"; (params ())
[2025-09-27 22:07:10,078] DEBUG django.db.backends (0.000) ALTER TABLE "new__scheduling_booking" RENAME TO "scheduling_booking"; args=(); alias=default
[2025-09-27 22:07:10,078] DEBUG django.db.backends.schema CREATE INDEX "scheduling_booking_service_category_id_6691953b" ON "scheduling_booking" ("service_category_id"); (params ())
[2025-09-27 22:07:10,078] DEBUG django.db.backends (0.000) CREATE INDEX "scheduling_booking_service_category_id_6691953b" ON "scheduling_booking" ("service_category_id"); args=(); alias=default
[2025-09-27 22:07:10,079] DEBUG django.db.backends.schema CREATE INDEX "scheduling_booking_time_slot_id_d16801ef" ON "scheduling_booking" ("time_slot_id"); (params ())
[2025-09-27 22:07:10,079] DEBUG django.db.backends (0.000) CREATE INDEX "scheduling_booking_time_slot_id_d16801ef" ON "scheduling_booking" ("time_slot_id"); args=(); alias=default
[2025-09-27 22:07:10,079] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-27 22:07:10,079] DEBUG django.db.backends (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('scheduling', '0001_initial', '2025-09-27 20:07:10.079558') RETURNING "django_migrations"."id"; args=('scheduling', '0001_initial', '2025-09-27 20:07:10.079558'); alias=default
[2025-09-27 22:07:10,080] DEBUG django.db.backends (0.000) PRAGMA foreign_key_check; args=None; alias=default
[2025-09-27 22:07:10,086] DEBUG django.db.backends (0.016) COMMIT; args=None; alias=default
[2025-09-27 22:07:10,087] DEBUG django.db.backends (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
[2025-09-27 22:07:10,087] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-27 22:07:10,088] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-27 22:07:10,089] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
[2025-09-27 22:07:10,090] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
[2025-09-27 22:07:10,093] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
[2025-09-27 22:07:10,094] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
[2025-09-27 22:07:10,095] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
[2025-09-27 22:07:10,096] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
[2025-09-27 22:07:10,097] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
[2025-09-27 22:07:10,098] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
[2025-09-27 22:07:10,100] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
[2025-09-27 22:07:10,101] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
[2025-09-27 22:07:10,101] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
[2025-09-27 22:07:10,102] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
[2025-09-27 22:07:10,104] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
[2025-09-27 22:07:10,105] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
[2025-09-27 22:07:10,105] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
[2025-09-27 22:07:10,106] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
[2025-09-27 22:07:10,107] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
[2025-09-27 22:07:10,107] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
[2025-09-27 22:07:10,108] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'customers'; args=('customers',); alias=default
[2025-09-27 22:07:10,109] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'customers' AND "django_content_type"."model" = 'registeredcustomer') LIMIT 21; args=('customers', 'registeredcustomer'); alias=default
[2025-09-27 22:07:10,110] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(7,); alias=default
[2025-09-27 22:07:10,110] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'customers'; args=('customers',); alias=default
[2025-09-27 22:07:10,111] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'scheduling'; args=('scheduling',); alias=default
[2025-09-27 22:07:10,111] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-27 22:07:10,112] DEBUG django.db.backends (0.016) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('scheduling', 'jobassignment'), ('scheduling', 'employee'), ('scheduling', 'servicecategory'), ('scheduling', 'booking'), ('scheduling', 'timeslot') RETURNING "django_content_type"."id"; args=('scheduling', 'jobassignment', 'scheduling', 'employee', 'scheduling', 'servicecategory', 'scheduling', 'booking', 'scheduling', 'timeslot'); alias=default
[2025-09-27 22:07:10,117] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-27 22:07:10,118] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'jobassignment') LIMIT 21; args=('scheduling', 'jobassignment'); alias=default
[2025-09-27 22:07:10,119] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'employee') LIMIT 21; args=('scheduling', 'employee'); alias=default
[2025-09-27 22:07:10,120] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'servicecategory') LIMIT 21; args=('scheduling', 'servicecategory'); alias=default
[2025-09-27 22:07:10,121] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'booking') LIMIT 21; args=('scheduling', 'booking'); alias=default
[2025-09-27 22:07:10,122] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'timeslot') LIMIT 21; args=('scheduling', 'timeslot'); alias=default
[2025-09-27 22:07:10,123] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 9, 10, 11, 12) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 9, 10, 11, 12); alias=default
[2025-09-27 22:07:10,124] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-27 22:07:10,125] DEBUG django.db.backends (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add job assignment', 8, 'add_jobassignment'), ('Can change job assignment', 8, 'change_jobassignment'), ('Can delete job assignment', 8, 'delete_jobassignment'), ('Can view job assignment', 8, 'view_jobassignment'), ('Can add employee', 9, 'add_employee'), ('Can change employee', 9, 'change_employee'), ('Can delete employee', 9, 'delete_employee'), ('Can view employee', 9, 'view_employee'), ('Can add service category', 10, 'add_servicecategory'), ('Can change service category', 10, 'change_servicecategory'), ('Can delete service category', 10, 'delete_servicecategory'), ('Can view service category', 10, 'view_servicecategory'), ('Can add booking', 11, 'add_booking'), ('Can change booking', 11, 'change_booking'), ('Can delete booking', 11, 'delete_booking'), ('Can view booking', 11, 'view_booking'), ('Can add time slot', 12, 'add_timeslot'), ('Can change time slot', 12, 'change_timeslot'), ('Can delete time slot', 12, 'delete_timeslot'), ('Can view time slot', 12, 'view_timeslot') RETURNING "auth_permission"."id"; args=('Can add job assignment', 8, 'add_jobassignment', 'Can change job assignment', 8, 'change_jobassignment', 'Can delete job assignment', 8, 'delete_jobassignment', 'Can view job assignment', 8, 'view_jobassignment', 'Can add employee', 9, 'add_employee', 'Can change employee', 9, 'change_employee', 'Can delete employee', 9, 'delete_employee', 'Can view employee', 9, 'view_employee', 'Can add service category', 10, 'add_servicecategory', 'Can change service category', 10, 'change_servicecategory', 'Can delete service category', 10, 'delete_servicecategory', 'Can view service category', 10, 'view_servicecategory', 'Can add booking', 11, 'add_booking', 'Can change booking', 11, 'change_booking', 'Can delete booking', 11, 'delete_booking', 'Can view booking', 11, 'view_booking', 'Can add time slot', 12, 'add_timeslot', 'Can change time slot', 12, 'change_timeslot', 'Can delete time slot', 12, 'delete_timeslot', 'Can view time slot', 12, 'view_timeslot'); alias=default
[2025-09-27 22:07:10,132] DEBUG django.db.backends (0.015) COMMIT; args=None; alias=default
[2025-09-27 22:07:10,134] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'scheduling'; args=('scheduling',); alias=default
[2025-09-27 22:34:09,161] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-27 22:34:09,163] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-27 22:34:09,705] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-27 22:34:09,707] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-27 22:34:09,708] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-27 22:34:09,708] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-27 22:34:09,723] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-27 22:34:09,724] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-27 22:34:09,724] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-27 22:34:09,725] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
[2025-09-27 22:34:09,726] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
[2025-09-27 22:34:09,727] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
[2025-09-27 22:34:09,727] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
[2025-09-27 22:34:09,728] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
[2025-09-27 22:34:09,728] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
[2025-09-27 22:34:09,729] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
[2025-09-27 22:34:09,730] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
[2025-09-27 22:34:09,731] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
[2025-09-27 22:34:09,731] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
[2025-09-27 22:34:09,732] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
[2025-09-27 22:34:09,733] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
[2025-09-27 22:34:09,734] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
[2025-09-27 22:34:09,734] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
[2025-09-27 22:34:09,735] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
[2025-09-27 22:34:09,735] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
[2025-09-27 22:34:09,737] DEBUG django.db.backends (0.016) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
[2025-09-27 22:34:09,737] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
[2025-09-27 22:34:09,738] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'customers'; args=('customers',); alias=default
[2025-09-27 22:34:09,739] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'customers' AND "django_content_type"."model" = 'registeredcustomer') LIMIT 21; args=('customers', 'registeredcustomer'); alias=default
[2025-09-27 22:34:09,740] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(7,); alias=default
[2025-09-27 22:34:09,740] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'customers'; args=('customers',); alias=default
[2025-09-27 22:34:09,741] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'scheduling'; args=('scheduling',); alias=default
[2025-09-27 22:34:09,741] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'booking') LIMIT 21; args=('scheduling', 'booking'); alias=default
[2025-09-27 22:34:09,742] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'employee') LIMIT 21; args=('scheduling', 'employee'); alias=default
[2025-09-27 22:34:09,743] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'servicecategory') LIMIT 21; args=('scheduling', 'servicecategory'); alias=default
[2025-09-27 22:34:09,743] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'timeslot') LIMIT 21; args=('scheduling', 'timeslot'); alias=default
[2025-09-27 22:34:09,744] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'jobassignment') LIMIT 21; args=('scheduling', 'jobassignment'); alias=default
[2025-09-27 22:34:09,745] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 9, 10, 11, 12) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 9, 10, 11, 12); alias=default
[2025-09-27 22:34:09,746] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'scheduling'; args=('scheduling',); alias=default
[2025-09-27 22:34:10,580] DEBUG django.db.backends (0.000) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory" WHERE "scheduling_servicecategory"."name" = 'Garage/Basement' LIMIT 21; args=('Garage/Basement',); alias=default
[2025-09-27 22:34:10,580] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-27 22:34:10,581] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_servicecategory" ("name") VALUES ('Garage/Basement') RETURNING "scheduling_servicecategory"."id"; args=('Garage/Basement',); alias=default
[2025-09-27 22:34:10,588] DEBUG django.db.backends (0.016) COMMIT; args=None; alias=default
[2025-09-27 22:34:10,588] DEBUG django.db.backends (0.000) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory" WHERE "scheduling_servicecategory"."name" = 'Lawncare' LIMIT 21; args=('Lawncare',); alias=default
[2025-09-27 22:34:10,589] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-27 22:34:10,590] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_servicecategory" ("name") VALUES ('Lawncare') RETURNING "scheduling_servicecategory"."id"; args=('Lawncare',); alias=default
[2025-09-27 22:34:10,595] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-27 22:34:10,596] DEBUG django.db.backends (0.000) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory" WHERE "scheduling_servicecategory"."name" = 'House Cleaning' LIMIT 21; args=('House Cleaning',); alias=default
[2025-09-27 22:34:10,596] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-27 22:34:10,597] DEBUG django.db.backends (0.015) INSERT INTO "scheduling_servicecategory" ("name") VALUES ('House Cleaning') RETURNING "scheduling_servicecategory"."id"; args=('House Cleaning',); alias=default
[2025-09-27 22:34:10,601] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-27 22:34:10,603] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE ("scheduling_employee"."home_address" = '68630 Horton Village
Aguilarberg, FM 45552' AND "scheduling_employee"."name" = 'Adam Jackson' AND "scheduling_employee"."service_category_id" = 1) LIMIT 21; args=('68630 Horton Village\nAguilarberg, FM 45552', 'Adam Jackson', 1); alias=default
[2025-09-27 22:34:10,603] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-27 22:34:10,604] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Adam Jackson', '68630 Horton Village
Aguilarberg, FM 45552', 1) RETURNING "scheduling_employee"."id"; args=('Adam Jackson', '68630 Horton Village\nAguilarberg, FM 45552', 1); alias=default
[2025-09-27 22:34:10,608] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-27 22:34:10,609] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE ("scheduling_employee"."home_address" = '27548 Burns Crossroad Apt. 817
South Sarahmouth, DC 44720' AND "scheduling_employee"."name" = 'Nicole Gardner' AND "scheduling_employee"."service_category_id" = 1) LIMIT 21; args=('27548 Burns Crossroad Apt. 817\nSouth Sarahmouth, DC 44720', 'Nicole Gardner', 1); alias=default
[2025-09-27 22:34:10,609] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-27 22:34:10,610] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Nicole Gardner', '27548 Burns Crossroad Apt. 817
South Sarahmouth, DC 44720', 1) RETURNING "scheduling_employee"."id"; args=('Nicole Gardner', '27548 Burns Crossroad Apt. 817\nSouth Sarahmouth, DC 44720', 1); alias=default
[2025-09-27 22:34:10,615] DEBUG django.db.backends (0.016) COMMIT; args=None; alias=default
[2025-09-27 22:34:10,616] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE ("scheduling_employee"."home_address" = '96307 Shannon Row
Reidland, WV 32943' AND "scheduling_employee"."name" = 'Troy Santiago' AND "scheduling_employee"."service_category_id" = 1) LIMIT 21; args=('96307 Shannon Row\nReidland, WV 32943', 'Troy Santiago', 1); alias=default
[2025-09-27 22:34:10,617] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-27 22:34:10,618] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Troy Santiago', '96307 Shannon Row
Reidland, WV 32943', 1) RETURNING "scheduling_employee"."id"; args=('Troy Santiago', '96307 Shannon Row\nReidland, WV 32943', 1); alias=default
[2025-09-27 22:34:10,622] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-27 22:34:10,624] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE ("scheduling_employee"."home_address" = '34510 Abbott Drive Suite 253
Lake Angelaville, ID 70017' AND "scheduling_employee"."name" = 'Cody Jimenez' AND "scheduling_employee"."service_category_id" = 1) LIMIT 21; args=('34510 Abbott Drive Suite 253\nLake Angelaville, ID 70017', 'Cody Jimenez', 1); alias=default
[2025-09-27 22:34:10,624] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-27 22:34:10,625] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Cody Jimenez', '34510 Abbott Drive Suite 253
Lake Angelaville, ID 70017', 1) RETURNING "scheduling_employee"."id"; args=('Cody Jimenez', '34510 Abbott Drive Suite 253\nLake Angelaville, ID 70017', 1); alias=default
[2025-09-27 22:34:10,630] DEBUG django.db.backends (0.015) COMMIT; args=None; alias=default
[2025-09-27 22:34:10,632] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE ("scheduling_employee"."home_address" = '7457 Harper Keys
South Donaldmouth, MP 29061' AND "scheduling_employee"."name" = 'Tony Taylor' AND "scheduling_employee"."service_category_id" = 1) LIMIT 21; args=('7457 Harper Keys\nSouth Donaldmouth, MP 29061', 'Tony Taylor', 1); alias=default
[2025-09-27 22:34:10,632] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-27 22:34:10,634] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Tony Taylor', '7457 Harper Keys
South Donaldmouth, MP 29061', 1) RETURNING "scheduling_employee"."id"; args=('Tony Taylor', '7457 Harper Keys\nSouth Donaldmouth, MP 29061', 1); alias=default
[2025-09-27 22:34:10,639] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-27 22:34:10,640] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE ("scheduling_employee"."home_address" = '6795 Henry Branch Suite 346
Mitchellfort, RI 04292' AND "scheduling_employee"."name" = 'Tina Welch' AND "scheduling_employee"."service_category_id" = 2) LIMIT 21; args=('6795 Henry Branch Suite 346\nMitchellfort, RI 04292', 'Tina Welch', 2); alias=default
[2025-09-27 22:34:10,640] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-27 22:34:10,642] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Tina Welch', '6795 Henry Branch Suite 346
Mitchellfort, RI 04292', 2) RETURNING "scheduling_employee"."id"; args=('Tina Welch', '6795 Henry Branch Suite 346\nMitchellfort, RI 04292', 2); alias=default
[2025-09-27 22:34:10,646] DEBUG django.db.backends (0.016) COMMIT; args=None; alias=default
[2025-09-27 22:34:10,648] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE ("scheduling_employee"."home_address" = '33078 Angie Street Apt. 072
North Sarahborough, WI 26479' AND "scheduling_employee"."name" = 'Thomas Arellano' AND "scheduling_employee"."service_category_id" = 2) LIMIT 21; args=('33078 Angie Street Apt. 072\nNorth Sarahborough, WI 26479', 'Thomas Arellano', 2); alias=default
[2025-09-27 22:34:10,649] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-27 22:34:10,650] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Thomas Arellano', '33078 Angie Street Apt. 072
North Sarahborough, WI 26479', 2) RETURNING "scheduling_employee"."id"; args=('Thomas Arellano', '33078 Angie Street Apt. 072\nNorth Sarahborough, WI 26479', 2); alias=default
[2025-09-27 22:34:10,655] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-27 22:34:10,656] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE ("scheduling_employee"."home_address" = '0579 Christopher Dale
Port Jeffreymouth, AL 67500' AND "scheduling_employee"."name" = 'Joshua Miller' AND "scheduling_employee"."service_category_id" = 2) LIMIT 21; args=('0579 Christopher Dale\nPort Jeffreymouth, AL 67500', 'Joshua Miller', 2); alias=default
[2025-09-27 22:34:10,656] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-27 22:34:10,657] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Joshua Miller', '0579 Christopher Dale
Port Jeffreymouth, AL 67500', 2) RETURNING "scheduling_employee"."id"; args=('Joshua Miller', '0579 Christopher Dale\nPort Jeffreymouth, AL 67500', 2); alias=default
[2025-09-27 22:34:10,661] DEBUG django.db.backends (0.016) COMMIT; args=None; alias=default
[2025-09-27 22:34:10,663] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE ("scheduling_employee"."home_address" = '92467 Donald Junctions
West Christopherhaven, MO 67583' AND "scheduling_employee"."name" = 'Donald Yang' AND "scheduling_employee"."service_category_id" = 2) LIMIT 21; args=('92467 Donald Junctions\nWest Christopherhaven, MO 67583', 'Donald Yang', 2); alias=default
[2025-09-27 22:34:10,663] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-27 22:34:10,664] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Donald Yang', '92467 Donald Junctions
West Christopherhaven, MO 67583', 2) RETURNING "scheduling_employee"."id"; args=('Donald Yang', '92467 Donald Junctions\nWest Christopherhaven, MO 67583', 2); alias=default
[2025-09-27 22:34:10,669] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-27 22:34:10,670] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE ("scheduling_employee"."home_address" = '8801 Diane Cliff Apt. 501
East William, DE 48445' AND "scheduling_employee"."name" = 'David Simmons' AND "scheduling_employee"."service_category_id" = 2) LIMIT 21; args=('8801 Diane Cliff Apt. 501\nEast William, DE 48445', 'David Simmons', 2); alias=default
[2025-09-27 22:34:10,670] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-27 22:34:10,671] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('David Simmons', '8801 Diane Cliff Apt. 501
East William, DE 48445', 2) RETURNING "scheduling_employee"."id"; args=('David Simmons', '8801 Diane Cliff Apt. 501\nEast William, DE 48445', 2); alias=default
[2025-09-27 22:34:10,675] DEBUG django.db.backends (0.015) COMMIT; args=None; alias=default
[2025-09-27 22:34:10,676] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE ("scheduling_employee"."home_address" = '47231 Murray Hill Suite 933
Maryborough, MT 33347' AND "scheduling_employee"."name" = 'Sergio Warner MD' AND "scheduling_employee"."service_category_id" = 3) LIMIT 21; args=('47231 Murray Hill Suite 933\nMaryborough, MT 33347', 'Sergio Warner MD', 3); alias=default
[2025-09-27 22:34:10,676] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-27 22:34:10,677] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Sergio Warner MD', '47231 Murray Hill Suite 933
Maryborough, MT 33347', 3) RETURNING "scheduling_employee"."id"; args=('Sergio Warner MD', '47231 Murray Hill Suite 933\nMaryborough, MT 33347', 3); alias=default
[2025-09-27 22:34:10,682] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-27 22:34:10,683] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE ("scheduling_employee"."home_address" = '352 Anita Squares
New Jamesmouth, OH 39453' AND "scheduling_employee"."name" = 'Randy Ruiz' AND "scheduling_employee"."service_category_id" = 3) LIMIT 21; args=('352 Anita Squares\nNew Jamesmouth, OH 39453', 'Randy Ruiz', 3); alias=default
[2025-09-27 22:34:10,683] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-27 22:34:10,684] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Randy Ruiz', '352 Anita Squares
New Jamesmouth, OH 39453', 3) RETURNING "scheduling_employee"."id"; args=('Randy Ruiz', '352 Anita Squares\nNew Jamesmouth, OH 39453', 3); alias=default
[2025-09-27 22:34:10,688] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-27 22:34:10,689] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE ("scheduling_employee"."home_address" = '6384 Stephen Glens Suite 192
Wallstown, OK 99333' AND "scheduling_employee"."name" = 'Stephanie Frederick' AND "scheduling_employee"."service_category_id" = 3) LIMIT 21; args=('6384 Stephen Glens Suite 192\nWallstown, OK 99333', 'Stephanie Frederick', 3); alias=default
[2025-09-27 22:34:10,689] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-27 22:34:10,691] DEBUG django.db.backends (0.016) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Stephanie Frederick', '6384 Stephen Glens Suite 192
Wallstown, OK 99333', 3) RETURNING "scheduling_employee"."id"; args=('Stephanie Frederick', '6384 Stephen Glens Suite 192\nWallstown, OK 99333', 3); alias=default
[2025-09-27 22:34:10,695] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-27 22:34:10,696] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE ("scheduling_employee"."home_address" = '31623 Christopher Wells
West Regina, NJ 79634' AND "scheduling_employee"."name" = 'Wendy Robles' AND "scheduling_employee"."service_category_id" = 3) LIMIT 21; args=('31623 Christopher Wells\nWest Regina, NJ 79634', 'Wendy Robles', 3); alias=default
[2025-09-27 22:34:10,696] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-27 22:34:10,697] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Wendy Robles', '31623 Christopher Wells
West Regina, NJ 79634', 3) RETURNING "scheduling_employee"."id"; args=('Wendy Robles', '31623 Christopher Wells\nWest Regina, NJ 79634', 3); alias=default
[2025-09-27 22:34:10,701] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-27 22:34:10,702] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE ("scheduling_employee"."home_address" = '00359 Laurie Manor Apt. 566
Lake Diana, CA 33846' AND "scheduling_employee"."name" = 'Cynthia Chan' AND "scheduling_employee"."service_category_id" = 3) LIMIT 21; args=('00359 Laurie Manor Apt. 566\nLake Diana, CA 33846', 'Cynthia Chan', 3); alias=default
[2025-09-27 22:34:10,702] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-27 22:34:10,703] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Cynthia Chan', '00359 Laurie Manor Apt. 566
Lake Diana, CA 33846', 3) RETURNING "scheduling_employee"."id"; args=('Cynthia Chan', '00359 Laurie Manor Apt. 566\nLake Diana, CA 33846', 3); alias=default
[2025-09-27 22:34:10,707] DEBUG django.db.backends (0.016) COMMIT; args=None; alias=default
[2025-09-27 22:34:10,707] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee"; args=(); alias=default
[2025-09-27 22:43:18,394] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-27 22:43:18,396] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-27 22:45:17,276] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-27 22:45:17,278] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-27 22:45:17,279] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-27 22:45:17,279] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-27 22:45:17,293] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-27 22:45:17,294] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-27 22:45:17,294] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-27 22:45:17,296] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
[2025-09-27 22:45:17,298] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
[2025-09-27 22:45:17,335] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
[2025-09-27 22:45:17,337] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
[2025-09-27 22:45:17,338] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
[2025-09-27 22:45:17,339] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
[2025-09-27 22:45:17,340] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
[2025-09-27 22:45:17,342] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
[2025-09-27 22:45:17,345] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
[2025-09-27 22:45:17,346] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
[2025-09-27 22:45:17,347] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
[2025-09-27 22:45:17,349] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
[2025-09-27 22:45:17,350] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
[2025-09-27 22:45:17,351] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
[2025-09-27 22:45:17,352] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
[2025-09-27 22:45:17,353] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
[2025-09-27 22:45:17,354] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
[2025-09-27 22:45:17,355] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
[2025-09-27 22:45:17,356] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'customers'; args=('customers',); alias=default
[2025-09-27 22:45:17,357] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'customers' AND "django_content_type"."model" = 'registeredcustomer') LIMIT 21; args=('customers', 'registeredcustomer'); alias=default
[2025-09-27 22:45:17,359] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(7,); alias=default
[2025-09-27 22:45:17,361] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'customers'; args=('customers',); alias=default
[2025-09-27 22:45:17,364] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'scheduling'; args=('scheduling',); alias=default
[2025-09-27 22:45:17,366] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'booking') LIMIT 21; args=('scheduling', 'booking'); alias=default
[2025-09-27 22:45:17,367] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'employee') LIMIT 21; args=('scheduling', 'employee'); alias=default
[2025-09-27 22:45:17,368] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'servicecategory') LIMIT 21; args=('scheduling', 'servicecategory'); alias=default
[2025-09-27 22:45:17,369] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'timeslot') LIMIT 21; args=('scheduling', 'timeslot'); alias=default
[2025-09-27 22:45:17,370] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'jobassignment') LIMIT 21; args=('scheduling', 'jobassignment'); alias=default
[2025-09-27 22:45:17,372] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 9, 10, 11, 12) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 9, 10, 11, 12); alias=default
[2025-09-27 22:45:17,373] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'scheduling'; args=('scheduling',); alias=default
[2025-09-27 22:47:21,690] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-27 22:47:21,693] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-27 22:47:52,810] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-27 22:47:52,812] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-27 22:47:52,813] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-27 22:47:52,813] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-27 22:47:52,833] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-27 22:47:52,833] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-27 22:47:52,834] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-27 22:47:52,836] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
[2025-09-27 22:47:52,837] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
[2025-09-27 22:47:52,840] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
[2025-09-27 22:47:52,841] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
[2025-09-27 22:47:52,842] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
[2025-09-27 22:47:52,843] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
[2025-09-27 22:47:52,844] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
[2025-09-27 22:47:52,845] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
[2025-09-27 22:47:52,847] DEBUG django.db.backends (0.015) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
[2025-09-27 22:47:52,847] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
[2025-09-27 22:47:52,848] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
[2025-09-27 22:47:52,848] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
[2025-09-27 22:47:52,849] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
[2025-09-27 22:47:52,851] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
[2025-09-27 22:47:52,852] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
[2025-09-27 22:47:52,852] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
[2025-09-27 22:47:52,854] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
[2025-09-27 22:47:52,854] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
[2025-09-27 22:47:52,855] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'customers'; args=('customers',); alias=default
[2025-09-27 22:47:52,855] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'customers' AND "django_content_type"."model" = 'registeredcustomer') LIMIT 21; args=('customers', 'registeredcustomer'); alias=default
[2025-09-27 22:47:52,857] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(7,); alias=default
[2025-09-27 22:47:52,858] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'customers'; args=('customers',); alias=default
[2025-09-27 22:47:52,859] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'scheduling'; args=('scheduling',); alias=default
[2025-09-27 22:47:52,860] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'booking') LIMIT 21; args=('scheduling', 'booking'); alias=default
[2025-09-27 22:47:52,861] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'employee') LIMIT 21; args=('scheduling', 'employee'); alias=default
[2025-09-27 22:47:52,862] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'servicecategory') LIMIT 21; args=('scheduling', 'servicecategory'); alias=default
[2025-09-27 22:47:52,863] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'timeslot') LIMIT 21; args=('scheduling', 'timeslot'); alias=default
[2025-09-27 22:47:52,863] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'jobassignment') LIMIT 21; args=('scheduling', 'jobassignment'); alias=default
[2025-09-27 22:47:52,864] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 9, 10, 11, 12) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 9, 10, 11, 12); alias=default
[2025-09-27 22:47:52,865] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'scheduling'; args=('scheduling',); alias=default
[2025-09-29 20:17:17,101] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-29 20:17:17,106] DEBUG django.db.backends (0.000) DELETE FROM "scheduling_jobassignment"; args=(); alias=default
[2025-09-29 20:17:17,106] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-29 20:17:17,107] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking"; args=(); alias=default
[2025-09-29 20:22:18,454] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-29 20:22:18,456] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-29 20:22:36,396] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-29 20:22:36,399] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-29 20:22:36,400] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-29 20:22:36,400] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-29 20:22:36,417] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-29 20:22:36,418] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-29 20:22:36,418] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-29 20:22:36,420] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
[2025-09-29 20:22:36,421] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
[2025-09-29 20:22:36,425] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
[2025-09-29 20:22:36,426] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
[2025-09-29 20:22:36,427] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
[2025-09-29 20:22:36,428] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
[2025-09-29 20:22:36,429] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
[2025-09-29 20:22:36,430] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
[2025-09-29 20:22:36,440] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
[2025-09-29 20:22:36,441] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
[2025-09-29 20:22:36,442] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
[2025-09-29 20:22:36,442] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
[2025-09-29 20:22:36,443] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
[2025-09-29 20:22:36,444] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
[2025-09-29 20:22:36,444] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
[2025-09-29 20:22:36,445] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
[2025-09-29 20:22:36,446] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
[2025-09-29 20:22:36,446] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
[2025-09-29 20:22:36,447] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'customers'; args=('customers',); alias=default
[2025-09-29 20:22:36,447] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'customers' AND "django_content_type"."model" = 'registeredcustomer') LIMIT 21; args=('customers', 'registeredcustomer'); alias=default
[2025-09-29 20:22:36,449] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(7,); alias=default
[2025-09-29 20:22:36,449] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'customers'; args=('customers',); alias=default
[2025-09-29 20:22:36,450] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'scheduling'; args=('scheduling',); alias=default
[2025-09-29 20:22:36,451] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'booking') LIMIT 21; args=('scheduling', 'booking'); alias=default
[2025-09-29 20:22:36,453] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'employee') LIMIT 21; args=('scheduling', 'employee'); alias=default
[2025-09-29 20:22:36,454] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'servicecategory') LIMIT 21; args=('scheduling', 'servicecategory'); alias=default
[2025-09-29 20:22:36,455] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'timeslot') LIMIT 21; args=('scheduling', 'timeslot'); alias=default
[2025-09-29 20:22:36,455] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'jobassignment') LIMIT 21; args=('scheduling', 'jobassignment'); alias=default
[2025-09-29 20:22:36,456] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 9, 10, 11, 12) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 9, 10, 11, 12); alias=default
[2025-09-29 20:22:36,457] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'scheduling'; args=('scheduling',); alias=default
[2025-09-29 20:23:35,317] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-29 20:23:35,320] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-29 20:23:35,320] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-29 20:23:35,321] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-29 20:23:35,330] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-29 20:23:35,347] DEBUG django.db.backends (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
[2025-09-29 20:23:35,347] DEBUG django.db.backends (0.000) PRAGMA foreign_keys; args=None; alias=default
[2025-09-29 20:23:35,348] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-29 20:23:35,366] DEBUG django.db.backends.schema CREATE TABLE "new__scheduling_booking" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "customer_name" varchar(255) NOT NULL, "customer_address" varchar(255) NOT NULL, "date" date NOT NULL, "service_category_id" bigint NOT NULL REFERENCES "scheduling_servicecategory" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
[2025-09-29 20:23:35,375] DEBUG django.db.backends (0.000) CREATE TABLE "new__scheduling_booking" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "customer_name" varchar(255) NOT NULL, "customer_address" varchar(255) NOT NULL, "date" date NOT NULL, "service_category_id" bigint NOT NULL REFERENCES "scheduling_servicecategory" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
[2025-09-29 20:23:35,375] DEBUG django.db.backends.schema INSERT INTO "new__scheduling_booking" ("id", "customer_name", "customer_address", "date", "service_category_id") SELECT "id", "customer_name", "customer_address", "date", "service_category_id" FROM "scheduling_booking"; (params ())
[2025-09-29 20:23:35,376] DEBUG django.db.backends (0.000) INSERT INTO "new__scheduling_booking" ("id", "customer_name", "customer_address", "date", "service_category_id") SELECT "id", "customer_name", "customer_address", "date", "service_category_id" FROM "scheduling_booking"; args=(); alias=default
[2025-09-29 20:23:35,376] DEBUG django.db.backends.schema DROP TABLE "scheduling_booking"; (params ())
[2025-09-29 20:23:35,378] DEBUG django.db.backends (0.000) DROP TABLE "scheduling_booking"; args=(); alias=default
[2025-09-29 20:23:35,378] DEBUG django.db.backends.schema ALTER TABLE "new__scheduling_booking" RENAME TO "scheduling_booking"; (params ())
[2025-09-29 20:23:35,380] DEBUG django.db.backends (0.015) ALTER TABLE "new__scheduling_booking" RENAME TO "scheduling_booking"; args=(); alias=default
[2025-09-29 20:23:35,381] DEBUG django.db.backends.schema CREATE INDEX "scheduling_booking_service_category_id_6691953b" ON "scheduling_booking" ("service_category_id"); (params ())
[2025-09-29 20:23:35,381] DEBUG django.db.backends (0.000) CREATE INDEX "scheduling_booking_service_category_id_6691953b" ON "scheduling_booking" ("service_category_id"); args=(); alias=default
[2025-09-29 20:23:35,382] DEBUG django.db.backends.schema CREATE TABLE "new__scheduling_booking" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "customer_name" varchar(255) NOT NULL, "customer_address" varchar(255) NOT NULL, "date" date NOT NULL); (params None)
[2025-09-29 20:23:35,383] DEBUG django.db.backends (0.000) CREATE TABLE "new__scheduling_booking" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "customer_name" varchar(255) NOT NULL, "customer_address" varchar(255) NOT NULL, "date" date NOT NULL); args=None; alias=default
[2025-09-29 20:23:35,383] DEBUG django.db.backends.schema INSERT INTO "new__scheduling_booking" ("id", "customer_name", "customer_address", "date") SELECT "id", "customer_name", "customer_address", "date" FROM "scheduling_booking"; (params ())
[2025-09-29 20:23:35,383] DEBUG django.db.backends (0.000) INSERT INTO "new__scheduling_booking" ("id", "customer_name", "customer_address", "date") SELECT "id", "customer_name", "customer_address", "date" FROM "scheduling_booking"; args=(); alias=default
[2025-09-29 20:23:35,383] DEBUG django.db.backends.schema DROP TABLE "scheduling_booking"; (params ())
[2025-09-29 20:23:35,383] DEBUG django.db.backends (0.000) DROP TABLE "scheduling_booking"; args=(); alias=default
[2025-09-29 20:23:35,383] DEBUG django.db.backends.schema ALTER TABLE "new__scheduling_booking" RENAME TO "scheduling_booking"; (params ())
[2025-09-29 20:23:35,384] DEBUG django.db.backends (0.000) ALTER TABLE "new__scheduling_booking" RENAME TO "scheduling_booking"; args=(); alias=default
[2025-09-29 20:23:35,385] DEBUG django.db.backends.schema CREATE TABLE "new__scheduling_employee" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "home_address" varchar(255) NOT NULL); (params None)
[2025-09-29 20:23:35,386] DEBUG django.db.backends (0.000) CREATE TABLE "new__scheduling_employee" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "home_address" varchar(255) NOT NULL); args=None; alias=default
[2025-09-29 20:23:35,386] DEBUG django.db.backends.schema INSERT INTO "new__scheduling_employee" ("id", "name", "home_address") SELECT "id", "name", "home_address" FROM "scheduling_employee"; (params ())
[2025-09-29 20:23:35,386] DEBUG django.db.backends (0.000) INSERT INTO "new__scheduling_employee" ("id", "name", "home_address") SELECT "id", "name", "home_address" FROM "scheduling_employee"; args=(); alias=default
[2025-09-29 20:23:35,386] DEBUG django.db.backends.schema DROP TABLE "scheduling_employee"; (params ())
[2025-09-29 20:23:35,386] DEBUG django.db.backends (0.000) DROP TABLE "scheduling_employee"; args=(); alias=default
[2025-09-29 20:23:35,386] DEBUG django.db.backends.schema ALTER TABLE "new__scheduling_employee" RENAME TO "scheduling_employee"; (params ())
[2025-09-29 20:23:35,387] DEBUG django.db.backends (0.000) ALTER TABLE "new__scheduling_employee" RENAME TO "scheduling_employee"; args=(); alias=default
[2025-09-29 20:23:35,388] DEBUG django.db.backends.schema DROP TABLE "scheduling_jobassignment"; (params ())
[2025-09-29 20:23:35,388] DEBUG django.db.backends (0.000) DROP TABLE "scheduling_jobassignment"; args=(); alias=default
[2025-09-29 20:23:35,388] DEBUG django.db.backends.schema DROP TABLE "scheduling_timeslot"; (params ())
[2025-09-29 20:23:35,389] DEBUG django.db.backends (0.000) DROP TABLE "scheduling_timeslot"; args=(); alias=default
[2025-09-29 20:23:35,389] DEBUG django.db.backends.schema DROP TABLE "scheduling_servicecategory"; (params ())
[2025-09-29 20:23:35,389] DEBUG django.db.backends (0.000) DROP TABLE "scheduling_servicecategory"; args=(); alias=default
[2025-09-29 20:23:35,389] DEBUG django.db.backends.schema DROP TABLE "scheduling_employee"; (params ())
[2025-09-29 20:23:35,389] DEBUG django.db.backends (0.000) DROP TABLE "scheduling_employee"; args=(); alias=default
[2025-09-29 20:23:35,390] DEBUG django.db.backends.schema DROP TABLE "scheduling_booking"; (params ())
[2025-09-29 20:23:35,390] DEBUG django.db.backends (0.000) DROP TABLE "scheduling_booking"; args=(); alias=default
[2025-09-29 20:23:35,390] DEBUG django.db.backends (0.000) PRAGMA foreign_key_check; args=None; alias=default
[2025-09-29 20:23:35,396] DEBUG django.db.backends (0.016) COMMIT; args=None; alias=default
[2025-09-29 20:23:35,397] DEBUG django.db.backends (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
[2025-09-29 20:23:35,397] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-29 20:23:35,398] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-29 20:23:35,399] DEBUG django.db.backends (0.000) DELETE FROM "django_migrations" WHERE ("django_migrations"."app" = 'scheduling' AND "django_migrations"."name" = '0001_initial'); args=('scheduling', '0001_initial'); alias=default
[2025-09-29 20:23:35,402] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-29 20:23:35,404] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-29 20:23:35,404] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-29 20:23:35,405] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
[2025-09-29 20:23:35,406] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
[2025-09-29 20:23:35,408] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
[2025-09-29 20:23:35,409] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
[2025-09-29 20:23:35,410] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
[2025-09-29 20:23:35,411] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
[2025-09-29 20:23:35,412] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
[2025-09-29 20:23:35,413] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
[2025-09-29 20:23:35,415] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
[2025-09-29 20:23:35,416] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
[2025-09-29 20:23:35,416] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
[2025-09-29 20:23:35,417] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
[2025-09-29 20:23:35,418] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
[2025-09-29 20:23:35,418] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
[2025-09-29 20:23:35,419] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
[2025-09-29 20:23:35,420] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
[2025-09-29 20:23:35,421] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
[2025-09-29 20:23:35,421] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
[2025-09-29 20:23:35,422] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'customers'; args=('customers',); alias=default
[2025-09-29 20:23:35,422] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'customers' AND "django_content_type"."model" = 'registeredcustomer') LIMIT 21; args=('customers', 'registeredcustomer'); alias=default
[2025-09-29 20:23:35,424] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(7,); alias=default
[2025-09-29 20:23:35,425] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'customers'; args=('customers',); alias=default
[2025-09-29 20:23:36,044] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-29 20:23:36,050] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-29 20:23:36,684] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-29 20:23:36,687] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-29 20:23:36,688] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-29 20:23:36,688] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-29 20:23:36,695] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-29 20:23:36,695] DEBUG django.db.backends (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
[2025-09-29 20:23:36,695] DEBUG django.db.backends (0.000) PRAGMA foreign_keys; args=None; alias=default
[2025-09-29 20:23:36,695] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-29 20:23:36,696] DEBUG django.db.backends.schema CREATE TABLE "scheduling_booking" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "customer_name" varchar(255) NOT NULL, "customer_address" varchar(255) NOT NULL, "date" date NOT NULL); (params None)
[2025-09-29 20:23:36,704] DEBUG django.db.backends (0.000) CREATE TABLE "scheduling_booking" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "customer_name" varchar(255) NOT NULL, "customer_address" varchar(255) NOT NULL, "date" date NOT NULL); args=None; alias=default
[2025-09-29 20:23:36,706] DEBUG django.db.backends.schema CREATE TABLE "scheduling_employee" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "home_address" varchar(255) NOT NULL); (params None)
[2025-09-29 20:23:36,707] DEBUG django.db.backends (0.000) CREATE TABLE "scheduling_employee" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "home_address" varchar(255) NOT NULL); args=None; alias=default
[2025-09-29 20:23:36,708] DEBUG django.db.backends.schema CREATE TABLE "scheduling_servicecategory" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL UNIQUE); (params None)
[2025-09-29 20:23:36,708] DEBUG django.db.backends (0.000) CREATE TABLE "scheduling_servicecategory" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL UNIQUE); args=None; alias=default
[2025-09-29 20:23:36,709] DEBUG django.db.backends.schema CREATE TABLE "scheduling_timeslot" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "label" varchar(20) NOT NULL UNIQUE); (params None)
[2025-09-29 20:23:36,709] DEBUG django.db.backends (0.000) CREATE TABLE "scheduling_timeslot" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "label" varchar(20) NOT NULL UNIQUE); args=None; alias=default
[2025-09-29 20:23:36,713] DEBUG django.db.backends.schema CREATE TABLE "scheduling_jobassignment" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "jobsite_address" varchar(255) NOT NULL, "booking_id" bigint NOT NULL REFERENCES "scheduling_booking" ("id") DEFERRABLE INITIALLY DEFERRED, "employee_id" bigint NOT NULL REFERENCES "scheduling_employee" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
[2025-09-29 20:23:36,713] DEBUG django.db.backends (0.000) CREATE TABLE "scheduling_jobassignment" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "jobsite_address" varchar(255) NOT NULL, "booking_id" bigint NOT NULL REFERENCES "scheduling_booking" ("id") DEFERRABLE INITIALLY DEFERRED, "employee_id" bigint NOT NULL REFERENCES "scheduling_employee" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
[2025-09-29 20:23:36,716] DEBUG django.db.backends.schema CREATE TABLE "new__scheduling_employee" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "home_address" varchar(255) NOT NULL, "service_category_id" bigint NOT NULL REFERENCES "scheduling_servicecategory" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
[2025-09-29 20:23:36,716] DEBUG django.db.backends (0.000) CREATE TABLE "new__scheduling_employee" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "home_address" varchar(255) NOT NULL, "service_category_id" bigint NOT NULL REFERENCES "scheduling_servicecategory" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
[2025-09-29 20:23:36,716] DEBUG django.db.backends.schema INSERT INTO "new__scheduling_employee" ("id", "name", "home_address", "service_category_id") SELECT "id", "name", "home_address", NULL FROM "scheduling_employee"; (params ())
[2025-09-29 20:23:36,716] DEBUG django.db.backends (0.000) INSERT INTO "new__scheduling_employee" ("id", "name", "home_address", "service_category_id") SELECT "id", "name", "home_address", NULL FROM "scheduling_employee"; args=(); alias=default
[2025-09-29 20:23:36,716] DEBUG django.db.backends.schema DROP TABLE "scheduling_employee"; (params ())
[2025-09-29 20:23:36,717] DEBUG django.db.backends (0.000) DROP TABLE "scheduling_employee"; args=(); alias=default
[2025-09-29 20:23:36,717] DEBUG django.db.backends.schema ALTER TABLE "new__scheduling_employee" RENAME TO "scheduling_employee"; (params ())
[2025-09-29 20:23:36,718] DEBUG django.db.backends (0.000) ALTER TABLE "new__scheduling_employee" RENAME TO "scheduling_employee"; args=(); alias=default
[2025-09-29 20:23:36,718] DEBUG django.db.backends.schema CREATE INDEX "scheduling_jobassignment_booking_id_728c9ae6" ON "scheduling_jobassignment" ("booking_id"); (params ())
[2025-09-29 20:23:36,718] DEBUG django.db.backends (0.000) CREATE INDEX "scheduling_jobassignment_booking_id_728c9ae6" ON "scheduling_jobassignment" ("booking_id"); args=(); alias=default
[2025-09-29 20:23:36,718] DEBUG django.db.backends.schema CREATE INDEX "scheduling_jobassignment_employee_id_3167ac53" ON "scheduling_jobassignment" ("employee_id"); (params ())
[2025-09-29 20:23:36,718] DEBUG django.db.backends (0.000) CREATE INDEX "scheduling_jobassignment_employee_id_3167ac53" ON "scheduling_jobassignment" ("employee_id"); args=(); alias=default
[2025-09-29 20:23:36,718] DEBUG django.db.backends.schema CREATE INDEX "scheduling_employee_service_category_id_5a713c42" ON "scheduling_employee" ("service_category_id"); (params ())
[2025-09-29 20:23:36,718] DEBUG django.db.backends (0.000) CREATE INDEX "scheduling_employee_service_category_id_5a713c42" ON "scheduling_employee" ("service_category_id"); args=(); alias=default
[2025-09-29 20:23:36,721] DEBUG django.db.backends.schema CREATE TABLE "new__scheduling_booking" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "customer_name" varchar(255) NOT NULL, "customer_address" varchar(255) NOT NULL, "date" date NOT NULL, "service_category_id" bigint NOT NULL REFERENCES "scheduling_servicecategory" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
[2025-09-29 20:23:36,721] DEBUG django.db.backends (0.000) CREATE TABLE "new__scheduling_booking" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "customer_name" varchar(255) NOT NULL, "customer_address" varchar(255) NOT NULL, "date" date NOT NULL, "service_category_id" bigint NOT NULL REFERENCES "scheduling_servicecategory" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
[2025-09-29 20:23:36,721] DEBUG django.db.backends.schema INSERT INTO "new__scheduling_booking" ("id", "customer_name", "customer_address", "date", "service_category_id") SELECT "id", "customer_name", "customer_address", "date", NULL FROM "scheduling_booking"; (params ())
[2025-09-29 20:23:36,722] DEBUG django.db.backends (0.000) INSERT INTO "new__scheduling_booking" ("id", "customer_name", "customer_address", "date", "service_category_id") SELECT "id", "customer_name", "customer_address", "date", NULL FROM "scheduling_booking"; args=(); alias=default
[2025-09-29 20:23:36,722] DEBUG django.db.backends.schema DROP TABLE "scheduling_booking"; (params ())
[2025-09-29 20:23:36,722] DEBUG django.db.backends (0.000) DROP TABLE "scheduling_booking"; args=(); alias=default
[2025-09-29 20:23:36,722] DEBUG django.db.backends.schema ALTER TABLE "new__scheduling_booking" RENAME TO "scheduling_booking"; (params ())
[2025-09-29 20:23:36,723] DEBUG django.db.backends (0.000) ALTER TABLE "new__scheduling_booking" RENAME TO "scheduling_booking"; args=(); alias=default
[2025-09-29 20:23:36,723] DEBUG django.db.backends.schema CREATE INDEX "scheduling_booking_service_category_id_6691953b" ON "scheduling_booking" ("service_category_id"); (params ())
[2025-09-29 20:23:36,723] DEBUG django.db.backends (0.000) CREATE INDEX "scheduling_booking_service_category_id_6691953b" ON "scheduling_booking" ("service_category_id"); args=(); alias=default
[2025-09-29 20:23:36,727] DEBUG django.db.backends.schema CREATE TABLE "new__scheduling_booking" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "customer_name" varchar(255) NOT NULL, "customer_address" varchar(255) NOT NULL, "date" date NOT NULL, "service_category_id" bigint NOT NULL REFERENCES "scheduling_servicecategory" ("id") DEFERRABLE INITIALLY DEFERRED, "time_slot_id" bigint NOT NULL REFERENCES "scheduling_timeslot" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
[2025-09-29 20:23:36,728] DEBUG django.db.backends (0.000) CREATE TABLE "new__scheduling_booking" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "customer_name" varchar(255) NOT NULL, "customer_address" varchar(255) NOT NULL, "date" date NOT NULL, "service_category_id" bigint NOT NULL REFERENCES "scheduling_servicecategory" ("id") DEFERRABLE INITIALLY DEFERRED, "time_slot_id" bigint NOT NULL REFERENCES "scheduling_timeslot" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
[2025-09-29 20:23:36,728] DEBUG django.db.backends.schema INSERT INTO "new__scheduling_booking" ("id", "customer_name", "customer_address", "date", "service_category_id", "time_slot_id") SELECT "id", "customer_name", "customer_address", "date", "service_category_id", NULL FROM "scheduling_booking"; (params ())
[2025-09-29 20:23:36,728] DEBUG django.db.backends (0.000) INSERT INTO "new__scheduling_booking" ("id", "customer_name", "customer_address", "date", "service_category_id", "time_slot_id") SELECT "id", "customer_name", "customer_address", "date", "service_category_id", NULL FROM "scheduling_booking"; args=(); alias=default
[2025-09-29 20:23:36,728] DEBUG django.db.backends.schema DROP TABLE "scheduling_booking"; (params ())
[2025-09-29 20:23:36,728] DEBUG django.db.backends (0.000) DROP TABLE "scheduling_booking"; args=(); alias=default
[2025-09-29 20:23:36,728] DEBUG django.db.backends.schema ALTER TABLE "new__scheduling_booking" RENAME TO "scheduling_booking"; (params ())
[2025-09-29 20:23:36,729] DEBUG django.db.backends (0.000) ALTER TABLE "new__scheduling_booking" RENAME TO "scheduling_booking"; args=(); alias=default
[2025-09-29 20:23:36,730] DEBUG django.db.backends.schema CREATE INDEX "scheduling_booking_service_category_id_6691953b" ON "scheduling_booking" ("service_category_id"); (params ())
[2025-09-29 20:23:36,730] DEBUG django.db.backends (0.000) CREATE INDEX "scheduling_booking_service_category_id_6691953b" ON "scheduling_booking" ("service_category_id"); args=(); alias=default
[2025-09-29 20:23:36,730] DEBUG django.db.backends.schema CREATE INDEX "scheduling_booking_time_slot_id_d16801ef" ON "scheduling_booking" ("time_slot_id"); (params ())
[2025-09-29 20:23:36,730] DEBUG django.db.backends (0.000) CREATE INDEX "scheduling_booking_time_slot_id_d16801ef" ON "scheduling_booking" ("time_slot_id"); args=(); alias=default
[2025-09-29 20:23:36,730] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-29 20:23:36,731] DEBUG django.db.backends (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('scheduling', '0001_initial', '2025-09-29 18:23:36.731286') RETURNING "django_migrations"."id"; args=('scheduling', '0001_initial', '2025-09-29 18:23:36.731286'); alias=default
[2025-09-29 20:23:36,731] DEBUG django.db.backends (0.000) PRAGMA foreign_key_check; args=None; alias=default
[2025-09-29 20:23:36,737] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-29 20:23:36,737] DEBUG django.db.backends (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
[2025-09-29 20:23:36,738] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-29 20:23:36,739] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-29 20:23:36,740] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
[2025-09-29 20:23:36,741] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
[2025-09-29 20:23:36,745] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
[2025-09-29 20:23:36,746] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
[2025-09-29 20:23:36,747] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
[2025-09-29 20:23:36,748] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
[2025-09-29 20:23:36,748] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
[2025-09-29 20:23:36,749] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
[2025-09-29 20:23:36,750] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
[2025-09-29 20:23:36,750] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
[2025-09-29 20:23:36,751] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
[2025-09-29 20:23:36,752] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
[2025-09-29 20:23:36,752] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
[2025-09-29 20:23:36,753] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
[2025-09-29 20:23:36,753] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
[2025-09-29 20:23:36,754] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
[2025-09-29 20:23:36,755] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
[2025-09-29 20:23:36,755] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
[2025-09-29 20:23:36,756] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'customers'; args=('customers',); alias=default
[2025-09-29 20:23:36,756] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'customers' AND "django_content_type"."model" = 'registeredcustomer') LIMIT 21; args=('customers', 'registeredcustomer'); alias=default
[2025-09-29 20:23:36,757] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(7,); alias=default
[2025-09-29 20:23:36,758] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'customers'; args=('customers',); alias=default
[2025-09-29 20:23:36,759] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'scheduling'; args=('scheduling',); alias=default
[2025-09-29 20:23:36,760] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'jobassignment') LIMIT 21; args=('scheduling', 'jobassignment'); alias=default
[2025-09-29 20:23:36,762] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'employee') LIMIT 21; args=('scheduling', 'employee'); alias=default
[2025-09-29 20:23:36,763] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'booking') LIMIT 21; args=('scheduling', 'booking'); alias=default
[2025-09-29 20:23:36,764] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'timeslot') LIMIT 21; args=('scheduling', 'timeslot'); alias=default
[2025-09-29 20:23:36,765] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'servicecategory') LIMIT 21; args=('scheduling', 'servicecategory'); alias=default
[2025-09-29 20:23:36,766] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 9, 10, 11, 12) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 9, 10, 11, 12); alias=default
[2025-09-29 20:23:36,767] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'scheduling'; args=('scheduling',); alias=default
[2025-09-30 15:16:36,540] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-30 15:16:36,644] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-30 15:16:36,647] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-30 15:17:01,290] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-30 15:17:01,290] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-30 15:17:11,518] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-30 15:17:11,520] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-30 15:17:11,522] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-30 15:17:11,522] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-30 15:17:11,530] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-30 15:17:11,531] DEBUG django.db.backends (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
[2025-09-30 15:17:11,531] DEBUG django.db.backends (0.000) PRAGMA foreign_keys; args=None; alias=default
[2025-09-30 15:17:11,531] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 15:17:11,531] DEBUG django.db.backends.schema CREATE TABLE "scheduling_booking" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "customer_name" varchar(255) NOT NULL, "customer_address" varchar(255) NOT NULL, "date" date NOT NULL); (params None)
[2025-09-30 15:17:11,534] DEBUG django.db.backends (0.016) CREATE TABLE "scheduling_booking" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "customer_name" varchar(255) NOT NULL, "customer_address" varchar(255) NOT NULL, "date" date NOT NULL); args=None; alias=default
[2025-09-30 15:17:11,535] DEBUG django.db.backends.schema CREATE TABLE "scheduling_employee" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "home_address" varchar(255) NOT NULL); (params None)
[2025-09-30 15:17:11,535] DEBUG django.db.backends (0.000) CREATE TABLE "scheduling_employee" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "home_address" varchar(255) NOT NULL); args=None; alias=default
[2025-09-30 15:17:11,536] DEBUG django.db.backends.schema CREATE TABLE "scheduling_servicecategory" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL UNIQUE); (params None)
[2025-09-30 15:17:11,536] DEBUG django.db.backends (0.000) CREATE TABLE "scheduling_servicecategory" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL UNIQUE); args=None; alias=default
[2025-09-30 15:17:11,537] DEBUG django.db.backends.schema CREATE TABLE "scheduling_timeslot" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "label" varchar(20) NOT NULL UNIQUE); (params None)
[2025-09-30 15:17:11,538] DEBUG django.db.backends (0.000) CREATE TABLE "scheduling_timeslot" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "label" varchar(20) NOT NULL UNIQUE); args=None; alias=default
[2025-09-30 15:17:11,541] DEBUG django.db.backends.schema CREATE TABLE "scheduling_jobassignment" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "jobsite_address" varchar(255) NOT NULL, "booking_id" bigint NOT NULL REFERENCES "scheduling_booking" ("id") DEFERRABLE INITIALLY DEFERRED, "employee_id" bigint NOT NULL REFERENCES "scheduling_employee" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
[2025-09-30 15:17:11,542] DEBUG django.db.backends (0.000) CREATE TABLE "scheduling_jobassignment" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "jobsite_address" varchar(255) NOT NULL, "booking_id" bigint NOT NULL REFERENCES "scheduling_booking" ("id") DEFERRABLE INITIALLY DEFERRED, "employee_id" bigint NOT NULL REFERENCES "scheduling_employee" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
[2025-09-30 15:17:11,545] DEBUG django.db.backends.schema CREATE TABLE "new__scheduling_employee" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "home_address" varchar(255) NOT NULL, "service_category_id" bigint NOT NULL REFERENCES "scheduling_servicecategory" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
[2025-09-30 15:17:11,545] DEBUG django.db.backends (0.000) CREATE TABLE "new__scheduling_employee" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "name" varchar(100) NOT NULL, "home_address" varchar(255) NOT NULL, "service_category_id" bigint NOT NULL REFERENCES "scheduling_servicecategory" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
[2025-09-30 15:17:11,545] DEBUG django.db.backends.schema INSERT INTO "new__scheduling_employee" ("id", "name", "home_address", "service_category_id") SELECT "id", "name", "home_address", NULL FROM "scheduling_employee"; (params ())
[2025-09-30 15:17:11,545] DEBUG django.db.backends (0.000) INSERT INTO "new__scheduling_employee" ("id", "name", "home_address", "service_category_id") SELECT "id", "name", "home_address", NULL FROM "scheduling_employee"; args=(); alias=default
[2025-09-30 15:17:11,545] DEBUG django.db.backends.schema DROP TABLE "scheduling_employee"; (params ())
[2025-09-30 15:17:11,546] DEBUG django.db.backends (0.000) DROP TABLE "scheduling_employee"; args=(); alias=default
[2025-09-30 15:17:11,546] DEBUG django.db.backends.schema ALTER TABLE "new__scheduling_employee" RENAME TO "scheduling_employee"; (params ())
[2025-09-30 15:17:11,547] DEBUG django.db.backends (0.000) ALTER TABLE "new__scheduling_employee" RENAME TO "scheduling_employee"; args=(); alias=default
[2025-09-30 15:17:11,548] DEBUG django.db.backends.schema CREATE INDEX "scheduling_jobassignment_booking_id_728c9ae6" ON "scheduling_jobassignment" ("booking_id"); (params ())
[2025-09-30 15:17:11,548] DEBUG django.db.backends (0.000) CREATE INDEX "scheduling_jobassignment_booking_id_728c9ae6" ON "scheduling_jobassignment" ("booking_id"); args=(); alias=default
[2025-09-30 15:17:11,548] DEBUG django.db.backends.schema CREATE INDEX "scheduling_jobassignment_employee_id_3167ac53" ON "scheduling_jobassignment" ("employee_id"); (params ())
[2025-09-30 15:17:11,549] DEBUG django.db.backends (0.000) CREATE INDEX "scheduling_jobassignment_employee_id_3167ac53" ON "scheduling_jobassignment" ("employee_id"); args=(); alias=default
[2025-09-30 15:17:11,549] DEBUG django.db.backends.schema CREATE INDEX "scheduling_employee_service_category_id_5a713c42" ON "scheduling_employee" ("service_category_id"); (params ())
[2025-09-30 15:17:11,549] DEBUG django.db.backends (0.000) CREATE INDEX "scheduling_employee_service_category_id_5a713c42" ON "scheduling_employee" ("service_category_id"); args=(); alias=default
[2025-09-30 15:17:11,553] DEBUG django.db.backends.schema CREATE TABLE "new__scheduling_booking" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "customer_name" varchar(255) NOT NULL, "customer_address" varchar(255) NOT NULL, "date" date NOT NULL, "service_category_id" bigint NOT NULL REFERENCES "scheduling_servicecategory" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
[2025-09-30 15:17:11,553] DEBUG django.db.backends (0.000) CREATE TABLE "new__scheduling_booking" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "customer_name" varchar(255) NOT NULL, "customer_address" varchar(255) NOT NULL, "date" date NOT NULL, "service_category_id" bigint NOT NULL REFERENCES "scheduling_servicecategory" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
[2025-09-30 15:17:11,553] DEBUG django.db.backends.schema INSERT INTO "new__scheduling_booking" ("id", "customer_name", "customer_address", "date", "service_category_id") SELECT "id", "customer_name", "customer_address", "date", NULL FROM "scheduling_booking"; (params ())
[2025-09-30 15:17:11,554] DEBUG django.db.backends (0.000) INSERT INTO "new__scheduling_booking" ("id", "customer_name", "customer_address", "date", "service_category_id") SELECT "id", "customer_name", "customer_address", "date", NULL FROM "scheduling_booking"; args=(); alias=default
[2025-09-30 15:17:11,554] DEBUG django.db.backends.schema DROP TABLE "scheduling_booking"; (params ())
[2025-09-30 15:17:11,554] DEBUG django.db.backends (0.000) DROP TABLE "scheduling_booking"; args=(); alias=default
[2025-09-30 15:17:11,554] DEBUG django.db.backends.schema ALTER TABLE "new__scheduling_booking" RENAME TO "scheduling_booking"; (params ())
[2025-09-30 15:17:11,555] DEBUG django.db.backends (0.000) ALTER TABLE "new__scheduling_booking" RENAME TO "scheduling_booking"; args=(); alias=default
[2025-09-30 15:17:11,555] DEBUG django.db.backends.schema CREATE INDEX "scheduling_booking_service_category_id_6691953b" ON "scheduling_booking" ("service_category_id"); (params ())
[2025-09-30 15:17:11,555] DEBUG django.db.backends (0.000) CREATE INDEX "scheduling_booking_service_category_id_6691953b" ON "scheduling_booking" ("service_category_id"); args=(); alias=default
[2025-09-30 15:17:11,557] DEBUG django.db.backends.schema CREATE TABLE "new__scheduling_booking" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "customer_name" varchar(255) NOT NULL, "customer_address" varchar(255) NOT NULL, "date" date NOT NULL, "service_category_id" bigint NOT NULL REFERENCES "scheduling_servicecategory" ("id") DEFERRABLE INITIALLY DEFERRED, "time_slot_id" bigint NOT NULL REFERENCES "scheduling_timeslot" ("id") DEFERRABLE INITIALLY DEFERRED); (params None)
[2025-09-30 15:17:11,557] DEBUG django.db.backends (0.000) CREATE TABLE "new__scheduling_booking" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "customer_name" varchar(255) NOT NULL, "customer_address" varchar(255) NOT NULL, "date" date NOT NULL, "service_category_id" bigint NOT NULL REFERENCES "scheduling_servicecategory" ("id") DEFERRABLE INITIALLY DEFERRED, "time_slot_id" bigint NOT NULL REFERENCES "scheduling_timeslot" ("id") DEFERRABLE INITIALLY DEFERRED); args=None; alias=default
[2025-09-30 15:17:11,557] DEBUG django.db.backends.schema INSERT INTO "new__scheduling_booking" ("id", "customer_name", "customer_address", "date", "service_category_id", "time_slot_id") SELECT "id", "customer_name", "customer_address", "date", "service_category_id", NULL FROM "scheduling_booking"; (params ())
[2025-09-30 15:17:11,557] DEBUG django.db.backends (0.000) INSERT INTO "new__scheduling_booking" ("id", "customer_name", "customer_address", "date", "service_category_id", "time_slot_id") SELECT "id", "customer_name", "customer_address", "date", "service_category_id", NULL FROM "scheduling_booking"; args=(); alias=default
[2025-09-30 15:17:11,557] DEBUG django.db.backends.schema DROP TABLE "scheduling_booking"; (params ())
[2025-09-30 15:17:11,557] DEBUG django.db.backends (0.000) DROP TABLE "scheduling_booking"; args=(); alias=default
[2025-09-30 15:17:11,557] DEBUG django.db.backends.schema ALTER TABLE "new__scheduling_booking" RENAME TO "scheduling_booking"; (params ())
[2025-09-30 15:17:11,563] DEBUG django.db.backends (0.000) ALTER TABLE "new__scheduling_booking" RENAME TO "scheduling_booking"; args=(); alias=default
[2025-09-30 15:17:11,563] DEBUG django.db.backends.schema CREATE INDEX "scheduling_booking_service_category_id_6691953b" ON "scheduling_booking" ("service_category_id"); (params ())
[2025-09-30 15:17:11,563] DEBUG django.db.backends (0.000) CREATE INDEX "scheduling_booking_service_category_id_6691953b" ON "scheduling_booking" ("service_category_id"); args=(); alias=default
[2025-09-30 15:17:11,564] DEBUG django.db.backends.schema CREATE INDEX "scheduling_booking_time_slot_id_d16801ef" ON "scheduling_booking" ("time_slot_id"); (params ())
[2025-09-30 15:17:11,564] DEBUG django.db.backends (0.000) CREATE INDEX "scheduling_booking_time_slot_id_d16801ef" ON "scheduling_booking" ("time_slot_id"); args=(); alias=default
[2025-09-30 15:17:11,564] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-30 15:17:11,565] DEBUG django.db.backends (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('scheduling', '0001_initial', '2025-09-30 13:17:11.564205') RETURNING "django_migrations"."id"; args=('scheduling', '0001_initial', '2025-09-30 13:17:11.564205'); alias=default
[2025-09-30 15:17:11,565] DEBUG django.db.backends (0.000) PRAGMA foreign_key_check; args=None; alias=default
[2025-09-30 15:17:11,565] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-30 15:17:11,565] DEBUG django.db.backends (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
[2025-09-30 15:17:11,565] DEBUG django.db.backends (0.000) PRAGMA foreign_keys = OFF; args=None; alias=default
[2025-09-30 15:17:11,565] DEBUG django.db.backends (0.000) PRAGMA foreign_keys; args=None; alias=default
[2025-09-30 15:17:11,565] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 15:17:11,565] DEBUG django.db.backends.schema CREATE TABLE "new__scheduling_employee" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "home_address" varchar(255) NOT NULL, "service_category_id" bigint NOT NULL REFERENCES "scheduling_servicecategory" ("id") DEFERRABLE INITIALLY DEFERRED, "name" varchar(255) NOT NULL); (params None)
[2025-09-30 15:17:11,565] DEBUG django.db.backends (0.000) CREATE TABLE "new__scheduling_employee" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "home_address" varchar(255) NOT NULL, "service_category_id" bigint NOT NULL REFERENCES "scheduling_servicecategory" ("id") DEFERRABLE INITIALLY DEFERRED, "name" varchar(255) NOT NULL); args=None; alias=default
[2025-09-30 15:17:11,565] DEBUG django.db.backends.schema INSERT INTO "new__scheduling_employee" ("id", "home_address", "service_category_id", "name") SELECT "id", "home_address", "service_category_id", "name" FROM "scheduling_employee"; (params ())
[2025-09-30 15:17:11,565] DEBUG django.db.backends (0.000) INSERT INTO "new__scheduling_employee" ("id", "home_address", "service_category_id", "name") SELECT "id", "home_address", "service_category_id", "name" FROM "scheduling_employee"; args=(); alias=default
[2025-09-30 15:17:11,565] DEBUG django.db.backends.schema DROP TABLE "scheduling_employee"; (params ())
[2025-09-30 15:17:11,565] DEBUG django.db.backends (0.000) DROP TABLE "scheduling_employee"; args=(); alias=default
[2025-09-30 15:17:11,565] DEBUG django.db.backends.schema ALTER TABLE "new__scheduling_employee" RENAME TO "scheduling_employee"; (params ())
[2025-09-30 15:17:11,565] DEBUG django.db.backends (0.000) ALTER TABLE "new__scheduling_employee" RENAME TO "scheduling_employee"; args=(); alias=default
[2025-09-30 15:17:11,565] DEBUG django.db.backends.schema CREATE INDEX "scheduling_employee_service_category_id_5a713c42" ON "scheduling_employee" ("service_category_id"); (params ())
[2025-09-30 15:17:11,565] DEBUG django.db.backends (0.000) CREATE INDEX "scheduling_employee_service_category_id_5a713c42" ON "scheduling_employee" ("service_category_id"); args=(); alias=default
[2025-09-30 15:17:11,580] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-30 15:17:11,580] DEBUG django.db.backends (0.000) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('scheduling', '0002_alter_employee_name', '2025-09-30 13:17:11.580071') RETURNING "django_migrations"."id"; args=('scheduling', '0002_alter_employee_name', '2025-09-30 13:17:11.580071'); alias=default
[2025-09-30 15:17:11,581] DEBUG django.db.backends (0.000) PRAGMA foreign_key_check; args=None; alias=default
[2025-09-30 15:17:11,586] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-30 15:17:11,586] DEBUG django.db.backends (0.000) PRAGMA foreign_keys = ON; args=None; alias=default
[2025-09-30 15:17:11,587] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-30 15:17:11,587] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-30 15:17:11,598] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
[2025-09-30 15:17:11,600] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
[2025-09-30 15:17:11,602] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
[2025-09-30 15:17:11,602] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
[2025-09-30 15:17:11,602] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
[2025-09-30 15:17:11,602] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
[2025-09-30 15:17:11,602] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
[2025-09-30 15:17:11,602] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
[2025-09-30 15:17:11,602] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
[2025-09-30 15:17:11,602] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
[2025-09-30 15:17:11,602] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
[2025-09-30 15:17:11,602] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
[2025-09-30 15:17:11,602] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
[2025-09-30 15:17:11,602] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
[2025-09-30 15:17:11,602] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
[2025-09-30 15:17:11,602] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
[2025-09-30 15:17:11,614] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
[2025-09-30 15:17:11,615] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
[2025-09-30 15:17:11,615] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'customers'; args=('customers',); alias=default
[2025-09-30 15:17:11,615] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'customers' AND "django_content_type"."model" = 'registeredcustomer') LIMIT 21; args=('customers', 'registeredcustomer'); alias=default
[2025-09-30 15:17:11,619] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(7,); alias=default
[2025-09-30 15:17:11,620] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'customers'; args=('customers',); alias=default
[2025-09-30 15:17:11,621] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'scheduling'; args=('scheduling',); alias=default
[2025-09-30 15:17:11,621] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 15:17:11,622] DEBUG django.db.backends (0.000) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('scheduling', 'booking'), ('scheduling', 'employee'), ('scheduling', 'servicecategory'), ('scheduling', 'timeslot'), ('scheduling', 'jobassignment') RETURNING "django_content_type"."id"; args=('scheduling', 'booking', 'scheduling', 'employee', 'scheduling', 'servicecategory', 'scheduling', 'timeslot', 'scheduling', 'jobassignment'); alias=default
[2025-09-30 15:17:11,623] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-30 15:17:11,623] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'booking') LIMIT 21; args=('scheduling', 'booking'); alias=default
[2025-09-30 15:17:11,623] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'employee') LIMIT 21; args=('scheduling', 'employee'); alias=default
[2025-09-30 15:17:11,629] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'servicecategory') LIMIT 21; args=('scheduling', 'servicecategory'); alias=default
[2025-09-30 15:17:11,630] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'timeslot') LIMIT 21; args=('scheduling', 'timeslot'); alias=default
[2025-09-30 15:17:11,631] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'jobassignment') LIMIT 21; args=('scheduling', 'jobassignment'); alias=default
[2025-09-30 15:17:11,633] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 9, 10, 11, 12) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 9, 10, 11, 12); alias=default
[2025-09-30 15:17:11,634] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 15:17:11,636] DEBUG django.db.backends (0.000) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add booking', 8, 'add_booking'), ('Can change booking', 8, 'change_booking'), ('Can delete booking', 8, 'delete_booking'), ('Can view booking', 8, 'view_booking'), ('Can add employee', 9, 'add_employee'), ('Can change employee', 9, 'change_employee'), ('Can delete employee', 9, 'delete_employee'), ('Can view employee', 9, 'view_employee'), ('Can add service category', 10, 'add_servicecategory'), ('Can change service category', 10, 'change_servicecategory'), ('Can delete service category', 10, 'delete_servicecategory'), ('Can view service category', 10, 'view_servicecategory'), ('Can add time slot', 11, 'add_timeslot'), ('Can change time slot', 11, 'change_timeslot'), ('Can delete time slot', 11, 'delete_timeslot'), ('Can view time slot', 11, 'view_timeslot'), ('Can add job assignment', 12, 'add_jobassignment'), ('Can change job assignment', 12, 'change_jobassignment'), ('Can delete job assignment', 12, 'delete_jobassignment'), ('Can view job assignment', 12, 'view_jobassignment') RETURNING "auth_permission"."id"; args=('Can add booking', 8, 'add_booking', 'Can change booking', 8, 'change_booking', 'Can delete booking', 8, 'delete_booking', 'Can view booking', 8, 'view_booking', 'Can add employee', 9, 'add_employee', 'Can change employee', 9, 'change_employee', 'Can delete employee', 9, 'delete_employee', 'Can view employee', 9, 'view_employee', 'Can add service category', 10, 'add_servicecategory', 'Can change service category', 10, 'change_servicecategory', 'Can delete service category', 10, 'delete_servicecategory', 'Can view service category', 10, 'view_servicecategory', 'Can add time slot', 11, 'add_timeslot', 'Can change time slot', 11, 'change_timeslot', 'Can delete time slot', 11, 'delete_timeslot', 'Can view time slot', 11, 'view_timeslot', 'Can add job assignment', 12, 'add_jobassignment', 'Can change job assignment', 12, 'change_jobassignment', 'Can delete job assignment', 12, 'delete_jobassignment', 'Can view job assignment', 12, 'view_jobassignment'); alias=default
[2025-09-30 15:17:11,638] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-30 15:17:11,638] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'scheduling'; args=('scheduling',); alias=default
[2025-09-30 15:17:20,102] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-30 15:17:20,174] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-30 15:17:20,177] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-30 15:17:26,049] INFO core.views Home page accessed
[2025-09-30 15:17:26,083] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-30 13:17:26.067269' AND "django_session"."session_key" = 'p1smpq0b7bj0xetnmhcgx0gsq8jz0871') LIMIT 21; args=('2025-09-30 13:17:26.067269', 'p1smpq0b7bj0xetnmhcgx0gsq8jz0871'); alias=default
[2025-09-30 15:17:26,089] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-30 15:17:26,134] INFO django.server "GET / HTTP/1.1" 200 2285
[2025-09-30 15:17:26,163] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 304 0
[2025-09-30 15:17:26,552] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-30 15:17:26,587] WARNING django.request Not Found: /favicon.ico
[2025-09-30 15:17:26,607] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2466
[2025-09-30 15:17:59,156] WARNING django.request Not Found: /schedule/search/date
[2025-09-30 15:17:59,160] WARNING django.server "GET /schedule/search/date HTTP/1.1" 404 2493
[2025-09-30 15:35:13,604] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-30 15:35:13,690] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-30 15:35:13,690] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-30 15:35:18,109] INFO core.views Home page accessed
[2025-09-30 15:35:18,129] DEBUG django.db.backends (0.016) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-30 13:35:18.125331' AND "django_session"."session_key" = 'p1smpq0b7bj0xetnmhcgx0gsq8jz0871') LIMIT 21; args=('2025-09-30 13:35:18.125331', 'p1smpq0b7bj0xetnmhcgx0gsq8jz0871'); alias=default
[2025-09-30 15:35:18,133] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-30 15:35:18,171] INFO django.server "GET / HTTP/1.1" 200 2285
[2025-09-30 15:35:18,231] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-30 15:35:38,766] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-30 13:35:38.764394' AND "django_session"."session_key" = 'p1smpq0b7bj0xetnmhcgx0gsq8jz0871') LIMIT 21; args=('2025-09-30 13:35:38.764394', 'p1smpq0b7bj0xetnmhcgx0gsq8jz0871'); alias=default
[2025-09-30 15:35:38,767] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-30 15:35:38,788] ERROR django.request Internal Server Error: /schedule/search/date/
Traceback (most recent call last):
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\scheduling\views.py", line 34, in search_by_date
    return render(
           ^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\shortcuts.py", line 24, in render
    content = loader.render_to_string(template_name, context, request, using=using)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: scheduling/search_by_date.html
[2025-09-30 15:35:38,788] ERROR django.server "GET /schedule/search/date/ HTTP/1.1" 500 90030
[2025-09-30 15:39:47,806] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-30 15:39:47,921] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-30 15:39:47,925] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-30 15:39:52,707] INFO core.views Home page accessed
[2025-09-30 15:39:52,719] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-30 13:39:52.718523' AND "django_session"."session_key" = 'p1smpq0b7bj0xetnmhcgx0gsq8jz0871') LIMIT 21; args=('2025-09-30 13:39:52.718523', 'p1smpq0b7bj0xetnmhcgx0gsq8jz0871'); alias=default
[2025-09-30 15:39:52,720] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-30 15:39:52,749] INFO django.server "GET / HTTP/1.1" 200 2285
[2025-09-30 15:39:52,817] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-30 15:40:15,089] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-30 13:40:15.088431' AND "django_session"."session_key" = 'p1smpq0b7bj0xetnmhcgx0gsq8jz0871') LIMIT 21; args=('2025-09-30 13:40:15.088431', 'p1smpq0b7bj0xetnmhcgx0gsq8jz0871'); alias=default
[2025-09-30 15:40:15,091] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-30 15:40:15,103] DEBUG django.db.backends (0.000) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory"; args=(); alias=default
[2025-09-30 15:40:15,107] INFO django.server "GET /schedule/search/date/ HTTP/1.1" 200 3323
[2025-09-30 15:40:15,131] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-30 15:40:39,782] INFO django.server "GET /schedule/search/timeslot HTTP/1.1" 301 0
[2025-09-30 15:40:39,796] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-30 13:40:39.793476' AND "django_session"."session_key" = 'p1smpq0b7bj0xetnmhcgx0gsq8jz0871') LIMIT 21; args=('2025-09-30 13:40:39.793476', 'p1smpq0b7bj0xetnmhcgx0gsq8jz0871'); alias=default
[2025-09-30 15:40:39,797] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-30 15:40:39,829] ERROR django.request Internal Server Error: /schedule/search/timeslot/
Traceback (most recent call last):
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\scheduling\views.py", line 67, in search_by_time_slot
    return render(
           ^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\shortcuts.py", line 24, in render
    content = loader.render_to_string(template_name, context, request, using=using)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader.py", line 61, in render_to_string
    template = get_template(template_name, using=using)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\template\loader.py", line 19, in get_template
    raise TemplateDoesNotExist(template_name, chain=chain)
django.template.exceptions.TemplateDoesNotExist: scheduling/search_by_time_slot.html
[2025-09-30 15:40:39,832] ERROR django.server "GET /schedule/search/timeslot/ HTTP/1.1" 500 89991
[2025-09-30 15:41:50,548] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-30 13:41:50.546813' AND "django_session"."session_key" = 'p1smpq0b7bj0xetnmhcgx0gsq8jz0871') LIMIT 21; args=('2025-09-30 13:41:50.546813', 'p1smpq0b7bj0xetnmhcgx0gsq8jz0871'); alias=default
[2025-09-30 15:41:50,549] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-30 15:41:50,550] DEBUG django.db.backends (0.000) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory"; args=(); alias=default
[2025-09-30 15:41:50,551] INFO django.server "GET /schedule/search/timeslot/ HTTP/1.1" 200 3556
[2025-09-30 15:41:50,627] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 200 10928
[2025-09-30 15:41:50,715] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-30 15:41:50,728] WARNING django.request Not Found: /favicon.ico
[2025-09-30 15:41:50,729] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2575
[2025-09-30 16:19:12,321] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-30 14:19:12.317783' AND "django_session"."session_key" = 'p1smpq0b7bj0xetnmhcgx0gsq8jz0871') LIMIT 21; args=('2025-09-30 14:19:12.317783', 'p1smpq0b7bj0xetnmhcgx0gsq8jz0871'); alias=default
[2025-09-30 16:19:12,323] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-30 16:19:12,324] DEBUG django.db.backends (0.000) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory"; args=(); alias=default
[2025-09-30 16:19:12,325] INFO django.server "GET /schedule/search/timeslot/ HTTP/1.1" 200 3679
[2025-09-30 16:19:12,337] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 200 10928
[2025-09-30 16:19:12,810] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-30 16:19:12,828] WARNING django.request Not Found: /favicon.ico
[2025-09-30 16:19:12,828] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2575
[2025-09-30 16:19:35,103] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-30 16:19:35,356] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-30 16:19:35,384] WARNING django.request Not Found: /.well-known/appspecific/com.chrome.devtools.json
[2025-09-30 16:19:35,387] WARNING django.server "GET /.well-known/appspecific/com.chrome.devtools.json HTTP/1.1" 404 2686
[2025-09-30 16:50:48,004] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "scheduling_servicecategory"; args=(); alias=default
[2025-09-30 16:50:52,166] DEBUG django.db.backends (0.000) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory"; args=(); alias=default
[2025-09-30 16:54:22,358] DEBUG django.db.backends (0.000) 
                TRUNCATE TABLE 
                    scheduling_jobassignment,
                    scheduling_booking,
                    scheduling_employee,
                    scheduling_servicecategory,
                    scheduling_timeslot
                RESTART IDENTITY CASCADE;
            ; args=None; alias=default
[2025-09-30 17:09:25,711] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-30 17:09:25,714] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-30 17:09:25,714] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-30 17:09:25,715] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-30 17:09:25,732] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-30 17:09:25,732] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-30 17:09:25,733] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-30 17:09:25,734] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
[2025-09-30 17:09:25,735] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
[2025-09-30 17:09:25,736] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
[2025-09-30 17:09:25,737] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
[2025-09-30 17:09:25,737] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
[2025-09-30 17:09:25,738] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
[2025-09-30 17:09:25,739] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
[2025-09-30 17:09:25,740] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
[2025-09-30 17:09:25,741] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
[2025-09-30 17:09:25,742] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
[2025-09-30 17:09:25,743] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
[2025-09-30 17:09:25,744] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
[2025-09-30 17:09:25,746] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
[2025-09-30 17:09:25,747] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
[2025-09-30 17:09:25,748] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
[2025-09-30 17:09:25,749] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
[2025-09-30 17:09:25,750] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
[2025-09-30 17:09:25,751] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
[2025-09-30 17:09:25,752] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'customers'; args=('customers',); alias=default
[2025-09-30 17:09:25,752] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'customers' AND "django_content_type"."model" = 'registeredcustomer') LIMIT 21; args=('customers', 'registeredcustomer'); alias=default
[2025-09-30 17:09:25,753] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(7,); alias=default
[2025-09-30 17:09:25,753] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'customers'; args=('customers',); alias=default
[2025-09-30 17:09:25,754] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'scheduling'; args=('scheduling',); alias=default
[2025-09-30 17:09:25,755] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'booking') LIMIT 21; args=('scheduling', 'booking'); alias=default
[2025-09-30 17:09:25,755] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'employee') LIMIT 21; args=('scheduling', 'employee'); alias=default
[2025-09-30 17:09:25,756] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'servicecategory') LIMIT 21; args=('scheduling', 'servicecategory'); alias=default
[2025-09-30 17:09:25,758] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'timeslot') LIMIT 21; args=('scheduling', 'timeslot'); alias=default
[2025-09-30 17:09:25,759] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'jobassignment') LIMIT 21; args=('scheduling', 'jobassignment'); alias=default
[2025-09-30 17:09:25,761] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 9, 10, 11, 12) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 9, 10, 11, 12); alias=default
[2025-09-30 17:09:25,762] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'scheduling'; args=('scheduling',); alias=default
[2025-09-30 17:09:51,203] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 17:09:51,203] DEBUG django.db.backends (0.000) DELETE FROM "scheduling_jobassignment"; args=(); alias=default
[2025-09-30 17:09:51,203] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-30 17:09:51,203] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking"; args=(); alias=default
[2025-09-30 17:09:51,203] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 17:09:51,203] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-30 17:09:51,203] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee"; args=(); alias=default
[2025-09-30 17:09:51,203] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 17:09:51,203] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-30 17:09:51,203] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot"; args=(); alias=default
[2025-09-30 17:09:51,203] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 17:09:51,203] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-30 17:09:51,203] DEBUG django.db.backends (0.000) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory"; args=(); alias=default
[2025-09-30 17:09:51,203] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 17:09:51,203] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-30 17:09:51,220] DEBUG django.db.backends (0.016) INSERT INTO "scheduling_servicecategory" ("name") VALUES ('Garage/Basement') RETURNING "scheduling_servicecategory"."id"; args=('Garage/Basement',); alias=default
[2025-09-30 17:09:51,226] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_servicecategory" ("name") VALUES ('Lawncare') RETURNING "scheduling_servicecategory"."id"; args=('Lawncare',); alias=default
[2025-09-30 17:09:51,232] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_servicecategory" ("name") VALUES ('House Cleaning') RETURNING "scheduling_servicecategory"."id"; args=('House Cleaning',); alias=default
[2025-09-30 17:09:51,236] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_timeslot" ("label") VALUES ('7:30-9:30') RETURNING "scheduling_timeslot"."id"; args=('7:30-9:30',); alias=default
[2025-09-30 17:09:51,236] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_timeslot" ("label") VALUES ('10:00-12:00') RETURNING "scheduling_timeslot"."id"; args=('10:00-12:00',); alias=default
[2025-09-30 17:09:51,236] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_timeslot" ("label") VALUES ('12:30-2:30') RETURNING "scheduling_timeslot"."id"; args=('12:30-2:30',); alias=default
[2025-09-30 17:09:51,274] DEBUG django.db.backends (0.016) INSERT INTO "scheduling_timeslot" ("label") VALUES ('3:00-5:00') RETURNING "scheduling_timeslot"."id"; args=('3:00-5:00',); alias=default
[2025-09-30 17:09:51,278] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('William Marshall', '1400 Pacific Ave, Dallas, TX 75202', 1) RETURNING "scheduling_employee"."id"; args=('William Marshall', '1400 Pacific Ave, Dallas, TX 75202', 1); alias=default
[2025-09-30 17:09:51,286] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Olivia Burns', '2500 Cedar Springs Rd, Dallas, TX 75201', 1) RETURNING "scheduling_employee"."id"; args=('Olivia Burns', '2500 Cedar Springs Rd, Dallas, TX 75201', 1); alias=default
[2025-09-30 17:09:51,286] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Miguel Lawrence', '100 Highland Park Village, Dallas, TX 75205', 1) RETURNING "scheduling_employee"."id"; args=('Miguel Lawrence', '100 Highland Park Village, Dallas, TX 75205', 1); alias=default
[2025-09-30 17:09:51,301] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Wendy Rogers', '3900 Gaston Ave, Dallas, TX 75246', 1) RETURNING "scheduling_employee"."id"; args=('Wendy Rogers', '3900 Gaston Ave, Dallas, TX 75246', 1); alias=default
[2025-09-30 17:09:51,320] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Alyssa Frye', '1234 Lovers Ln, Dallas, TX 75225', 1) RETURNING "scheduling_employee"."id"; args=('Alyssa Frye', '1234 Lovers Ln, Dallas, TX 75225', 1); alias=default
[2025-09-30 17:09:51,336] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Charles Goodman', '4000 Cedar Springs Rd, Dallas, TX 75219', 2) RETURNING "scheduling_employee"."id"; args=('Charles Goodman', '4000 Cedar Springs Rd, Dallas, TX 75219', 2); alias=default
[2025-09-30 17:09:51,336] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Christopher Collins', '9999 Forest Ln, Dallas, TX 75243', 2) RETURNING "scheduling_employee"."id"; args=('Christopher Collins', '9999 Forest Ln, Dallas, TX 75243', 2); alias=default
[2025-09-30 17:09:51,352] DEBUG django.db.backends (0.015) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Craig Merritt', '10200 E Northwest Hwy, Dallas, TX 75238', 2) RETURNING "scheduling_employee"."id"; args=('Craig Merritt', '10200 E Northwest Hwy, Dallas, TX 75238', 2); alias=default
[2025-09-30 17:09:51,359] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Tyler Reynolds', '100 Highland Park Village, Dallas, TX 75205', 2) RETURNING "scheduling_employee"."id"; args=('Tyler Reynolds', '100 Highland Park Village, Dallas, TX 75205', 2); alias=default
[2025-09-30 17:09:51,365] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Erin Ramirez', '5600 Ross Ave, Dallas, TX 75206', 2) RETURNING "scheduling_employee"."id"; args=('Erin Ramirez', '5600 Ross Ave, Dallas, TX 75206', 2); alias=default
[2025-09-30 17:09:51,371] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Katrina Sanchez', '4800 W Lovers Ln, Dallas, TX 75209', 3) RETURNING "scheduling_employee"."id"; args=('Katrina Sanchez', '4800 W Lovers Ln, Dallas, TX 75209', 3); alias=default
[2025-09-30 17:09:51,377] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Cory Walker', '5600 Ross Ave, Dallas, TX 75206', 3) RETURNING "scheduling_employee"."id"; args=('Cory Walker', '5600 Ross Ave, Dallas, TX 75206', 3); alias=default
[2025-09-30 17:09:51,381] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Mr. Jason Garza', '10200 E Northwest Hwy, Dallas, TX 75238', 3) RETURNING "scheduling_employee"."id"; args=('Mr. Jason Garza', '10200 E Northwest Hwy, Dallas, TX 75238', 3); alias=default
[2025-09-30 17:09:51,389] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Dylan Wu DDS', '6000 Preston Rd, Dallas, TX 75205', 3) RETURNING "scheduling_employee"."id"; args=('Dylan Wu DDS', '6000 Preston Rd, Dallas, TX 75205', 3); alias=default
[2025-09-30 17:09:51,393] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Eric Heath', '4000 Cedar Springs Rd, Dallas, TX 75219', 3) RETURNING "scheduling_employee"."id"; args=('Eric Heath', '4000 Cedar Springs Rd, Dallas, TX 75219', 3); alias=default
[2025-09-30 17:09:51,398] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Heather Foster', '2200 N Pearl St, Dallas, TX 75201', '2025-09-30', 1, 1) RETURNING "scheduling_booking"."id"; args=('Heather Foster', '2200 N Pearl St, Dallas, TX 75201', '2025-09-30', 1, 1); alias=default
[2025-09-30 17:09:51,403] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:51,404] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 1, '2200 N Pearl St, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(1, 1, '2200 N Pearl St, Dallas, TX 75201'); alias=default
[2025-09-30 17:09:51,411] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 1, '2200 N Pearl St, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(5, 1, '2200 N Pearl St, Dallas, TX 75201'); alias=default
[2025-09-30 17:09:51,417] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Austin Franco', '4800 W Lovers Ln, Dallas, TX 75209', '2025-09-30', 2, 1) RETURNING "scheduling_booking"."id"; args=('Austin Franco', '4800 W Lovers Ln, Dallas, TX 75209', '2025-09-30', 2, 1); alias=default
[2025-09-30 17:09:51,421] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:51,423] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 2, '4800 W Lovers Ln, Dallas, TX 75209') RETURNING "scheduling_jobassignment"."id"; args=(1, 2, '4800 W Lovers Ln, Dallas, TX 75209'); alias=default
[2025-09-30 17:09:51,423] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (3, 2, '4800 W Lovers Ln, Dallas, TX 75209') RETURNING "scheduling_jobassignment"."id"; args=(3, 2, '4800 W Lovers Ln, Dallas, TX 75209'); alias=default
[2025-09-30 17:09:51,423] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 2, '4800 W Lovers Ln, Dallas, TX 75209') RETURNING "scheduling_jobassignment"."id"; args=(2, 2, '4800 W Lovers Ln, Dallas, TX 75209'); alias=default
[2025-09-30 17:09:51,437] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Derrick Pope', '7800 N Stemmons Fwy, Dallas, TX 75247', '2025-09-30', 3, 1) RETURNING "scheduling_booking"."id"; args=('Derrick Pope', '7800 N Stemmons Fwy, Dallas, TX 75247', '2025-09-30', 3, 1); alias=default
[2025-09-30 17:09:51,437] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:51,437] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 3, '7800 N Stemmons Fwy, Dallas, TX 75247') RETURNING "scheduling_jobassignment"."id"; args=(2, 3, '7800 N Stemmons Fwy, Dallas, TX 75247'); alias=default
[2025-09-30 17:09:51,437] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (3, 3, '7800 N Stemmons Fwy, Dallas, TX 75247') RETURNING "scheduling_jobassignment"."id"; args=(3, 3, '7800 N Stemmons Fwy, Dallas, TX 75247'); alias=default
[2025-09-30 17:09:51,457] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Douglas Walker', '123 Greenville Ave, Dallas, TX 75206', '2025-09-30', 4, 1) RETURNING "scheduling_booking"."id"; args=('Douglas Walker', '123 Greenville Ave, Dallas, TX 75206', '2025-09-30', 4, 1); alias=default
[2025-09-30 17:09:51,461] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:51,463] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 4, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(2, 4, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:51,468] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Melanie Smith', '4000 Cedar Springs Rd, Dallas, TX 75219', '2025-09-30', 1, 3) RETURNING "scheduling_booking"."id"; args=('Melanie Smith', '4000 Cedar Springs Rd, Dallas, TX 75219', '2025-09-30', 1, 3); alias=default
[2025-09-30 17:09:51,472] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:51,473] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 5, '4000 Cedar Springs Rd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(13, 5, '4000 Cedar Springs Rd, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:51,478] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jason Dalton', '5600 Ross Ave, Dallas, TX 75206', '2025-09-30', 3, 3) RETURNING "scheduling_booking"."id"; args=('Jason Dalton', '5600 Ross Ave, Dallas, TX 75206', '2025-09-30', 3, 3); alias=default
[2025-09-30 17:09:51,482] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:51,483] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 6, '5600 Ross Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(12, 6, '5600 Ross Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:51,487] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 6, '5600 Ross Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(11, 6, '5600 Ross Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:51,487] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 6, '5600 Ross Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(14, 6, '5600 Ross Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:51,487] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Natalie Ferrell', '1400 Pacific Ave, Dallas, TX 75202', '2025-10-01', 2, 1) RETURNING "scheduling_booking"."id"; args=('Natalie Ferrell', '1400 Pacific Ave, Dallas, TX 75202', '2025-10-01', 2, 1); alias=default
[2025-09-30 17:09:51,487] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:51,504] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 7, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(2, 7, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 17:09:51,508] DEBUG django.db.backends (0.015) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 7, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(1, 7, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 17:09:51,513] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Melissa Foley', '123 Greenville Ave, Dallas, TX 75206', '2025-10-01', 3, 1) RETURNING "scheduling_booking"."id"; args=('Melissa Foley', '123 Greenville Ave, Dallas, TX 75206', '2025-10-01', 3, 1); alias=default
[2025-09-30 17:09:51,517] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:51,518] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 8, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(2, 8, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:51,524] DEBUG django.db.backends (0.016) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 8, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(5, 8, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:51,529] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 8, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(1, 8, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:51,535] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Kirk Grant', '9999 Forest Ln, Dallas, TX 75243', '2025-10-01', 4, 1) RETURNING "scheduling_booking"."id"; args=('Kirk Grant', '9999 Forest Ln, Dallas, TX 75243', '2025-10-01', 4, 1); alias=default
[2025-09-30 17:09:51,540] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:51,541] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 9, '9999 Forest Ln, Dallas, TX 75243') RETURNING "scheduling_jobassignment"."id"; args=(5, 9, '9999 Forest Ln, Dallas, TX 75243'); alias=default
[2025-09-30 17:09:51,547] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (4, 9, '9999 Forest Ln, Dallas, TX 75243') RETURNING "scheduling_jobassignment"."id"; args=(4, 9, '9999 Forest Ln, Dallas, TX 75243'); alias=default
[2025-09-30 17:09:51,552] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Susan Hammond', '7000 Mockingbird Ln, Dallas, TX 75214', '2025-10-01', 1, 2) RETURNING "scheduling_booking"."id"; args=('Susan Hammond', '7000 Mockingbird Ln, Dallas, TX 75214', '2025-10-01', 1, 2); alias=default
[2025-09-30 17:09:51,558] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:51,559] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 10, '7000 Mockingbird Ln, Dallas, TX 75214') RETURNING "scheduling_jobassignment"."id"; args=(8, 10, '7000 Mockingbird Ln, Dallas, TX 75214'); alias=default
[2025-09-30 17:09:51,565] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Pamela Torres', '5600 Ross Ave, Dallas, TX 75206', '2025-10-01', 3, 2) RETURNING "scheduling_booking"."id"; args=('Pamela Torres', '5600 Ross Ave, Dallas, TX 75206', '2025-10-01', 3, 2); alias=default
[2025-09-30 17:09:51,569] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:51,570] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 11, '5600 Ross Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(9, 11, '5600 Ross Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:51,576] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jessica Fernandez', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-01', 4, 2) RETURNING "scheduling_booking"."id"; args=('Jessica Fernandez', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-01', 4, 2); alias=default
[2025-09-30 17:09:51,580] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:51,580] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 12, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(8, 12, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 17:09:51,590] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (10, 12, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(10, 12, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 17:09:51,596] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Joseph Boone', '2200 N Pearl St, Dallas, TX 75201', '2025-10-01', 2, 3) RETURNING "scheduling_booking"."id"; args=('Joseph Boone', '2200 N Pearl St, Dallas, TX 75201', '2025-10-01', 2, 3); alias=default
[2025-09-30 17:09:51,602] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:51,604] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 13, '2200 N Pearl St, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(11, 13, '2200 N Pearl St, Dallas, TX 75201'); alias=default
[2025-09-30 17:09:51,609] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 13, '2200 N Pearl St, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(14, 13, '2200 N Pearl St, Dallas, TX 75201'); alias=default
[2025-09-30 17:09:51,609] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Timothy Byrd', '100 Highland Park Village, Dallas, TX 75205', '2025-10-02', 1, 1) RETURNING "scheduling_booking"."id"; args=('Timothy Byrd', '100 Highland Park Village, Dallas, TX 75205', '2025-10-02', 1, 1); alias=default
[2025-09-30 17:09:51,620] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:51,620] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 14, '100 Highland Park Village, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(1, 14, '100 Highland Park Village, Dallas, TX 75205'); alias=default
[2025-09-30 17:09:51,620] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (3, 14, '100 Highland Park Village, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(3, 14, '100 Highland Park Village, Dallas, TX 75205'); alias=default
[2025-09-30 17:09:51,620] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 14, '100 Highland Park Village, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(2, 14, '100 Highland Park Village, Dallas, TX 75205'); alias=default
[2025-09-30 17:09:51,636] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Dr. Joseph Rodriguez', '8900 Hillcrest Rd, Dallas, TX 75225', '2025-10-02', 2, 1) RETURNING "scheduling_booking"."id"; args=('Dr. Joseph Rodriguez', '8900 Hillcrest Rd, Dallas, TX 75225', '2025-10-02', 2, 1); alias=default
[2025-09-30 17:09:51,636] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:51,636] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (4, 15, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(4, 15, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 17:09:51,636] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 15, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(2, 15, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 17:09:51,654] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Melissa Conway', '100 Highland Park Village, Dallas, TX 75205', '2025-10-02', 4, 1) RETURNING "scheduling_booking"."id"; args=('Melissa Conway', '100 Highland Park Village, Dallas, TX 75205', '2025-10-02', 4, 1); alias=default
[2025-09-30 17:09:51,654] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:51,654] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 16, '100 Highland Park Village, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(5, 16, '100 Highland Park Village, Dallas, TX 75205'); alias=default
[2025-09-30 17:09:51,654] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Donna Gill', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-02', 1, 2) RETURNING "scheduling_booking"."id"; args=('Donna Gill', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-02', 1, 2); alias=default
[2025-09-30 17:09:51,670] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:51,670] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 17, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(7, 17, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 17:09:51,670] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 17, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(8, 17, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 17:09:51,670] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (10, 17, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(10, 17, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 17:09:51,692] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Kristen Chase', '1400 Pacific Ave, Dallas, TX 75202', '2025-10-02', 3, 2) RETURNING "scheduling_booking"."id"; args=('Kristen Chase', '1400 Pacific Ave, Dallas, TX 75202', '2025-10-02', 3, 2); alias=default
[2025-09-30 17:09:51,696] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:51,696] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 18, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(7, 18, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 17:09:51,704] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Andrew Manning', '4000 Cedar Springs Rd, Dallas, TX 75219', '2025-10-02', 1, 3) RETURNING "scheduling_booking"."id"; args=('Andrew Manning', '4000 Cedar Springs Rd, Dallas, TX 75219', '2025-10-02', 1, 3); alias=default
[2025-09-30 17:09:51,708] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:51,710] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 19, '4000 Cedar Springs Rd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(14, 19, '4000 Cedar Springs Rd, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:51,715] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Mike Williams', '1234 Lovers Ln, Dallas, TX 75225', '2025-10-02', 2, 3) RETURNING "scheduling_booking"."id"; args=('Mike Williams', '1234 Lovers Ln, Dallas, TX 75225', '2025-10-02', 2, 3); alias=default
[2025-09-30 17:09:51,720] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:51,721] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 20, '1234 Lovers Ln, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(13, 20, '1234 Lovers Ln, Dallas, TX 75225'); alias=default
[2025-09-30 17:09:51,726] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Amanda West', '123 Greenville Ave, Dallas, TX 75206', '2025-10-02', 3, 3) RETURNING "scheduling_booking"."id"; args=('Amanda West', '123 Greenville Ave, Dallas, TX 75206', '2025-10-02', 3, 3); alias=default
[2025-09-30 17:09:51,730] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:51,731] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 21, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(11, 21, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:51,736] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Abigail Perez', '1400 Pacific Ave, Dallas, TX 75202', '2025-10-02', 4, 3) RETURNING "scheduling_booking"."id"; args=('Abigail Perez', '1400 Pacific Ave, Dallas, TX 75202', '2025-10-02', 4, 3); alias=default
[2025-09-30 17:09:51,736] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:51,736] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 22, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(12, 22, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 17:09:51,736] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 22, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(13, 22, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 17:09:51,752] DEBUG django.db.backends (0.016) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Cynthia Rogers', '7800 N Stemmons Fwy, Dallas, TX 75247', '2025-10-03', 1, 1) RETURNING "scheduling_booking"."id"; args=('Cynthia Rogers', '7800 N Stemmons Fwy, Dallas, TX 75247', '2025-10-03', 1, 1); alias=default
[2025-09-30 17:09:51,752] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:51,752] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 23, '7800 N Stemmons Fwy, Dallas, TX 75247') RETURNING "scheduling_jobassignment"."id"; args=(5, 23, '7800 N Stemmons Fwy, Dallas, TX 75247'); alias=default
[2025-09-30 17:09:51,752] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 23, '7800 N Stemmons Fwy, Dallas, TX 75247') RETURNING "scheduling_jobassignment"."id"; args=(1, 23, '7800 N Stemmons Fwy, Dallas, TX 75247'); alias=default
[2025-09-30 17:09:51,752] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (3, 23, '7800 N Stemmons Fwy, Dallas, TX 75247') RETURNING "scheduling_jobassignment"."id"; args=(3, 23, '7800 N Stemmons Fwy, Dallas, TX 75247'); alias=default
[2025-09-30 17:09:51,772] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Michael Weber', '4100 Lomo Alto Dr, Dallas, TX 75219', '2025-10-03', 2, 1) RETURNING "scheduling_booking"."id"; args=('Michael Weber', '4100 Lomo Alto Dr, Dallas, TX 75219', '2025-10-03', 2, 1); alias=default
[2025-09-30 17:09:51,775] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:51,776] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (3, 24, '4100 Lomo Alto Dr, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(3, 24, '4100 Lomo Alto Dr, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:51,782] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 24, '4100 Lomo Alto Dr, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(5, 24, '4100 Lomo Alto Dr, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:51,786] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (4, 24, '4100 Lomo Alto Dr, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(4, 24, '4100 Lomo Alto Dr, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:51,791] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jennifer Davis', '100 Highland Park Village, Dallas, TX 75205', '2025-10-03', 3, 1) RETURNING "scheduling_booking"."id"; args=('Jennifer Davis', '100 Highland Park Village, Dallas, TX 75205', '2025-10-03', 3, 1); alias=default
[2025-09-30 17:09:51,795] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:51,796] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 25, '100 Highland Park Village, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(1, 25, '100 Highland Park Village, Dallas, TX 75205'); alias=default
[2025-09-30 17:09:51,801] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jonathon Todd', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-03', 2, 2) RETURNING "scheduling_booking"."id"; args=('Jonathon Todd', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-03', 2, 2); alias=default
[2025-09-30 17:09:51,803] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:51,803] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (6, 26, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(6, 26, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:51,803] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 26, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(7, 26, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:51,803] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (10, 26, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(10, 26, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:51,818] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Kyle Carter', '4100 Lomo Alto Dr, Dallas, TX 75219', '2025-10-03', 4, 2) RETURNING "scheduling_booking"."id"; args=('Kyle Carter', '4100 Lomo Alto Dr, Dallas, TX 75219', '2025-10-03', 4, 2); alias=default
[2025-09-30 17:09:51,818] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:51,818] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 27, '4100 Lomo Alto Dr, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(7, 27, '4100 Lomo Alto Dr, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:51,818] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 27, '4100 Lomo Alto Dr, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(8, 27, '4100 Lomo Alto Dr, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:51,837] DEBUG django.db.backends (0.016) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Michael Morgan MD', '2200 N Pearl St, Dallas, TX 75201', '2025-10-03', 1, 3) RETURNING "scheduling_booking"."id"; args=('Michael Morgan MD', '2200 N Pearl St, Dallas, TX 75201', '2025-10-03', 1, 3); alias=default
[2025-09-30 17:09:51,841] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:51,842] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 28, '2200 N Pearl St, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(15, 28, '2200 N Pearl St, Dallas, TX 75201'); alias=default
[2025-09-30 17:09:51,845] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 28, '2200 N Pearl St, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(13, 28, '2200 N Pearl St, Dallas, TX 75201'); alias=default
[2025-09-30 17:09:51,860] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 28, '2200 N Pearl St, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(12, 28, '2200 N Pearl St, Dallas, TX 75201'); alias=default
[2025-09-30 17:09:51,860] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Rebecca Mora', '4100 Lomo Alto Dr, Dallas, TX 75219', '2025-10-03', 3, 3) RETURNING "scheduling_booking"."id"; args=('Rebecca Mora', '4100 Lomo Alto Dr, Dallas, TX 75219', '2025-10-03', 3, 3); alias=default
[2025-09-30 17:09:51,860] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:51,860] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 29, '4100 Lomo Alto Dr, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(14, 29, '4100 Lomo Alto Dr, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:51,876] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 29, '4100 Lomo Alto Dr, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(15, 29, '4100 Lomo Alto Dr, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:51,876] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Amy Conner', '9999 Forest Ln, Dallas, TX 75243', '2025-10-03', 4, 3) RETURNING "scheduling_booking"."id"; args=('Amy Conner', '9999 Forest Ln, Dallas, TX 75243', '2025-10-03', 4, 3); alias=default
[2025-09-30 17:09:51,876] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:51,876] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 30, '9999 Forest Ln, Dallas, TX 75243') RETURNING "scheduling_jobassignment"."id"; args=(13, 30, '9999 Forest Ln, Dallas, TX 75243'); alias=default
[2025-09-30 17:09:51,891] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Christine Rivera', '123 Greenville Ave, Dallas, TX 75206', '2025-10-04', 1, 1) RETURNING "scheduling_booking"."id"; args=('Christine Rivera', '123 Greenville Ave, Dallas, TX 75206', '2025-10-04', 1, 1); alias=default
[2025-09-30 17:09:51,891] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:51,891] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 31, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(5, 31, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:51,891] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (3, 31, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(3, 31, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:51,907] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (4, 31, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(4, 31, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:51,907] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Nicole Garcia', '4500 Harry Hines Blvd, Dallas, TX 75219', '2025-10-04', 4, 1) RETURNING "scheduling_booking"."id"; args=('Nicole Garcia', '4500 Harry Hines Blvd, Dallas, TX 75219', '2025-10-04', 4, 1); alias=default
[2025-09-30 17:09:51,907] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:51,907] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 32, '4500 Harry Hines Blvd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(5, 32, '4500 Harry Hines Blvd, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:51,923] DEBUG django.db.backends (0.016) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (3, 32, '4500 Harry Hines Blvd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(3, 32, '4500 Harry Hines Blvd, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:51,928] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jeremiah Zuniga', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-04', 4, 3) RETURNING "scheduling_booking"."id"; args=('Jeremiah Zuniga', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-04', 4, 3); alias=default
[2025-09-30 17:09:51,931] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:51,932] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 33, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(14, 33, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 17:09:51,938] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 33, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(12, 33, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 17:09:51,943] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Gregory Burch', '4000 Cedar Springs Rd, Dallas, TX 75219', '2025-10-05', 3, 2) RETURNING "scheduling_booking"."id"; args=('Gregory Burch', '4000 Cedar Springs Rd, Dallas, TX 75219', '2025-10-05', 3, 2); alias=default
[2025-09-30 17:09:51,947] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:51,948] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 34, '4000 Cedar Springs Rd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(9, 34, '4000 Cedar Springs Rd, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:51,953] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (6, 34, '4000 Cedar Springs Rd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(6, 34, '4000 Cedar Springs Rd, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:51,954] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('John Dixon', '123 Greenville Ave, Dallas, TX 75206', '2025-10-05', 2, 3) RETURNING "scheduling_booking"."id"; args=('John Dixon', '123 Greenville Ave, Dallas, TX 75206', '2025-10-05', 2, 3); alias=default
[2025-09-30 17:09:51,954] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:51,954] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 35, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(14, 35, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:51,954] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 35, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(12, 35, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:51,969] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 35, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(13, 35, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:51,969] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jacob Scott', '2500 Cedar Springs Rd, Dallas, TX 75201', '2025-10-06', 3, 1) RETURNING "scheduling_booking"."id"; args=('Jacob Scott', '2500 Cedar Springs Rd, Dallas, TX 75201', '2025-10-06', 3, 1); alias=default
[2025-09-30 17:09:51,969] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:51,969] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (4, 36, '2500 Cedar Springs Rd, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(4, 36, '2500 Cedar Springs Rd, Dallas, TX 75201'); alias=default
[2025-09-30 17:09:51,985] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (3, 36, '2500 Cedar Springs Rd, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(3, 36, '2500 Cedar Springs Rd, Dallas, TX 75201'); alias=default
[2025-09-30 17:09:51,985] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 36, '2500 Cedar Springs Rd, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(2, 36, '2500 Cedar Springs Rd, Dallas, TX 75201'); alias=default
[2025-09-30 17:09:51,985] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('James Cuevas', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-06', 2, 2) RETURNING "scheduling_booking"."id"; args=('James Cuevas', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-06', 2, 2); alias=default
[2025-09-30 17:09:52,001] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:52,001] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (10, 37, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(10, 37, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 17:09:52,001] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 37, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(7, 37, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 17:09:52,001] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 37, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(8, 37, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 17:09:52,016] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Tammy Nguyen', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-06', 3, 2) RETURNING "scheduling_booking"."id"; args=('Tammy Nguyen', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-06', 3, 2); alias=default
[2025-09-30 17:09:52,016] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:52,032] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 38, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(9, 38, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 17:09:52,047] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Shannon James', '1234 Lovers Ln, Dallas, TX 75225', '2025-10-06', 3, 3) RETURNING "scheduling_booking"."id"; args=('Shannon James', '1234 Lovers Ln, Dallas, TX 75225', '2025-10-06', 3, 3); alias=default
[2025-09-30 17:09:52,052] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:52,053] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 39, '1234 Lovers Ln, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(12, 39, '1234 Lovers Ln, Dallas, TX 75225'); alias=default
[2025-09-30 17:09:52,058] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Kyle Aguilar', '100 Highland Park Village, Dallas, TX 75205', '2025-10-06', 4, 3) RETURNING "scheduling_booking"."id"; args=('Kyle Aguilar', '100 Highland Park Village, Dallas, TX 75205', '2025-10-06', 4, 3); alias=default
[2025-09-30 17:09:52,063] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:52,064] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 40, '100 Highland Park Village, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(12, 40, '100 Highland Park Village, Dallas, TX 75205'); alias=default
[2025-09-30 17:09:52,064] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 40, '100 Highland Park Village, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(11, 40, '100 Highland Park Village, Dallas, TX 75205'); alias=default
[2025-09-30 17:09:52,064] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 40, '100 Highland Park Village, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(14, 40, '100 Highland Park Village, Dallas, TX 75205'); alias=default
[2025-09-30 17:09:52,082] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Nicole Nielsen', '5600 Ross Ave, Dallas, TX 75206', '2025-10-07', 4, 1) RETURNING "scheduling_booking"."id"; args=('Nicole Nielsen', '5600 Ross Ave, Dallas, TX 75206', '2025-10-07', 4, 1); alias=default
[2025-09-30 17:09:52,088] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:52,088] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (3, 41, '5600 Ross Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(3, 41, '5600 Ross Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:52,088] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 41, '5600 Ross Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(2, 41, '5600 Ross Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:52,088] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Dr. Susan Dunn', '4100 Lomo Alto Dr, Dallas, TX 75219', '2025-10-07', 1, 2) RETURNING "scheduling_booking"."id"; args=('Dr. Susan Dunn', '4100 Lomo Alto Dr, Dallas, TX 75219', '2025-10-07', 1, 2); alias=default
[2025-09-30 17:09:52,103] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:52,103] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 42, '4100 Lomo Alto Dr, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(8, 42, '4100 Lomo Alto Dr, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:52,103] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 42, '4100 Lomo Alto Dr, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(9, 42, '4100 Lomo Alto Dr, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:52,120] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (10, 42, '4100 Lomo Alto Dr, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(10, 42, '4100 Lomo Alto Dr, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:52,120] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Christopher Curtis', '7800 N Stemmons Fwy, Dallas, TX 75247', '2025-10-07', 2, 2) RETURNING "scheduling_booking"."id"; args=('Christopher Curtis', '7800 N Stemmons Fwy, Dallas, TX 75247', '2025-10-07', 2, 2); alias=default
[2025-09-30 17:09:52,120] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:52,136] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 43, '7800 N Stemmons Fwy, Dallas, TX 75247') RETURNING "scheduling_jobassignment"."id"; args=(7, 43, '7800 N Stemmons Fwy, Dallas, TX 75247'); alias=default
[2025-09-30 17:09:52,137] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 43, '7800 N Stemmons Fwy, Dallas, TX 75247') RETURNING "scheduling_jobassignment"."id"; args=(8, 43, '7800 N Stemmons Fwy, Dallas, TX 75247'); alias=default
[2025-09-30 17:09:52,137] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Victoria Crawford', '4000 Cedar Springs Rd, Dallas, TX 75219', '2025-10-07', 4, 2) RETURNING "scheduling_booking"."id"; args=('Victoria Crawford', '4000 Cedar Springs Rd, Dallas, TX 75219', '2025-10-07', 4, 2); alias=default
[2025-09-30 17:09:52,154] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:52,154] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 44, '4000 Cedar Springs Rd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(8, 44, '4000 Cedar Springs Rd, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:52,154] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 44, '4000 Cedar Springs Rd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(9, 44, '4000 Cedar Springs Rd, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:52,170] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (10, 44, '4000 Cedar Springs Rd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(10, 44, '4000 Cedar Springs Rd, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:52,170] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Russell Tran', '2200 N Pearl St, Dallas, TX 75201', '2025-10-07', 2, 3) RETURNING "scheduling_booking"."id"; args=('Russell Tran', '2200 N Pearl St, Dallas, TX 75201', '2025-10-07', 2, 3); alias=default
[2025-09-30 17:09:52,170] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:52,170] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 45, '2200 N Pearl St, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(11, 45, '2200 N Pearl St, Dallas, TX 75201'); alias=default
[2025-09-30 17:09:52,186] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 45, '2200 N Pearl St, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(15, 45, '2200 N Pearl St, Dallas, TX 75201'); alias=default
[2025-09-30 17:09:52,186] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Lisa Velasquez', '123 Greenville Ave, Dallas, TX 75206', '2025-10-07', 3, 3) RETURNING "scheduling_booking"."id"; args=('Lisa Velasquez', '123 Greenville Ave, Dallas, TX 75206', '2025-10-07', 3, 3); alias=default
[2025-09-30 17:09:52,202] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:52,202] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 46, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(15, 46, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:52,208] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Christian Moore', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-07', 4, 3) RETURNING "scheduling_booking"."id"; args=('Christian Moore', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-07', 4, 3); alias=default
[2025-09-30 17:09:52,208] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:52,220] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 47, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(11, 47, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 17:09:52,220] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Carolyn Guerrero', '7000 Mockingbird Ln, Dallas, TX 75214', '2025-10-08', 3, 2) RETURNING "scheduling_booking"."id"; args=('Carolyn Guerrero', '7000 Mockingbird Ln, Dallas, TX 75214', '2025-10-08', 3, 2); alias=default
[2025-09-30 17:09:52,220] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:52,236] DEBUG django.db.backends (0.015) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 48, '7000 Mockingbird Ln, Dallas, TX 75214') RETURNING "scheduling_jobassignment"."id"; args=(9, 48, '7000 Mockingbird Ln, Dallas, TX 75214'); alias=default
[2025-09-30 17:09:52,237] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Amanda Davis', '4000 Cedar Springs Rd, Dallas, TX 75219', '2025-10-08', 2, 3) RETURNING "scheduling_booking"."id"; args=('Amanda Davis', '4000 Cedar Springs Rd, Dallas, TX 75219', '2025-10-08', 2, 3); alias=default
[2025-09-30 17:09:52,237] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:52,237] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 49, '4000 Cedar Springs Rd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(15, 49, '4000 Cedar Springs Rd, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:52,255] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 49, '4000 Cedar Springs Rd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(13, 49, '4000 Cedar Springs Rd, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:52,261] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Mary Woodard', '2500 Cedar Springs Rd, Dallas, TX 75201', '2025-10-08', 4, 3) RETURNING "scheduling_booking"."id"; args=('Mary Woodard', '2500 Cedar Springs Rd, Dallas, TX 75201', '2025-10-08', 4, 3); alias=default
[2025-09-30 17:09:52,264] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:52,265] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 50, '2500 Cedar Springs Rd, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(11, 50, '2500 Cedar Springs Rd, Dallas, TX 75201'); alias=default
[2025-09-30 17:09:52,273] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 50, '2500 Cedar Springs Rd, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(13, 50, '2500 Cedar Springs Rd, Dallas, TX 75201'); alias=default
[2025-09-30 17:09:52,278] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 50, '2500 Cedar Springs Rd, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(12, 50, '2500 Cedar Springs Rd, Dallas, TX 75201'); alias=default
[2025-09-30 17:09:52,283] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Ivan Clark', '4800 W Lovers Ln, Dallas, TX 75209', '2025-10-09', 2, 1) RETURNING "scheduling_booking"."id"; args=('Ivan Clark', '4800 W Lovers Ln, Dallas, TX 75209', '2025-10-09', 2, 1); alias=default
[2025-09-30 17:09:52,287] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:52,287] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 51, '4800 W Lovers Ln, Dallas, TX 75209') RETURNING "scheduling_jobassignment"."id"; args=(5, 51, '4800 W Lovers Ln, Dallas, TX 75209'); alias=default
[2025-09-30 17:09:52,287] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Tyler Deleon', '4100 Lomo Alto Dr, Dallas, TX 75219', '2025-10-09', 3, 1) RETURNING "scheduling_booking"."id"; args=('Tyler Deleon', '4100 Lomo Alto Dr, Dallas, TX 75219', '2025-10-09', 3, 1); alias=default
[2025-09-30 17:09:52,287] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:52,302] DEBUG django.db.backends (0.016) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 52, '4100 Lomo Alto Dr, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(2, 52, '4100 Lomo Alto Dr, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:52,304] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('William Davis', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-09', 4, 2) RETURNING "scheduling_booking"."id"; args=('William Davis', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-09', 4, 2); alias=default
[2025-09-30 17:09:52,304] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:52,304] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (6, 53, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(6, 53, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:52,320] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Natalie Zuniga', '12200 Preston Rd, Dallas, TX 75230', '2025-10-09', 1, 3) RETURNING "scheduling_booking"."id"; args=('Natalie Zuniga', '12200 Preston Rd, Dallas, TX 75230', '2025-10-09', 1, 3); alias=default
[2025-09-30 17:09:52,320] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:52,320] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 54, '12200 Preston Rd, Dallas, TX 75230') RETURNING "scheduling_jobassignment"."id"; args=(14, 54, '12200 Preston Rd, Dallas, TX 75230'); alias=default
[2025-09-30 17:09:52,320] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Ms. Ashley Burnett MD', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-09', 2, 3) RETURNING "scheduling_booking"."id"; args=('Ms. Ashley Burnett MD', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-09', 2, 3); alias=default
[2025-09-30 17:09:52,337] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:52,337] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 55, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(14, 55, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 17:09:52,337] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 55, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(13, 55, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 17:09:52,337] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 55, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(12, 55, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 17:09:52,353] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jeremiah Washington', '123 Greenville Ave, Dallas, TX 75206', '2025-10-09', 3, 3) RETURNING "scheduling_booking"."id"; args=('Jeremiah Washington', '123 Greenville Ave, Dallas, TX 75206', '2025-10-09', 3, 3); alias=default
[2025-09-30 17:09:52,353] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:52,353] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 56, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(15, 56, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:52,353] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 56, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(14, 56, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:52,370] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 56, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(12, 56, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:52,370] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Andrea Smith', '4500 Harry Hines Blvd, Dallas, TX 75219', '2025-10-09', 4, 3) RETURNING "scheduling_booking"."id"; args=('Andrea Smith', '4500 Harry Hines Blvd, Dallas, TX 75219', '2025-10-09', 4, 3); alias=default
[2025-09-30 17:09:52,370] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:52,370] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 57, '4500 Harry Hines Blvd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(12, 57, '4500 Harry Hines Blvd, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:52,387] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jason Owens', '123 Greenville Ave, Dallas, TX 75206', '2025-10-10', 1, 1) RETURNING "scheduling_booking"."id"; args=('Jason Owens', '123 Greenville Ave, Dallas, TX 75206', '2025-10-10', 1, 1); alias=default
[2025-09-30 17:09:52,387] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:52,387] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 58, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(5, 58, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:52,403] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Michael Nicholson', '100 Highland Park Village, Dallas, TX 75205', '2025-10-10', 4, 1) RETURNING "scheduling_booking"."id"; args=('Michael Nicholson', '100 Highland Park Village, Dallas, TX 75205', '2025-10-10', 4, 1); alias=default
[2025-09-30 17:09:52,403] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:52,403] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (4, 59, '100 Highland Park Village, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(4, 59, '100 Highland Park Village, Dallas, TX 75205'); alias=default
[2025-09-30 17:09:52,403] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Rachel Maynard', '7800 N Stemmons Fwy, Dallas, TX 75247', '2025-10-10', 4, 2) RETURNING "scheduling_booking"."id"; args=('Rachel Maynard', '7800 N Stemmons Fwy, Dallas, TX 75247', '2025-10-10', 4, 2); alias=default
[2025-09-30 17:09:52,420] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:52,420] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 60, '7800 N Stemmons Fwy, Dallas, TX 75247') RETURNING "scheduling_jobassignment"."id"; args=(8, 60, '7800 N Stemmons Fwy, Dallas, TX 75247'); alias=default
[2025-09-30 17:09:52,420] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 60, '7800 N Stemmons Fwy, Dallas, TX 75247') RETURNING "scheduling_jobassignment"."id"; args=(9, 60, '7800 N Stemmons Fwy, Dallas, TX 75247'); alias=default
[2025-09-30 17:09:52,420] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Mary Torres', '6000 Preston Rd, Dallas, TX 75205', '2025-10-10', 1, 3) RETURNING "scheduling_booking"."id"; args=('Mary Torres', '6000 Preston Rd, Dallas, TX 75205', '2025-10-10', 1, 3); alias=default
[2025-09-30 17:09:52,436] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:52,436] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 61, '6000 Preston Rd, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(14, 61, '6000 Preston Rd, Dallas, TX 75205'); alias=default
[2025-09-30 17:09:52,436] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 61, '6000 Preston Rd, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(11, 61, '6000 Preston Rd, Dallas, TX 75205'); alias=default
[2025-09-30 17:09:52,436] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 61, '6000 Preston Rd, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(15, 61, '6000 Preston Rd, Dallas, TX 75205'); alias=default
[2025-09-30 17:09:52,453] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Mary Collins', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-10', 2, 3) RETURNING "scheduling_booking"."id"; args=('Mary Collins', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-10', 2, 3); alias=default
[2025-09-30 17:09:52,453] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:52,453] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 62, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(12, 62, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:52,453] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 62, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(11, 62, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:52,472] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 62, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(14, 62, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:52,477] DEBUG django.db.backends (0.015) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Theodore Miller', '9999 Forest Ln, Dallas, TX 75243', '2025-10-10', 4, 3) RETURNING "scheduling_booking"."id"; args=('Theodore Miller', '9999 Forest Ln, Dallas, TX 75243', '2025-10-10', 4, 3); alias=default
[2025-09-30 17:09:52,482] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:52,483] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 63, '9999 Forest Ln, Dallas, TX 75243') RETURNING "scheduling_jobassignment"."id"; args=(11, 63, '9999 Forest Ln, Dallas, TX 75243'); alias=default
[2025-09-30 17:09:52,490] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Brian Cole', '7800 N Stemmons Fwy, Dallas, TX 75247', '2025-10-11', 2, 1) RETURNING "scheduling_booking"."id"; args=('Brian Cole', '7800 N Stemmons Fwy, Dallas, TX 75247', '2025-10-11', 2, 1); alias=default
[2025-09-30 17:09:52,495] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:52,496] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 64, '7800 N Stemmons Fwy, Dallas, TX 75247') RETURNING "scheduling_jobassignment"."id"; args=(5, 64, '7800 N Stemmons Fwy, Dallas, TX 75247'); alias=default
[2025-09-30 17:09:52,501] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Erika Odonnell', '8900 Hillcrest Rd, Dallas, TX 75225', '2025-10-11', 3, 1) RETURNING "scheduling_booking"."id"; args=('Erika Odonnell', '8900 Hillcrest Rd, Dallas, TX 75225', '2025-10-11', 3, 1); alias=default
[2025-09-30 17:09:52,507] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:52,509] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 65, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(5, 65, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 17:09:52,514] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (3, 65, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(3, 65, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 17:09:52,519] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 65, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(1, 65, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 17:09:52,526] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Eric Alvarado', '1234 Lovers Ln, Dallas, TX 75225', '2025-10-11', 2, 2) RETURNING "scheduling_booking"."id"; args=('Eric Alvarado', '1234 Lovers Ln, Dallas, TX 75225', '2025-10-11', 2, 2); alias=default
[2025-09-30 17:09:52,530] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:52,531] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 66, '1234 Lovers Ln, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(7, 66, '1234 Lovers Ln, Dallas, TX 75225'); alias=default
[2025-09-30 17:09:52,536] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 66, '1234 Lovers Ln, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(8, 66, '1234 Lovers Ln, Dallas, TX 75225'); alias=default
[2025-09-30 17:09:52,543] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Charles Moore', '5600 Ross Ave, Dallas, TX 75206', '2025-10-11', 3, 2) RETURNING "scheduling_booking"."id"; args=('Charles Moore', '5600 Ross Ave, Dallas, TX 75206', '2025-10-11', 3, 2); alias=default
[2025-09-30 17:09:52,548] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:52,548] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (6, 67, '5600 Ross Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(6, 67, '5600 Ross Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:52,553] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 67, '5600 Ross Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(9, 67, '5600 Ross Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:52,553] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (10, 67, '5600 Ross Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(10, 67, '5600 Ross Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:52,553] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Christopher Sims', '8900 Hillcrest Rd, Dallas, TX 75225', '2025-10-11', 4, 2) RETURNING "scheduling_booking"."id"; args=('Christopher Sims', '8900 Hillcrest Rd, Dallas, TX 75225', '2025-10-11', 4, 2); alias=default
[2025-09-30 17:09:52,570] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:52,570] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 68, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(9, 68, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 17:09:52,570] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (6, 68, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(6, 68, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 17:09:52,570] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 68, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(8, 68, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 17:09:52,586] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('James Garcia', '1400 Pacific Ave, Dallas, TX 75202', '2025-10-11', 2, 3) RETURNING "scheduling_booking"."id"; args=('James Garcia', '1400 Pacific Ave, Dallas, TX 75202', '2025-10-11', 2, 3); alias=default
[2025-09-30 17:09:52,586] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:52,586] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 69, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(12, 69, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 17:09:52,586] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 69, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(11, 69, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 17:09:52,604] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Todd Cox', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-12', 2, 1) RETURNING "scheduling_booking"."id"; args=('Todd Cox', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-12', 2, 1); alias=default
[2025-09-30 17:09:52,604] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:52,604] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 70, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(5, 70, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:52,604] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Deborah Montoya', '8900 Hillcrest Rd, Dallas, TX 75225', '2025-10-12', 4, 1) RETURNING "scheduling_booking"."id"; args=('Deborah Montoya', '8900 Hillcrest Rd, Dallas, TX 75225', '2025-10-12', 4, 1); alias=default
[2025-09-30 17:09:52,620] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:52,620] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 71, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(5, 71, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 17:09:52,620] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 71, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(2, 71, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 17:09:52,620] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Peter Stevens', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-12', 2, 2) RETURNING "scheduling_booking"."id"; args=('Peter Stevens', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-12', 2, 2); alias=default
[2025-09-30 17:09:52,636] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:52,636] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 72, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(9, 72, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 17:09:52,636] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (6, 72, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(6, 72, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 17:09:52,652] DEBUG django.db.backends (0.016) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Kayla Black', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-12', 4, 2) RETURNING "scheduling_booking"."id"; args=('Kayla Black', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-12', 4, 2); alias=default
[2025-09-30 17:09:52,653] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:52,653] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 73, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(8, 73, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 17:09:52,653] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 73, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(7, 73, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 17:09:52,653] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (10, 73, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(10, 73, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 17:09:52,670] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Samantha Rojas', '123 Greenville Ave, Dallas, TX 75206', '2025-10-12', 2, 3) RETURNING "scheduling_booking"."id"; args=('Samantha Rojas', '123 Greenville Ave, Dallas, TX 75206', '2025-10-12', 2, 3); alias=default
[2025-09-30 17:09:52,670] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:52,670] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 74, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(11, 74, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:52,670] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 74, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(15, 74, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:52,686] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Andrew Wilson', '7000 Mockingbird Ln, Dallas, TX 75214', '2025-10-12', 3, 3) RETURNING "scheduling_booking"."id"; args=('Andrew Wilson', '7000 Mockingbird Ln, Dallas, TX 75214', '2025-10-12', 3, 3); alias=default
[2025-09-30 17:09:52,686] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:52,686] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 75, '7000 Mockingbird Ln, Dallas, TX 75214') RETURNING "scheduling_jobassignment"."id"; args=(12, 75, '7000 Mockingbird Ln, Dallas, TX 75214'); alias=default
[2025-09-30 17:09:52,703] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 75, '7000 Mockingbird Ln, Dallas, TX 75214') RETURNING "scheduling_jobassignment"."id"; args=(14, 75, '7000 Mockingbird Ln, Dallas, TX 75214'); alias=default
[2025-09-30 17:09:52,703] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Tyler Anderson', '7000 Mockingbird Ln, Dallas, TX 75214', '2025-10-12', 4, 3) RETURNING "scheduling_booking"."id"; args=('Tyler Anderson', '7000 Mockingbird Ln, Dallas, TX 75214', '2025-10-12', 4, 3); alias=default
[2025-09-30 17:09:52,703] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:52,703] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 76, '7000 Mockingbird Ln, Dallas, TX 75214') RETURNING "scheduling_jobassignment"."id"; args=(15, 76, '7000 Mockingbird Ln, Dallas, TX 75214'); alias=default
[2025-09-30 17:09:52,721] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Shaun Grant', '4500 Harry Hines Blvd, Dallas, TX 75219', '2025-10-13', 1, 2) RETURNING "scheduling_booking"."id"; args=('Shaun Grant', '4500 Harry Hines Blvd, Dallas, TX 75219', '2025-10-13', 1, 2); alias=default
[2025-09-30 17:09:52,726] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:52,727] DEBUG django.db.backends (0.015) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 77, '4500 Harry Hines Blvd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(7, 77, '4500 Harry Hines Blvd, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:52,732] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Eric Lindsey', '12200 Preston Rd, Dallas, TX 75230', '2025-10-13', 3, 2) RETURNING "scheduling_booking"."id"; args=('Eric Lindsey', '12200 Preston Rd, Dallas, TX 75230', '2025-10-13', 3, 2); alias=default
[2025-09-30 17:09:52,736] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:52,737] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (6, 78, '12200 Preston Rd, Dallas, TX 75230') RETURNING "scheduling_jobassignment"."id"; args=(6, 78, '12200 Preston Rd, Dallas, TX 75230'); alias=default
[2025-09-30 17:09:52,737] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (10, 78, '12200 Preston Rd, Dallas, TX 75230') RETURNING "scheduling_jobassignment"."id"; args=(10, 78, '12200 Preston Rd, Dallas, TX 75230'); alias=default
[2025-09-30 17:09:52,737] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 78, '12200 Preston Rd, Dallas, TX 75230') RETURNING "scheduling_jobassignment"."id"; args=(9, 78, '12200 Preston Rd, Dallas, TX 75230'); alias=default
[2025-09-30 17:09:52,753] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Nicole Lee', '7800 N Stemmons Fwy, Dallas, TX 75247', '2025-10-13', 4, 2) RETURNING "scheduling_booking"."id"; args=('Nicole Lee', '7800 N Stemmons Fwy, Dallas, TX 75247', '2025-10-13', 4, 2); alias=default
[2025-09-30 17:09:52,753] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:52,753] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (6, 79, '7800 N Stemmons Fwy, Dallas, TX 75247') RETURNING "scheduling_jobassignment"."id"; args=(6, 79, '7800 N Stemmons Fwy, Dallas, TX 75247'); alias=default
[2025-09-30 17:09:52,753] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 79, '7800 N Stemmons Fwy, Dallas, TX 75247') RETURNING "scheduling_jobassignment"."id"; args=(9, 79, '7800 N Stemmons Fwy, Dallas, TX 75247'); alias=default
[2025-09-30 17:09:52,770] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('John Campos', '12200 Preston Rd, Dallas, TX 75230', '2025-10-13', 1, 3) RETURNING "scheduling_booking"."id"; args=('John Campos', '12200 Preston Rd, Dallas, TX 75230', '2025-10-13', 1, 3); alias=default
[2025-09-30 17:09:52,770] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:52,770] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 80, '12200 Preston Rd, Dallas, TX 75230') RETURNING "scheduling_jobassignment"."id"; args=(12, 80, '12200 Preston Rd, Dallas, TX 75230'); alias=default
[2025-09-30 17:09:52,770] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 80, '12200 Preston Rd, Dallas, TX 75230') RETURNING "scheduling_jobassignment"."id"; args=(11, 80, '12200 Preston Rd, Dallas, TX 75230'); alias=default
[2025-09-30 17:09:52,786] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 80, '12200 Preston Rd, Dallas, TX 75230') RETURNING "scheduling_jobassignment"."id"; args=(15, 80, '12200 Preston Rd, Dallas, TX 75230'); alias=default
[2025-09-30 17:09:52,786] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Nathan Alexander', '4000 Cedar Springs Rd, Dallas, TX 75219', '2025-10-13', 2, 3) RETURNING "scheduling_booking"."id"; args=('Nathan Alexander', '4000 Cedar Springs Rd, Dallas, TX 75219', '2025-10-13', 2, 3); alias=default
[2025-09-30 17:09:52,786] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:52,786] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 81, '4000 Cedar Springs Rd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(13, 81, '4000 Cedar Springs Rd, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:52,803] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Richard Smith', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-13', 3, 3) RETURNING "scheduling_booking"."id"; args=('Richard Smith', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-13', 3, 3); alias=default
[2025-09-30 17:09:52,803] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:52,803] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 82, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(15, 82, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 17:09:52,803] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 82, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(13, 82, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 17:09:52,819] DEBUG django.db.backends (0.015) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 82, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(14, 82, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 17:09:52,820] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Cheryl Martinez', '1234 Lovers Ln, Dallas, TX 75225', '2025-10-13', 4, 3) RETURNING "scheduling_booking"."id"; args=('Cheryl Martinez', '1234 Lovers Ln, Dallas, TX 75225', '2025-10-13', 4, 3); alias=default
[2025-09-30 17:09:52,820] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:52,820] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 83, '1234 Lovers Ln, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(15, 83, '1234 Lovers Ln, Dallas, TX 75225'); alias=default
[2025-09-30 17:09:52,835] DEBUG django.db.backends (0.016) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 83, '1234 Lovers Ln, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(12, 83, '1234 Lovers Ln, Dallas, TX 75225'); alias=default
[2025-09-30 17:09:52,836] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Daniel Mcdonald', '123 Greenville Ave, Dallas, TX 75206', '2025-10-14', 2, 1) RETURNING "scheduling_booking"."id"; args=('Daniel Mcdonald', '123 Greenville Ave, Dallas, TX 75206', '2025-10-14', 2, 1); alias=default
[2025-09-30 17:09:52,836] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:52,836] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 84, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(1, 84, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:52,852] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 84, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(2, 84, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:52,854] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Matthew White', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-14', 1, 2) RETURNING "scheduling_booking"."id"; args=('Matthew White', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-14', 1, 2); alias=default
[2025-09-30 17:09:52,854] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:52,854] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 85, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(7, 85, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:52,870] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (6, 85, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(6, 85, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:52,870] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 85, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(8, 85, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:52,870] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jamie Stewart', '100 Highland Park Village, Dallas, TX 75205', '2025-10-14', 2, 2) RETURNING "scheduling_booking"."id"; args=('Jamie Stewart', '100 Highland Park Village, Dallas, TX 75205', '2025-10-14', 2, 2); alias=default
[2025-09-30 17:09:52,888] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:52,890] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 86, '100 Highland Park Village, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(9, 86, '100 Highland Park Village, Dallas, TX 75205'); alias=default
[2025-09-30 17:09:52,893] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (6, 86, '100 Highland Park Village, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(6, 86, '100 Highland Park Village, Dallas, TX 75205'); alias=default
[2025-09-30 17:09:52,893] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 86, '100 Highland Park Village, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(7, 86, '100 Highland Park Village, Dallas, TX 75205'); alias=default
[2025-09-30 17:09:52,907] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Scott Chapman PhD', '8900 Hillcrest Rd, Dallas, TX 75225', '2025-10-14', 3, 2) RETURNING "scheduling_booking"."id"; args=('Scott Chapman PhD', '8900 Hillcrest Rd, Dallas, TX 75225', '2025-10-14', 3, 2); alias=default
[2025-09-30 17:09:52,913] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:52,914] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 87, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(7, 87, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 17:09:52,919] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 87, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(9, 87, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 17:09:52,923] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Christopher Atkinson', '4000 Cedar Springs Rd, Dallas, TX 75219', '2025-10-14', 4, 2) RETURNING "scheduling_booking"."id"; args=('Christopher Atkinson', '4000 Cedar Springs Rd, Dallas, TX 75219', '2025-10-14', 4, 2); alias=default
[2025-09-30 17:09:52,928] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:52,929] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 88, '4000 Cedar Springs Rd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(9, 88, '4000 Cedar Springs Rd, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:52,934] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Dr. Teresa Williams', '2500 Cedar Springs Rd, Dallas, TX 75201', '2025-10-14', 3, 3) RETURNING "scheduling_booking"."id"; args=('Dr. Teresa Williams', '2500 Cedar Springs Rd, Dallas, TX 75201', '2025-10-14', 3, 3); alias=default
[2025-09-30 17:09:52,936] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:52,936] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 89, '2500 Cedar Springs Rd, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(12, 89, '2500 Cedar Springs Rd, Dallas, TX 75201'); alias=default
[2025-09-30 17:09:52,936] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('David Riggs', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-15', 1, 1) RETURNING "scheduling_booking"."id"; args=('David Riggs', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-15', 1, 1); alias=default
[2025-09-30 17:09:52,936] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:52,936] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 90, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(2, 90, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:52,954] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (3, 90, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(3, 90, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:52,954] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Johnny Mejia', '4800 W Lovers Ln, Dallas, TX 75209', '2025-10-15', 2, 1) RETURNING "scheduling_booking"."id"; args=('Johnny Mejia', '4800 W Lovers Ln, Dallas, TX 75209', '2025-10-15', 2, 1); alias=default
[2025-09-30 17:09:52,954] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:52,954] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 91, '4800 W Lovers Ln, Dallas, TX 75209') RETURNING "scheduling_jobassignment"."id"; args=(1, 91, '4800 W Lovers Ln, Dallas, TX 75209'); alias=default
[2025-09-30 17:09:52,970] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (4, 91, '4800 W Lovers Ln, Dallas, TX 75209') RETURNING "scheduling_jobassignment"."id"; args=(4, 91, '4800 W Lovers Ln, Dallas, TX 75209'); alias=default
[2025-09-30 17:09:52,970] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 91, '4800 W Lovers Ln, Dallas, TX 75209') RETURNING "scheduling_jobassignment"."id"; args=(2, 91, '4800 W Lovers Ln, Dallas, TX 75209'); alias=default
[2025-09-30 17:09:52,970] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Cathy Guzman', '5600 Ross Ave, Dallas, TX 75206', '2025-10-15', 1, 2) RETURNING "scheduling_booking"."id"; args=('Cathy Guzman', '5600 Ross Ave, Dallas, TX 75206', '2025-10-15', 1, 2); alias=default
[2025-09-30 17:09:52,986] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:52,986] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 92, '5600 Ross Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(8, 92, '5600 Ross Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:52,986] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Ryan Sullivan', '1234 Lovers Ln, Dallas, TX 75225', '2025-10-15', 2, 3) RETURNING "scheduling_booking"."id"; args=('Ryan Sullivan', '1234 Lovers Ln, Dallas, TX 75225', '2025-10-15', 2, 3); alias=default
[2025-09-30 17:09:52,986] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:52,986] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 93, '1234 Lovers Ln, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(12, 93, '1234 Lovers Ln, Dallas, TX 75225'); alias=default
[2025-09-30 17:09:53,001] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 93, '1234 Lovers Ln, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(15, 93, '1234 Lovers Ln, Dallas, TX 75225'); alias=default
[2025-09-30 17:09:53,001] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 93, '1234 Lovers Ln, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(14, 93, '1234 Lovers Ln, Dallas, TX 75225'); alias=default
[2025-09-30 17:09:53,001] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Amber Diaz', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-15', 3, 3) RETURNING "scheduling_booking"."id"; args=('Amber Diaz', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-15', 3, 3); alias=default
[2025-09-30 17:09:53,017] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:53,017] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 94, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(11, 94, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 17:09:53,017] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 94, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(15, 94, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 17:09:53,017] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Denise Ryan', '1234 Lovers Ln, Dallas, TX 75225', '2025-10-15', 4, 3) RETURNING "scheduling_booking"."id"; args=('Denise Ryan', '1234 Lovers Ln, Dallas, TX 75225', '2025-10-15', 4, 3); alias=default
[2025-09-30 17:09:53,034] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:53,035] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 95, '1234 Lovers Ln, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(12, 95, '1234 Lovers Ln, Dallas, TX 75225'); alias=default
[2025-09-30 17:09:53,039] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Brandon Brooks', '12200 Preston Rd, Dallas, TX 75230', '2025-10-16', 1, 1) RETURNING "scheduling_booking"."id"; args=('Brandon Brooks', '12200 Preston Rd, Dallas, TX 75230', '2025-10-16', 1, 1); alias=default
[2025-09-30 17:09:53,044] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:53,045] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (3, 96, '12200 Preston Rd, Dallas, TX 75230') RETURNING "scheduling_jobassignment"."id"; args=(3, 96, '12200 Preston Rd, Dallas, TX 75230'); alias=default
[2025-09-30 17:09:53,051] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Anthony Ramos', '4800 W Lovers Ln, Dallas, TX 75209', '2025-10-16', 4, 2) RETURNING "scheduling_booking"."id"; args=('Anthony Ramos', '4800 W Lovers Ln, Dallas, TX 75209', '2025-10-16', 4, 2); alias=default
[2025-09-30 17:09:53,063] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:53,063] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 97, '4800 W Lovers Ln, Dallas, TX 75209') RETURNING "scheduling_jobassignment"."id"; args=(9, 97, '4800 W Lovers Ln, Dallas, TX 75209'); alias=default
[2025-09-30 17:09:53,063] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 97, '4800 W Lovers Ln, Dallas, TX 75209') RETURNING "scheduling_jobassignment"."id"; args=(7, 97, '4800 W Lovers Ln, Dallas, TX 75209'); alias=default
[2025-09-30 17:09:53,078] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 97, '4800 W Lovers Ln, Dallas, TX 75209') RETURNING "scheduling_jobassignment"."id"; args=(8, 97, '4800 W Lovers Ln, Dallas, TX 75209'); alias=default
[2025-09-30 17:09:53,078] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Philip Miller', '4000 Cedar Springs Rd, Dallas, TX 75219', '2025-10-16', 1, 3) RETURNING "scheduling_booking"."id"; args=('Philip Miller', '4000 Cedar Springs Rd, Dallas, TX 75219', '2025-10-16', 1, 3); alias=default
[2025-09-30 17:09:53,094] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:53,110] DEBUG django.db.backends (0.015) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 98, '4000 Cedar Springs Rd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(12, 98, '4000 Cedar Springs Rd, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:53,110] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jennifer Wood', '6000 Preston Rd, Dallas, TX 75205', '2025-10-16', 2, 3) RETURNING "scheduling_booking"."id"; args=('Jennifer Wood', '6000 Preston Rd, Dallas, TX 75205', '2025-10-16', 2, 3); alias=default
[2025-09-30 17:09:53,110] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:53,110] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 99, '6000 Preston Rd, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(15, 99, '6000 Preston Rd, Dallas, TX 75205'); alias=default
[2025-09-30 17:09:53,125] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 99, '6000 Preston Rd, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(12, 99, '6000 Preston Rd, Dallas, TX 75205'); alias=default
[2025-09-30 17:09:53,125] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 99, '6000 Preston Rd, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(13, 99, '6000 Preston Rd, Dallas, TX 75205'); alias=default
[2025-09-30 17:09:53,125] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Nancy Payne', '4500 Harry Hines Blvd, Dallas, TX 75219', '2025-10-17', 2, 1) RETURNING "scheduling_booking"."id"; args=('Nancy Payne', '4500 Harry Hines Blvd, Dallas, TX 75219', '2025-10-17', 2, 1); alias=default
[2025-09-30 17:09:53,141] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:53,142] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 100, '4500 Harry Hines Blvd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(1, 100, '4500 Harry Hines Blvd, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:53,147] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 100, '4500 Harry Hines Blvd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(2, 100, '4500 Harry Hines Blvd, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:53,152] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Patrick Garcia Jr.', '1400 Pacific Ave, Dallas, TX 75202', '2025-10-17', 4, 1) RETURNING "scheduling_booking"."id"; args=('Patrick Garcia Jr.', '1400 Pacific Ave, Dallas, TX 75202', '2025-10-17', 4, 1); alias=default
[2025-09-30 17:09:53,156] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:53,157] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 101, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(2, 101, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 17:09:53,162] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 101, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(1, 101, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 17:09:53,166] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Stephanie Patel', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-17', 1, 2) RETURNING "scheduling_booking"."id"; args=('Stephanie Patel', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-17', 1, 2); alias=default
[2025-09-30 17:09:53,170] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:53,171] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (6, 102, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(6, 102, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:53,172] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 102, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(7, 102, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:53,172] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 102, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(8, 102, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:53,172] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Janet Ramirez', '4000 Cedar Springs Rd, Dallas, TX 75219', '2025-10-17', 2, 2) RETURNING "scheduling_booking"."id"; args=('Janet Ramirez', '4000 Cedar Springs Rd, Dallas, TX 75219', '2025-10-17', 2, 2); alias=default
[2025-09-30 17:09:53,188] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:53,188] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (6, 103, '4000 Cedar Springs Rd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(6, 103, '4000 Cedar Springs Rd, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:53,188] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Michael Peterson', '123 Greenville Ave, Dallas, TX 75206', '2025-10-17', 4, 2) RETURNING "scheduling_booking"."id"; args=('Michael Peterson', '123 Greenville Ave, Dallas, TX 75206', '2025-10-17', 4, 2); alias=default
[2025-09-30 17:09:53,188] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:53,188] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 104, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(8, 104, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:53,203] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Brianna Thomas', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-17', 1, 3) RETURNING "scheduling_booking"."id"; args=('Brianna Thomas', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-17', 1, 3); alias=default
[2025-09-30 17:09:53,301] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:53,302] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 105, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(15, 105, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:53,307] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 105, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(11, 105, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:53,312] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 105, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(13, 105, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:53,317] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Michael Moreno', '100 Highland Park Village, Dallas, TX 75205', '2025-10-17', 3, 3) RETURNING "scheduling_booking"."id"; args=('Michael Moreno', '100 Highland Park Village, Dallas, TX 75205', '2025-10-17', 3, 3); alias=default
[2025-09-30 17:09:53,321] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:53,322] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 106, '100 Highland Park Village, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(13, 106, '100 Highland Park Village, Dallas, TX 75205'); alias=default
[2025-09-30 17:09:53,328] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 106, '100 Highland Park Village, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(15, 106, '100 Highland Park Village, Dallas, TX 75205'); alias=default
[2025-09-30 17:09:53,332] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 106, '100 Highland Park Village, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(11, 106, '100 Highland Park Village, Dallas, TX 75205'); alias=default
[2025-09-30 17:09:53,336] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Diane Williams', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-17', 4, 3) RETURNING "scheduling_booking"."id"; args=('Diane Williams', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-17', 4, 3); alias=default
[2025-09-30 17:09:53,336] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:53,336] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 107, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(11, 107, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:53,351] DEBUG django.db.backends (0.016) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jessica Werner', '4500 Harry Hines Blvd, Dallas, TX 75219', '2025-10-18', 2, 1) RETURNING "scheduling_booking"."id"; args=('Jessica Werner', '4500 Harry Hines Blvd, Dallas, TX 75219', '2025-10-18', 2, 1); alias=default
[2025-09-30 17:09:53,351] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:53,351] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (3, 108, '4500 Harry Hines Blvd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(3, 108, '4500 Harry Hines Blvd, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:53,351] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 108, '4500 Harry Hines Blvd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(2, 108, '4500 Harry Hines Blvd, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:53,351] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Mrs. Nancy Green', '7800 N Stemmons Fwy, Dallas, TX 75247', '2025-10-18', 3, 1) RETURNING "scheduling_booking"."id"; args=('Mrs. Nancy Green', '7800 N Stemmons Fwy, Dallas, TX 75247', '2025-10-18', 3, 1); alias=default
[2025-09-30 17:09:53,367] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:53,367] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 109, '7800 N Stemmons Fwy, Dallas, TX 75247') RETURNING "scheduling_jobassignment"."id"; args=(2, 109, '7800 N Stemmons Fwy, Dallas, TX 75247'); alias=default
[2025-09-30 17:09:53,367] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Dana Martin', '9999 Forest Ln, Dallas, TX 75243', '2025-10-18', 2, 2) RETURNING "scheduling_booking"."id"; args=('Dana Martin', '9999 Forest Ln, Dallas, TX 75243', '2025-10-18', 2, 2); alias=default
[2025-09-30 17:09:53,367] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:53,367] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (10, 110, '9999 Forest Ln, Dallas, TX 75243') RETURNING "scheduling_jobassignment"."id"; args=(10, 110, '9999 Forest Ln, Dallas, TX 75243'); alias=default
[2025-09-30 17:09:53,383] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 110, '9999 Forest Ln, Dallas, TX 75243') RETURNING "scheduling_jobassignment"."id"; args=(9, 110, '9999 Forest Ln, Dallas, TX 75243'); alias=default
[2025-09-30 17:09:53,383] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 110, '9999 Forest Ln, Dallas, TX 75243') RETURNING "scheduling_jobassignment"."id"; args=(7, 110, '9999 Forest Ln, Dallas, TX 75243'); alias=default
[2025-09-30 17:09:53,383] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jon Gray', '123 Greenville Ave, Dallas, TX 75206', '2025-10-18', 3, 3) RETURNING "scheduling_booking"."id"; args=('Jon Gray', '123 Greenville Ave, Dallas, TX 75206', '2025-10-18', 3, 3); alias=default
[2025-09-30 17:09:53,398] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:53,398] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 111, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(12, 111, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:53,398] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('George Huffman', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-19', 3, 1) RETURNING "scheduling_booking"."id"; args=('George Huffman', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-19', 3, 1); alias=default
[2025-09-30 17:09:53,398] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:53,398] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 112, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(2, 112, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 17:09:53,398] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 112, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(5, 112, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 17:09:53,414] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Eric Houston', '12200 Preston Rd, Dallas, TX 75230', '2025-10-19', 1, 2) RETURNING "scheduling_booking"."id"; args=('Eric Houston', '12200 Preston Rd, Dallas, TX 75230', '2025-10-19', 1, 2); alias=default
[2025-09-30 17:09:53,414] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:53,414] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 113, '12200 Preston Rd, Dallas, TX 75230') RETURNING "scheduling_jobassignment"."id"; args=(9, 113, '12200 Preston Rd, Dallas, TX 75230'); alias=default
[2025-09-30 17:09:53,429] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 113, '12200 Preston Rd, Dallas, TX 75230') RETURNING "scheduling_jobassignment"."id"; args=(8, 113, '12200 Preston Rd, Dallas, TX 75230'); alias=default
[2025-09-30 17:09:53,429] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Stacy Chavez', '4000 Cedar Springs Rd, Dallas, TX 75219', '2025-10-19', 2, 2) RETURNING "scheduling_booking"."id"; args=('Stacy Chavez', '4000 Cedar Springs Rd, Dallas, TX 75219', '2025-10-19', 2, 2); alias=default
[2025-09-30 17:09:53,445] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:53,445] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 114, '4000 Cedar Springs Rd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(8, 114, '4000 Cedar Springs Rd, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:53,445] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 114, '4000 Cedar Springs Rd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(7, 114, '4000 Cedar Springs Rd, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:53,445] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (10, 114, '4000 Cedar Springs Rd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(10, 114, '4000 Cedar Springs Rd, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:53,461] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Chris Stephenson', '4000 Cedar Springs Rd, Dallas, TX 75219', '2025-10-19', 4, 3) RETURNING "scheduling_booking"."id"; args=('Chris Stephenson', '4000 Cedar Springs Rd, Dallas, TX 75219', '2025-10-19', 4, 3); alias=default
[2025-09-30 17:09:53,461] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:53,461] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 115, '4000 Cedar Springs Rd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(11, 115, '4000 Cedar Springs Rd, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:53,461] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Charles Boyd', '5600 Ross Ave, Dallas, TX 75206', '2025-10-20', 1, 1) RETURNING "scheduling_booking"."id"; args=('Charles Boyd', '5600 Ross Ave, Dallas, TX 75206', '2025-10-20', 1, 1); alias=default
[2025-09-30 17:09:53,476] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:53,476] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (3, 116, '5600 Ross Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(3, 116, '5600 Ross Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:53,481] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 116, '5600 Ross Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(1, 116, '5600 Ross Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:53,485] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Melissa Taylor', '5600 Ross Ave, Dallas, TX 75206', '2025-10-20', 2, 1) RETURNING "scheduling_booking"."id"; args=('Melissa Taylor', '5600 Ross Ave, Dallas, TX 75206', '2025-10-20', 2, 1); alias=default
[2025-09-30 17:09:53,485] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:53,485] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 117, '5600 Ross Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(1, 117, '5600 Ross Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:53,485] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (4, 117, '5600 Ross Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(4, 117, '5600 Ross Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:53,485] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 117, '5600 Ross Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(5, 117, '5600 Ross Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:53,501] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Sherry Morrison', '2200 N Pearl St, Dallas, TX 75201', '2025-10-20', 1, 2) RETURNING "scheduling_booking"."id"; args=('Sherry Morrison', '2200 N Pearl St, Dallas, TX 75201', '2025-10-20', 1, 2); alias=default
[2025-09-30 17:09:53,501] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:53,501] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 118, '2200 N Pearl St, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(9, 118, '2200 N Pearl St, Dallas, TX 75201'); alias=default
[2025-09-30 17:09:53,501] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 118, '2200 N Pearl St, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(8, 118, '2200 N Pearl St, Dallas, TX 75201'); alias=default
[2025-09-30 17:09:53,516] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 118, '2200 N Pearl St, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(7, 118, '2200 N Pearl St, Dallas, TX 75201'); alias=default
[2025-09-30 17:09:53,516] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Mark Hanson', '5600 Ross Ave, Dallas, TX 75206', '2025-10-21', 3, 1) RETURNING "scheduling_booking"."id"; args=('Mark Hanson', '5600 Ross Ave, Dallas, TX 75206', '2025-10-21', 3, 1); alias=default
[2025-09-30 17:09:53,516] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:53,516] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (3, 119, '5600 Ross Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(3, 119, '5600 Ross Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:53,532] DEBUG django.db.backends (0.016) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Melissa Richardson', '5600 Ross Ave, Dallas, TX 75206', '2025-10-21', 2, 2) RETURNING "scheduling_booking"."id"; args=('Melissa Richardson', '5600 Ross Ave, Dallas, TX 75206', '2025-10-21', 2, 2); alias=default
[2025-09-30 17:09:53,532] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:53,532] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (6, 120, '5600 Ross Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(6, 120, '5600 Ross Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:53,532] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jennifer Stark', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-21', 3, 2) RETURNING "scheduling_booking"."id"; args=('Jennifer Stark', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-21', 3, 2); alias=default
[2025-09-30 17:09:53,532] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:53,532] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (10, 121, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(10, 121, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:53,548] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Sean Riley', '4000 Cedar Springs Rd, Dallas, TX 75219', '2025-10-21', 4, 2) RETURNING "scheduling_booking"."id"; args=('Sean Riley', '4000 Cedar Springs Rd, Dallas, TX 75219', '2025-10-21', 4, 2); alias=default
[2025-09-30 17:09:53,548] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:53,548] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 122, '4000 Cedar Springs Rd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(8, 122, '4000 Cedar Springs Rd, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:53,548] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (10, 122, '4000 Cedar Springs Rd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(10, 122, '4000 Cedar Springs Rd, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:53,566] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 122, '4000 Cedar Springs Rd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(7, 122, '4000 Cedar Springs Rd, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:53,571] DEBUG django.db.backends (0.016) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Daisy Franklin', '5600 Ross Ave, Dallas, TX 75206', '2025-10-22', 1, 1) RETURNING "scheduling_booking"."id"; args=('Daisy Franklin', '5600 Ross Ave, Dallas, TX 75206', '2025-10-22', 1, 1); alias=default
[2025-09-30 17:09:53,574] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:53,575] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (4, 123, '5600 Ross Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(4, 123, '5600 Ross Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:53,580] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('David Daniels', '8900 Hillcrest Rd, Dallas, TX 75225', '2025-10-22', 3, 1) RETURNING "scheduling_booking"."id"; args=('David Daniels', '8900 Hillcrest Rd, Dallas, TX 75225', '2025-10-22', 3, 1); alias=default
[2025-09-30 17:09:53,584] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:53,585] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 124, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(2, 124, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 17:09:53,589] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 124, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(5, 124, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 17:09:53,594] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (4, 124, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(4, 124, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 17:09:53,594] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Joseph Smith', '123 Greenville Ave, Dallas, TX 75206', '2025-10-22', 4, 2) RETURNING "scheduling_booking"."id"; args=('Joseph Smith', '123 Greenville Ave, Dallas, TX 75206', '2025-10-22', 4, 2); alias=default
[2025-09-30 17:09:53,594] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:53,594] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (10, 125, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(10, 125, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:53,594] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Carlos Freeman', '9999 Forest Ln, Dallas, TX 75243', '2025-10-22', 2, 3) RETURNING "scheduling_booking"."id"; args=('Carlos Freeman', '9999 Forest Ln, Dallas, TX 75243', '2025-10-22', 2, 3); alias=default
[2025-09-30 17:09:53,610] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:53,610] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 126, '9999 Forest Ln, Dallas, TX 75243') RETURNING "scheduling_jobassignment"."id"; args=(15, 126, '9999 Forest Ln, Dallas, TX 75243'); alias=default
[2025-09-30 17:09:53,610] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 126, '9999 Forest Ln, Dallas, TX 75243') RETURNING "scheduling_jobassignment"."id"; args=(11, 126, '9999 Forest Ln, Dallas, TX 75243'); alias=default
[2025-09-30 17:09:53,610] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Michael Mcgrath', '1400 Pacific Ave, Dallas, TX 75202', '2025-10-23', 3, 2) RETURNING "scheduling_booking"."id"; args=('Michael Mcgrath', '1400 Pacific Ave, Dallas, TX 75202', '2025-10-23', 3, 2); alias=default
[2025-09-30 17:09:53,625] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:53,625] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 127, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(8, 127, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 17:09:53,625] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 127, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(7, 127, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 17:09:53,625] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Charles Jordan', '4500 Harry Hines Blvd, Dallas, TX 75219', '2025-10-23', 4, 2) RETURNING "scheduling_booking"."id"; args=('Charles Jordan', '4500 Harry Hines Blvd, Dallas, TX 75219', '2025-10-23', 4, 2); alias=default
[2025-09-30 17:09:53,641] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:53,641] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (10, 128, '4500 Harry Hines Blvd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(10, 128, '4500 Harry Hines Blvd, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:53,641] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 128, '4500 Harry Hines Blvd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(9, 128, '4500 Harry Hines Blvd, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:53,641] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('George Anderson', '123 Greenville Ave, Dallas, TX 75206', '2025-10-23', 2, 3) RETURNING "scheduling_booking"."id"; args=('George Anderson', '123 Greenville Ave, Dallas, TX 75206', '2025-10-23', 2, 3); alias=default
[2025-09-30 17:09:53,641] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:53,641] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 129, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(14, 129, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:53,656] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Anthony Moore', '7000 Mockingbird Ln, Dallas, TX 75214', '2025-10-24', 1, 1) RETURNING "scheduling_booking"."id"; args=('Anthony Moore', '7000 Mockingbird Ln, Dallas, TX 75214', '2025-10-24', 1, 1); alias=default
[2025-09-30 17:09:53,656] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:53,656] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (3, 130, '7000 Mockingbird Ln, Dallas, TX 75214') RETURNING "scheduling_jobassignment"."id"; args=(3, 130, '7000 Mockingbird Ln, Dallas, TX 75214'); alias=default
[2025-09-30 17:09:53,656] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 130, '7000 Mockingbird Ln, Dallas, TX 75214') RETURNING "scheduling_jobassignment"."id"; args=(2, 130, '7000 Mockingbird Ln, Dallas, TX 75214'); alias=default
[2025-09-30 17:09:53,673] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (4, 130, '7000 Mockingbird Ln, Dallas, TX 75214') RETURNING "scheduling_jobassignment"."id"; args=(4, 130, '7000 Mockingbird Ln, Dallas, TX 75214'); alias=default
[2025-09-30 17:09:53,673] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Phillip Conner', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-24', 4, 2) RETURNING "scheduling_booking"."id"; args=('Phillip Conner', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-24', 4, 2); alias=default
[2025-09-30 17:09:53,673] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:53,673] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 131, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(9, 131, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 17:09:53,689] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jennifer Wolf', '1400 Pacific Ave, Dallas, TX 75202', '2025-10-24', 1, 3) RETURNING "scheduling_booking"."id"; args=('Jennifer Wolf', '1400 Pacific Ave, Dallas, TX 75202', '2025-10-24', 1, 3); alias=default
[2025-09-30 17:09:53,692] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:53,693] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 132, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(11, 132, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 17:09:53,697] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 132, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(15, 132, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 17:09:53,701] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 132, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(14, 132, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 17:09:53,703] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Michele Preston', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-24', 3, 3) RETURNING "scheduling_booking"."id"; args=('Michele Preston', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-24', 3, 3); alias=default
[2025-09-30 17:09:53,703] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:53,703] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 133, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(13, 133, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 17:09:53,703] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Aaron Ward', '6000 Preston Rd, Dallas, TX 75205', '2025-10-25', 3, 1) RETURNING "scheduling_booking"."id"; args=('Aaron Ward', '6000 Preston Rd, Dallas, TX 75205', '2025-10-25', 3, 1); alias=default
[2025-09-30 17:09:53,719] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:53,719] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 134, '6000 Preston Rd, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(1, 134, '6000 Preston Rd, Dallas, TX 75205'); alias=default
[2025-09-30 17:09:53,719] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 134, '6000 Preston Rd, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(5, 134, '6000 Preston Rd, Dallas, TX 75205'); alias=default
[2025-09-30 17:09:53,719] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Charles Mcbride', '4100 Lomo Alto Dr, Dallas, TX 75219', '2025-10-25', 1, 2) RETURNING "scheduling_booking"."id"; args=('Charles Mcbride', '4100 Lomo Alto Dr, Dallas, TX 75219', '2025-10-25', 1, 2); alias=default
[2025-09-30 17:09:53,734] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:53,734] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 135, '4100 Lomo Alto Dr, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(9, 135, '4100 Lomo Alto Dr, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:53,734] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Kathryn Ellis', '100 Highland Park Village, Dallas, TX 75205', '2025-10-25', 3, 2) RETURNING "scheduling_booking"."id"; args=('Kathryn Ellis', '100 Highland Park Village, Dallas, TX 75205', '2025-10-25', 3, 2); alias=default
[2025-09-30 17:09:53,734] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:53,734] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (10, 136, '100 Highland Park Village, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(10, 136, '100 Highland Park Village, Dallas, TX 75205'); alias=default
[2025-09-30 17:09:53,750] DEBUG django.db.backends (0.016) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Destiny Ross DDS', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-25', 4, 2) RETURNING "scheduling_booking"."id"; args=('Destiny Ross DDS', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-25', 4, 2); alias=default
[2025-09-30 17:09:53,750] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:53,750] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 137, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(7, 137, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 17:09:53,750] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Savannah Perez', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-25', 2, 3) RETURNING "scheduling_booking"."id"; args=('Savannah Perez', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-25', 2, 3); alias=default
[2025-09-30 17:09:53,750] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:53,750] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 138, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(15, 138, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 17:09:53,766] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 138, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(14, 138, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 17:09:53,766] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Roy Burns', '4500 Harry Hines Blvd, Dallas, TX 75219', '2025-10-25', 3, 3) RETURNING "scheduling_booking"."id"; args=('Roy Burns', '4500 Harry Hines Blvd, Dallas, TX 75219', '2025-10-25', 3, 3); alias=default
[2025-09-30 17:09:53,766] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:53,766] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 139, '4500 Harry Hines Blvd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(15, 139, '4500 Harry Hines Blvd, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:53,781] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 139, '4500 Harry Hines Blvd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(11, 139, '4500 Harry Hines Blvd, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:53,781] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 139, '4500 Harry Hines Blvd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(12, 139, '4500 Harry Hines Blvd, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:53,781] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Lawrence Mccarty', '2200 N Pearl St, Dallas, TX 75201', '2025-10-25', 4, 3) RETURNING "scheduling_booking"."id"; args=('Lawrence Mccarty', '2200 N Pearl St, Dallas, TX 75201', '2025-10-25', 4, 3); alias=default
[2025-09-30 17:09:53,797] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:53,797] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 140, '2200 N Pearl St, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(12, 140, '2200 N Pearl St, Dallas, TX 75201'); alias=default
[2025-09-30 17:09:53,797] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 140, '2200 N Pearl St, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(13, 140, '2200 N Pearl St, Dallas, TX 75201'); alias=default
[2025-09-30 17:09:53,797] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 140, '2200 N Pearl St, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(14, 140, '2200 N Pearl St, Dallas, TX 75201'); alias=default
[2025-09-30 17:09:53,797] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Daniel Pham', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-26', 3, 1) RETURNING "scheduling_booking"."id"; args=('Daniel Pham', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-26', 3, 1); alias=default
[2025-09-30 17:09:53,812] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:53,812] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (4, 141, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(4, 141, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:53,812] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Robert Bowman', '1400 Pacific Ave, Dallas, TX 75202', '2025-10-26', 3, 2) RETURNING "scheduling_booking"."id"; args=('Robert Bowman', '1400 Pacific Ave, Dallas, TX 75202', '2025-10-26', 3, 2); alias=default
[2025-09-30 17:09:53,825] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:53,826] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (10, 142, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(10, 142, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 17:09:53,830] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 142, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(7, 142, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 17:09:53,836] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Samantha Adams', '2200 N Pearl St, Dallas, TX 75201', '2025-10-26', 2, 3) RETURNING "scheduling_booking"."id"; args=('Samantha Adams', '2200 N Pearl St, Dallas, TX 75201', '2025-10-26', 2, 3); alias=default
[2025-09-30 17:09:53,839] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:53,841] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 143, '2200 N Pearl St, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(12, 143, '2200 N Pearl St, Dallas, TX 75201'); alias=default
[2025-09-30 17:09:53,846] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Patricia Sanchez', '2500 Cedar Springs Rd, Dallas, TX 75201', '2025-10-26', 4, 3) RETURNING "scheduling_booking"."id"; args=('Patricia Sanchez', '2500 Cedar Springs Rd, Dallas, TX 75201', '2025-10-26', 4, 3); alias=default
[2025-09-30 17:09:53,850] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:53,851] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 144, '2500 Cedar Springs Rd, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(11, 144, '2500 Cedar Springs Rd, Dallas, TX 75201'); alias=default
[2025-09-30 17:09:53,852] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 144, '2500 Cedar Springs Rd, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(13, 144, '2500 Cedar Springs Rd, Dallas, TX 75201'); alias=default
[2025-09-30 17:09:53,852] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 144, '2500 Cedar Springs Rd, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(12, 144, '2500 Cedar Springs Rd, Dallas, TX 75201'); alias=default
[2025-09-30 17:09:53,852] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Anne Cohen', '5600 Ross Ave, Dallas, TX 75206', '2025-10-27', 3, 1) RETURNING "scheduling_booking"."id"; args=('Anne Cohen', '5600 Ross Ave, Dallas, TX 75206', '2025-10-27', 3, 1); alias=default
[2025-09-30 17:09:53,868] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 17:09:53,868] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 145, '5600 Ross Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(2, 145, '5600 Ross Ave, Dallas, TX 75206'); alias=default
[2025-09-30 17:09:53,868] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Brenda Lee', '9999 Forest Ln, Dallas, TX 75243', '2025-10-27', 1, 2) RETURNING "scheduling_booking"."id"; args=('Brenda Lee', '9999 Forest Ln, Dallas, TX 75243', '2025-10-27', 1, 2); alias=default
[2025-09-30 17:09:53,868] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:09:53,868] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 146, '9999 Forest Ln, Dallas, TX 75243') RETURNING "scheduling_jobassignment"."id"; args=(9, 146, '9999 Forest Ln, Dallas, TX 75243'); alias=default
[2025-09-30 17:09:53,868] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 146, '9999 Forest Ln, Dallas, TX 75243') RETURNING "scheduling_jobassignment"."id"; args=(7, 146, '9999 Forest Ln, Dallas, TX 75243'); alias=default
[2025-09-30 17:09:53,884] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Sherry Patel', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-27', 2, 3) RETURNING "scheduling_booking"."id"; args=('Sherry Patel', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-27', 2, 3); alias=default
[2025-09-30 17:09:53,884] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:53,884] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 147, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(15, 147, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 17:09:53,884] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Miss Laura Wilson', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-27', 3, 3) RETURNING "scheduling_booking"."id"; args=('Miss Laura Wilson', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-27', 3, 3); alias=default
[2025-09-30 17:09:53,901] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 17:09:53,902] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 148, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(13, 148, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:53,907] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 148, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(11, 148, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 17:09:53,911] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 148, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(14, 148, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 17:11:03,784] DEBUG django.db.backends (0.000) SELECT COUNT(*) AS "__count" FROM "scheduling_servicecategory"; args=(); alias=default
[2025-09-30 17:11:24,282] DEBUG django.db.backends (0.000) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory"; args=(); alias=default
[2025-09-30 17:11:49,718] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-30 17:11:49,791] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-30 17:11:49,795] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-30 17:11:51,840] INFO core.views Home page accessed
[2025-09-30 17:11:51,878] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-30 15:11:51.875073' AND "django_session"."session_key" = 'p1smpq0b7bj0xetnmhcgx0gsq8jz0871') LIMIT 21; args=('2025-09-30 15:11:51.875073', 'p1smpq0b7bj0xetnmhcgx0gsq8jz0871'); alias=default
[2025-09-30 17:11:51,880] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-30 17:11:51,911] INFO django.server "GET / HTTP/1.1" 200 2285
[2025-09-30 17:11:52,264] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-30 17:11:52,304] WARNING django.request Not Found: /favicon.ico
[2025-09-30 17:11:52,306] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2575
[2025-09-30 17:12:07,631] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-30 15:12:07.630379' AND "django_session"."session_key" = 'p1smpq0b7bj0xetnmhcgx0gsq8jz0871') LIMIT 21; args=('2025-09-30 15:12:07.630379', 'p1smpq0b7bj0xetnmhcgx0gsq8jz0871'); alias=default
[2025-09-30 17:12:07,633] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-30 17:12:07,640] DEBUG django.db.backends (0.000) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory" ORDER BY "scheduling_servicecategory"."name" ASC; args=(); alias=default
[2025-09-30 17:12:07,642] INFO django.server "GET /schedule/search/date/ HTTP/1.1" 200 3640
[2025-09-30 17:12:07,669] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-30 17:12:59,911] DEBUG django.db.backends (0.000) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory" WHERE "scheduling_servicecategory"."id" = 2 LIMIT 21; args=(2,); alias=default
[2025-09-30 17:12:59,912] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 17:12:59,930] DEBUG django.db.backends (0.000) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory" WHERE "scheduling_servicecategory"."id" = 2 LIMIT 21; args=(2,); alias=default
[2025-09-30 17:12:59,931] DEBUG django.db.backends (0.000) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory" WHERE "scheduling_servicecategory"."id" = 2 LIMIT 21; args=(2,); alias=default
[2025-09-30 17:12:59,932] DEBUG django.db.backends (0.000) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory" WHERE "scheduling_servicecategory"."id" = 2 LIMIT 21; args=(2,); alias=default
[2025-09-30 17:12:59,932] DEBUG django.db.backends (0.000) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory" WHERE "scheduling_servicecategory"."id" = 2 LIMIT 21; args=(2,); alias=default
[2025-09-30 17:12:59,933] DEBUG django.db.backends (0.000) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory" WHERE "scheduling_servicecategory"."id" = 2 LIMIT 21; args=(2,); alias=default
[2025-09-30 17:12:59,933] DEBUG django.db.backends (0.000) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address" FROM "scheduling_jobassignment" WHERE "scheduling_jobassignment"."employee_id" = 6 LIMIT 21; args=(6,); alias=default
[2025-09-30 17:12:59,934] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 26 LIMIT 21; args=(26,); alias=default
[2025-09-30 17:12:59,935] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 2 LIMIT 21; args=(2,); alias=default
[2025-09-30 17:12:59,935] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 34 LIMIT 21; args=(34,); alias=default
[2025-09-30 17:12:59,936] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 3 LIMIT 21; args=(3,); alias=default
[2025-09-30 17:12:59,936] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 53 LIMIT 21; args=(53,); alias=default
[2025-09-30 17:12:59,937] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 4 LIMIT 21; args=(4,); alias=default
[2025-09-30 17:12:59,937] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 67 LIMIT 21; args=(67,); alias=default
[2025-09-30 17:12:59,938] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 3 LIMIT 21; args=(3,); alias=default
[2025-09-30 17:12:59,938] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 68 LIMIT 21; args=(68,); alias=default
[2025-09-30 17:12:59,939] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 4 LIMIT 21; args=(4,); alias=default
[2025-09-30 17:12:59,939] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 72 LIMIT 21; args=(72,); alias=default
[2025-09-30 17:12:59,940] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 2 LIMIT 21; args=(2,); alias=default
[2025-09-30 17:12:59,940] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 78 LIMIT 21; args=(78,); alias=default
[2025-09-30 17:12:59,941] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 3 LIMIT 21; args=(3,); alias=default
[2025-09-30 17:12:59,941] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 79 LIMIT 21; args=(79,); alias=default
[2025-09-30 17:12:59,942] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 4 LIMIT 21; args=(4,); alias=default
[2025-09-30 17:12:59,942] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 85 LIMIT 21; args=(85,); alias=default
[2025-09-30 17:12:59,943] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-30 17:12:59,943] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 86 LIMIT 21; args=(86,); alias=default
[2025-09-30 17:12:59,944] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 2 LIMIT 21; args=(2,); alias=default
[2025-09-30 17:12:59,944] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 102 LIMIT 21; args=(102,); alias=default
[2025-09-30 17:12:59,945] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-30 17:12:59,946] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 103 LIMIT 21; args=(103,); alias=default
[2025-09-30 17:12:59,946] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 2 LIMIT 21; args=(2,); alias=default
[2025-09-30 17:12:59,946] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 120 LIMIT 21; args=(120,); alias=default
[2025-09-30 17:12:59,946] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 2 LIMIT 21; args=(2,); alias=default
[2025-09-30 17:12:59,946] DEBUG django.db.backends (0.000) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address" FROM "scheduling_jobassignment" WHERE "scheduling_jobassignment"."employee_id" = 6 LIMIT 21; args=(6,); alias=default
[2025-09-30 17:12:59,946] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 26 LIMIT 21; args=(26,); alias=default
[2025-09-30 17:12:59,946] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 2 LIMIT 21; args=(2,); alias=default
[2025-09-30 17:12:59,946] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 34 LIMIT 21; args=(34,); alias=default
[2025-09-30 17:12:59,946] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 3 LIMIT 21; args=(3,); alias=default
[2025-09-30 17:12:59,946] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 53 LIMIT 21; args=(53,); alias=default
[2025-09-30 17:12:59,946] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 4 LIMIT 21; args=(4,); alias=default
[2025-09-30 17:12:59,946] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 67 LIMIT 21; args=(67,); alias=default
[2025-09-30 17:12:59,946] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 3 LIMIT 21; args=(3,); alias=default
[2025-09-30 17:12:59,946] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 68 LIMIT 21; args=(68,); alias=default
[2025-09-30 17:12:59,946] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 4 LIMIT 21; args=(4,); alias=default
[2025-09-30 17:12:59,946] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 72 LIMIT 21; args=(72,); alias=default
[2025-09-30 17:12:59,946] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 2 LIMIT 21; args=(2,); alias=default
[2025-09-30 17:12:59,946] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 78 LIMIT 21; args=(78,); alias=default
[2025-09-30 17:12:59,946] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 3 LIMIT 21; args=(3,); alias=default
[2025-09-30 17:12:59,946] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 79 LIMIT 21; args=(79,); alias=default
[2025-09-30 17:12:59,946] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 4 LIMIT 21; args=(4,); alias=default
[2025-09-30 17:12:59,946] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 85 LIMIT 21; args=(85,); alias=default
[2025-09-30 17:12:59,946] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-30 17:12:59,946] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 86 LIMIT 21; args=(86,); alias=default
[2025-09-30 17:12:59,946] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 2 LIMIT 21; args=(2,); alias=default
[2025-09-30 17:12:59,946] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 102 LIMIT 21; args=(102,); alias=default
[2025-09-30 17:12:59,946] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-30 17:12:59,946] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 103 LIMIT 21; args=(103,); alias=default
[2025-09-30 17:12:59,946] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 2 LIMIT 21; args=(2,); alias=default
[2025-09-30 17:12:59,946] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 120 LIMIT 21; args=(120,); alias=default
[2025-09-30 17:12:59,946] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 2 LIMIT 21; args=(2,); alias=default
[2025-09-30 17:12:59,946] DEBUG django.db.backends (0.000) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE "scheduling_jobassignment"."employee_id" = 6 LIMIT 21; args=(6,); alias=default
[2025-09-30 17:12:59,962] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 26 LIMIT 21; args=(26,); alias=default
[2025-09-30 17:12:59,963] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 2 LIMIT 21; args=(2,); alias=default
[2025-09-30 17:12:59,963] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 34 LIMIT 21; args=(34,); alias=default
[2025-09-30 17:12:59,963] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 3 LIMIT 21; args=(3,); alias=default
[2025-09-30 17:12:59,963] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 53 LIMIT 21; args=(53,); alias=default
[2025-09-30 17:12:59,963] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 4 LIMIT 21; args=(4,); alias=default
[2025-09-30 17:12:59,963] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 67 LIMIT 21; args=(67,); alias=default
[2025-09-30 17:12:59,963] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 3 LIMIT 21; args=(3,); alias=default
[2025-09-30 17:12:59,963] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 68 LIMIT 21; args=(68,); alias=default
[2025-09-30 17:12:59,963] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 4 LIMIT 21; args=(4,); alias=default
[2025-09-30 17:12:59,963] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 72 LIMIT 21; args=(72,); alias=default
[2025-09-30 17:12:59,963] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 2 LIMIT 21; args=(2,); alias=default
[2025-09-30 17:12:59,963] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 78 LIMIT 21; args=(78,); alias=default
[2025-09-30 17:12:59,963] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 3 LIMIT 21; args=(3,); alias=default
[2025-09-30 17:12:59,963] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 79 LIMIT 21; args=(79,); alias=default
[2025-09-30 17:12:59,963] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 4 LIMIT 21; args=(4,); alias=default
[2025-09-30 17:12:59,963] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 85 LIMIT 21; args=(85,); alias=default
[2025-09-30 17:12:59,963] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-30 17:12:59,963] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 86 LIMIT 21; args=(86,); alias=default
[2025-09-30 17:12:59,963] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 2 LIMIT 21; args=(2,); alias=default
[2025-09-30 17:12:59,963] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 102 LIMIT 21; args=(102,); alias=default
[2025-09-30 17:12:59,963] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-30 17:12:59,963] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 103 LIMIT 21; args=(103,); alias=default
[2025-09-30 17:12:59,963] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 2 LIMIT 21; args=(2,); alias=default
[2025-09-30 17:12:59,963] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 120 LIMIT 21; args=(120,); alias=default
[2025-09-30 17:12:59,963] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 2 LIMIT 21; args=(2,); alias=default
[2025-09-30 17:12:59,963] DEBUG django.db.backends (0.000) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE "scheduling_jobassignment"."employee_id" = 6 LIMIT 21; args=(6,); alias=default
[2025-09-30 17:12:59,963] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 26 LIMIT 21; args=(26,); alias=default
[2025-09-30 17:12:59,963] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 2 LIMIT 21; args=(2,); alias=default
[2025-09-30 17:12:59,963] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 34 LIMIT 21; args=(34,); alias=default
[2025-09-30 17:12:59,963] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 3 LIMIT 21; args=(3,); alias=default
[2025-09-30 17:12:59,963] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 53 LIMIT 21; args=(53,); alias=default
[2025-09-30 17:12:59,963] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 4 LIMIT 21; args=(4,); alias=default
[2025-09-30 17:12:59,963] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 67 LIMIT 21; args=(67,); alias=default
[2025-09-30 17:12:59,978] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 3 LIMIT 21; args=(3,); alias=default
[2025-09-30 17:12:59,979] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 68 LIMIT 21; args=(68,); alias=default
[2025-09-30 17:12:59,979] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 4 LIMIT 21; args=(4,); alias=default
[2025-09-30 17:12:59,979] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 72 LIMIT 21; args=(72,); alias=default
[2025-09-30 17:12:59,979] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 2 LIMIT 21; args=(2,); alias=default
[2025-09-30 17:12:59,979] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 78 LIMIT 21; args=(78,); alias=default
[2025-09-30 17:12:59,979] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 3 LIMIT 21; args=(3,); alias=default
[2025-09-30 17:12:59,979] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 79 LIMIT 21; args=(79,); alias=default
[2025-09-30 17:12:59,979] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 4 LIMIT 21; args=(4,); alias=default
[2025-09-30 17:12:59,979] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 85 LIMIT 21; args=(85,); alias=default
[2025-09-30 17:12:59,979] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-30 17:12:59,979] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 86 LIMIT 21; args=(86,); alias=default
[2025-09-30 17:12:59,979] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 2 LIMIT 21; args=(2,); alias=default
[2025-09-30 17:12:59,979] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 102 LIMIT 21; args=(102,); alias=default
[2025-09-30 17:12:59,979] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-30 17:12:59,979] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 103 LIMIT 21; args=(103,); alias=default
[2025-09-30 17:12:59,979] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 2 LIMIT 21; args=(2,); alias=default
[2025-09-30 17:12:59,979] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking" WHERE "scheduling_booking"."id" = 120 LIMIT 21; args=(120,); alias=default
[2025-09-30 17:12:59,979] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 2 LIMIT 21; args=(2,); alias=default
[2025-09-30 17:12:59,979] DEBUG django.db.backends (0.000) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-30 15:12:59.979774' AND "django_session"."session_key" = 'p1smpq0b7bj0xetnmhcgx0gsq8jz0871') LIMIT 21; args=('2025-09-30 15:12:59.979774', 'p1smpq0b7bj0xetnmhcgx0gsq8jz0871'); alias=default
[2025-09-30 17:12:59,979] DEBUG django.db.backends (0.000) SELECT "auth_user"."id", "auth_user"."password", "auth_user"."last_login", "auth_user"."is_superuser", "auth_user"."username", "auth_user"."first_name", "auth_user"."last_name", "auth_user"."email", "auth_user"."is_staff", "auth_user"."is_active", "auth_user"."date_joined" FROM "auth_user" WHERE "auth_user"."id" = 1 LIMIT 21; args=(1,); alias=default
[2025-09-30 17:13:00,013] ERROR django.request Internal Server Error: /schedule/search/date/
Traceback (most recent call last):
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\db\models\fields\__init__.py", line 2053, in get_prep_value
    return int(value)
           ^^^^^^^^^^
ValueError: invalid literal for int() with base 10: '7:30-9:30'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\scheduling\views.py", line 25, in search_by_date
    slot: get_available_employees(
          ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\scheduling\availability.py", line 30, in get_available_employees
    if emp.jobassignment_set.filter(
       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\db\models\query.py", line 1436, in filter
    return self._filter_or_exclude(False, args, kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\db\models\query.py", line 1454, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\db\models\query.py", line 1461, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\db\models\sql\query.py", line 1546, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\db\models\sql\query.py", line 1577, in _add_q
    child_clause, needed_inner = self.build_filter(
                                 ^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\db\models\sql\query.py", line 1492, in build_filter
    condition = self.build_lookup(lookups, col, value)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\db\models\sql\query.py", line 1319, in build_lookup
    lookup = lookup_class(lhs, rhs)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\db\models\lookups.py", line 27, in __init__
    self.rhs = self.get_prep_lookup()
               ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\db\models\fields\related_lookups.py", line 166, in get_prep_lookup
    self.rhs = target_field.get_prep_value(self.rhs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\db\models\fields\__init__.py", line 2055, in get_prep_value
    raise e.__class__(
ValueError: Field 'id' expected a number but got '7:30-9:30'.
[2025-09-30 17:13:00,029] ERROR django.server "GET /schedule/search/date/?date=2025-10-15&service_category=2&customer_address=5806+Birchbrook+Dr%2C+Dallas%2C+TX+75206 HTTP/1.1" 500 146593
[2025-09-30 17:23:49,629] INFO django.utils.autoreload C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\scheduling\views.py changed, reloading.
[2025-09-30 17:23:51,054] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-30 20:27:32,121] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-30 20:27:32,123] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-30 20:27:32,123] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-30 20:27:32,124] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-30 20:27:32,140] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-30 20:27:32,141] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-30 20:27:32,141] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-30 20:27:32,143] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
[2025-09-30 20:27:32,144] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
[2025-09-30 20:27:32,146] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
[2025-09-30 20:27:32,146] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
[2025-09-30 20:27:32,147] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
[2025-09-30 20:27:32,148] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
[2025-09-30 20:27:32,149] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
[2025-09-30 20:27:32,149] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
[2025-09-30 20:27:32,151] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
[2025-09-30 20:27:32,152] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
[2025-09-30 20:27:32,153] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
[2025-09-30 20:27:32,154] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
[2025-09-30 20:27:32,155] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
[2025-09-30 20:27:32,155] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
[2025-09-30 20:27:32,156] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
[2025-09-30 20:27:32,156] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
[2025-09-30 20:27:32,157] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
[2025-09-30 20:27:32,158] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
[2025-09-30 20:27:32,159] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'customers'; args=('customers',); alias=default
[2025-09-30 20:27:32,159] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'customers' AND "django_content_type"."model" = 'registeredcustomer') LIMIT 21; args=('customers', 'registeredcustomer'); alias=default
[2025-09-30 20:27:32,160] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(7,); alias=default
[2025-09-30 20:27:32,161] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'customers'; args=('customers',); alias=default
[2025-09-30 20:27:32,161] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'scheduling'; args=('scheduling',); alias=default
[2025-09-30 20:27:32,162] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'booking') LIMIT 21; args=('scheduling', 'booking'); alias=default
[2025-09-30 20:27:32,162] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'employee') LIMIT 21; args=('scheduling', 'employee'); alias=default
[2025-09-30 20:27:32,162] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'servicecategory') LIMIT 21; args=('scheduling', 'servicecategory'); alias=default
[2025-09-30 20:27:32,164] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'timeslot') LIMIT 21; args=('scheduling', 'timeslot'); alias=default
[2025-09-30 20:27:32,165] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'jobassignment') LIMIT 21; args=('scheduling', 'jobassignment'); alias=default
[2025-09-30 20:27:32,166] DEBUG django.db.backends (0.000) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 9, 10, 11, 12) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 9, 10, 11, 12); alias=default
[2025-09-30 20:27:32,167] DEBUG django.db.backends (0.000) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'scheduling'; args=('scheduling',); alias=default
[2025-09-30 20:28:41,772] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 20:28:41,788] DEBUG django.db.backends (0.000) DELETE FROM "scheduling_jobassignment"; args=(); alias=default
[2025-09-30 20:28:41,788] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-30 20:28:41,788] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking"; args=(); alias=default
[2025-09-30 20:28:41,803] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 20:28:41,803] DEBUG django.db.backends (0.000) DELETE FROM "scheduling_jobassignment" WHERE "scheduling_jobassignment"."booking_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148); args=(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148); alias=default
[2025-09-30 20:28:41,803] DEBUG django.db.backends (0.000) DELETE FROM "scheduling_booking" WHERE "scheduling_booking"."id" IN (148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49); args=(148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49); alias=default
[2025-09-30 20:28:41,803] DEBUG django.db.backends (0.000) DELETE FROM "scheduling_booking" WHERE "scheduling_booking"."id" IN (48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1); args=(48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1); alias=default
[2025-09-30 20:28:41,803] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-30 20:28:41,803] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee"; args=(); alias=default
[2025-09-30 20:28:41,803] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 20:28:41,803] DEBUG django.db.backends (0.000) DELETE FROM "scheduling_jobassignment" WHERE "scheduling_jobassignment"."employee_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15); args=(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15); alias=default
[2025-09-30 20:28:41,803] DEBUG django.db.backends (0.000) DELETE FROM "scheduling_employee" WHERE "scheduling_employee"."id" IN (15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1); args=(15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1); alias=default
[2025-09-30 20:28:41,819] DEBUG django.db.backends (0.015) COMMIT; args=None; alias=default
[2025-09-30 20:28:41,819] DEBUG django.db.backends (0.000) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot"; args=(); alias=default
[2025-09-30 20:28:41,819] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id" FROM "scheduling_booking" WHERE "scheduling_booking"."time_slot_id" IN (1, 2, 3, 4); args=(1, 2, 3, 4); alias=default
[2025-09-30 20:28:41,819] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 20:28:41,819] DEBUG django.db.backends (0.000) DELETE FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" IN (4, 3, 2, 1); args=(4, 3, 2, 1); alias=default
[2025-09-30 20:28:41,828] DEBUG django.db.backends (0.016) COMMIT; args=None; alias=default
[2025-09-30 20:28:41,829] DEBUG django.db.backends (0.000) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory"; args=(); alias=default
[2025-09-30 20:28:41,830] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" IN (1, 2, 3); args=(1, 2, 3); alias=default
[2025-09-30 20:28:41,830] DEBUG django.db.backends (0.000) SELECT "scheduling_booking"."id" FROM "scheduling_booking" WHERE "scheduling_booking"."service_category_id" IN (1, 2, 3); args=(1, 2, 3); alias=default
[2025-09-30 20:28:41,831] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 20:28:41,832] DEBUG django.db.backends (0.000) DELETE FROM "scheduling_servicecategory" WHERE "scheduling_servicecategory"."id" IN (3, 2, 1); args=(3, 2, 1); alias=default
[2025-09-30 20:28:41,835] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-30 20:28:41,837] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_servicecategory" ("name") VALUES ('Garage/Basement') RETURNING "scheduling_servicecategory"."id"; args=('Garage/Basement',); alias=default
[2025-09-30 20:28:41,843] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_servicecategory" ("name") VALUES ('Lawncare') RETURNING "scheduling_servicecategory"."id"; args=('Lawncare',); alias=default
[2025-09-30 20:28:41,845] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_servicecategory" ("name") VALUES ('House Cleaning') RETURNING "scheduling_servicecategory"."id"; args=('House Cleaning',); alias=default
[2025-09-30 20:28:41,854] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_timeslot" ("label") VALUES ('7:30-9:30') RETURNING "scheduling_timeslot"."id"; args=('7:30-9:30',); alias=default
[2025-09-30 20:28:41,859] DEBUG django.db.backends (0.015) INSERT INTO "scheduling_timeslot" ("label") VALUES ('10:00-12:00') RETURNING "scheduling_timeslot"."id"; args=('10:00-12:00',); alias=default
[2025-09-30 20:28:41,865] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_timeslot" ("label") VALUES ('12:30-2:30') RETURNING "scheduling_timeslot"."id"; args=('12:30-2:30',); alias=default
[2025-09-30 20:28:41,869] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_timeslot" ("label") VALUES ('3:00-5:00') RETURNING "scheduling_timeslot"."id"; args=('3:00-5:00',); alias=default
[2025-09-30 20:28:41,879] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Samuel Paul', '4500 Harry Hines Blvd, Dallas, TX 75219', 4) RETURNING "scheduling_employee"."id"; args=('Samuel Paul', '4500 Harry Hines Blvd, Dallas, TX 75219', 4); alias=default
[2025-09-30 20:28:41,885] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Amy Patterson', '6000 Preston Rd, Dallas, TX 75205', 4) RETURNING "scheduling_employee"."id"; args=('Amy Patterson', '6000 Preston Rd, Dallas, TX 75205', 4); alias=default
[2025-09-30 20:28:41,892] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Chad King', '4800 W Lovers Ln, Dallas, TX 75209', 4) RETURNING "scheduling_employee"."id"; args=('Chad King', '4800 W Lovers Ln, Dallas, TX 75209', 4); alias=default
[2025-09-30 20:28:41,898] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Nathan Torres', '10200 E Northwest Hwy, Dallas, TX 75238', 4) RETURNING "scheduling_employee"."id"; args=('Nathan Torres', '10200 E Northwest Hwy, Dallas, TX 75238', 4); alias=default
[2025-09-30 20:28:41,904] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Stephanie Stephens', '6000 Preston Rd, Dallas, TX 75205', 4) RETURNING "scheduling_employee"."id"; args=('Stephanie Stephens', '6000 Preston Rd, Dallas, TX 75205', 4); alias=default
[2025-09-30 20:28:41,911] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Brian Conway', '100 Highland Park Village, Dallas, TX 75205', 5) RETURNING "scheduling_employee"."id"; args=('Brian Conway', '100 Highland Park Village, Dallas, TX 75205', 5); alias=default
[2025-09-30 20:28:41,919] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Dr. Ricky Flynn', '10200 E Northwest Hwy, Dallas, TX 75238', 5) RETURNING "scheduling_employee"."id"; args=('Dr. Ricky Flynn', '10200 E Northwest Hwy, Dallas, TX 75238', 5); alias=default
[2025-09-30 20:28:41,925] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Carrie Valdez', '6000 Preston Rd, Dallas, TX 75205', 5) RETURNING "scheduling_employee"."id"; args=('Carrie Valdez', '6000 Preston Rd, Dallas, TX 75205', 5); alias=default
[2025-09-30 20:28:41,950] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Shannon Johnson', '3500 Oak Lawn Ave, Dallas, TX 75219', 5) RETURNING "scheduling_employee"."id"; args=('Shannon Johnson', '3500 Oak Lawn Ave, Dallas, TX 75219', 5); alias=default
[2025-09-30 20:28:41,955] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Andrew Underwood', '1234 Lovers Ln, Dallas, TX 75225', 5) RETURNING "scheduling_employee"."id"; args=('Andrew Underwood', '1234 Lovers Ln, Dallas, TX 75225', 5); alias=default
[2025-09-30 20:28:41,961] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Sarah Brown', '9999 Forest Ln, Dallas, TX 75243', 6) RETURNING "scheduling_employee"."id"; args=('Sarah Brown', '9999 Forest Ln, Dallas, TX 75243', 6); alias=default
[2025-09-30 20:28:41,967] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Christina Nelson', '2200 N Pearl St, Dallas, TX 75201', 6) RETURNING "scheduling_employee"."id"; args=('Christina Nelson', '2200 N Pearl St, Dallas, TX 75201', 6); alias=default
[2025-09-30 20:28:41,973] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Jesse Cooke', '2200 N Pearl St, Dallas, TX 75201', 6) RETURNING "scheduling_employee"."id"; args=('Jesse Cooke', '2200 N Pearl St, Dallas, TX 75201', 6); alias=default
[2025-09-30 20:28:41,973] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Mrs. Denise Brown', '123 Greenville Ave, Dallas, TX 75206', 6) RETURNING "scheduling_employee"."id"; args=('Mrs. Denise Brown', '123 Greenville Ave, Dallas, TX 75206', 6); alias=default
[2025-09-30 20:28:41,973] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Tyrone Baker', '7000 Mockingbird Ln, Dallas, TX 75214', 6) RETURNING "scheduling_employee"."id"; args=('Tyrone Baker', '7000 Mockingbird Ln, Dallas, TX 75214', 6); alias=default
[2025-09-30 20:28:41,989] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Mathew Scott', '4000 Cedar Springs Rd, Dallas, TX 75219', '2025-09-30', 5, 4) RETURNING "scheduling_booking"."id"; args=('Mathew Scott', '4000 Cedar Springs Rd, Dallas, TX 75219', '2025-09-30', 5, 4); alias=default
[2025-09-30 20:28:41,989] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:41,989] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 149, '4000 Cedar Springs Rd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(19, 149, '4000 Cedar Springs Rd, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:41,989] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Patrick Mclaughlin', '4800 W Lovers Ln, Dallas, TX 75209', '2025-09-30', 7, 4) RETURNING "scheduling_booking"."id"; args=('Patrick Mclaughlin', '4800 W Lovers Ln, Dallas, TX 75209', '2025-09-30', 7, 4); alias=default
[2025-09-30 20:28:42,006] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:42,007] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 150, '4800 W Lovers Ln, Dallas, TX 75209') RETURNING "scheduling_jobassignment"."id"; args=(16, 150, '4800 W Lovers Ln, Dallas, TX 75209'); alias=default
[2025-09-30 20:28:42,013] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 150, '4800 W Lovers Ln, Dallas, TX 75209') RETURNING "scheduling_jobassignment"."id"; args=(18, 150, '4800 W Lovers Ln, Dallas, TX 75209'); alias=default
[2025-09-30 20:28:42,018] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Katie Harvey', '4500 Harry Hines Blvd, Dallas, TX 75219', '2025-09-30', 8, 4) RETURNING "scheduling_booking"."id"; args=('Katie Harvey', '4500 Harry Hines Blvd, Dallas, TX 75219', '2025-09-30', 8, 4); alias=default
[2025-09-30 20:28:42,023] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:42,025] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (20, 151, '4500 Harry Hines Blvd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(20, 151, '4500 Harry Hines Blvd, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:42,031] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 151, '4500 Harry Hines Blvd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(19, 151, '4500 Harry Hines Blvd, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:42,037] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 151, '4500 Harry Hines Blvd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(18, 151, '4500 Harry Hines Blvd, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:42,040] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jacqueline Johnson', '4100 Lomo Alto Dr, Dallas, TX 75219', '2025-09-30', 6, 5) RETURNING "scheduling_booking"."id"; args=('Jacqueline Johnson', '4100 Lomo Alto Dr, Dallas, TX 75219', '2025-09-30', 6, 5); alias=default
[2025-09-30 20:28:42,040] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:42,040] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (23, 152, '4100 Lomo Alto Dr, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(23, 152, '4100 Lomo Alto Dr, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:42,058] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Kelly Beck', '8900 Hillcrest Rd, Dallas, TX 75225', '2025-09-30', 7, 5) RETURNING "scheduling_booking"."id"; args=('Kelly Beck', '8900 Hillcrest Rd, Dallas, TX 75225', '2025-09-30', 7, 5); alias=default
[2025-09-30 20:28:42,063] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:42,064] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 153, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(24, 153, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:42,069] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (23, 153, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(23, 153, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:42,075] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (25, 153, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(25, 153, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:42,081] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Patrick Melendez', '4500 Harry Hines Blvd, Dallas, TX 75219', '2025-09-30', 8, 5) RETURNING "scheduling_booking"."id"; args=('Patrick Melendez', '4500 Harry Hines Blvd, Dallas, TX 75219', '2025-09-30', 8, 5); alias=default
[2025-09-30 20:28:42,086] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:42,087] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (21, 154, '4500 Harry Hines Blvd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(21, 154, '4500 Harry Hines Blvd, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:42,088] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (23, 154, '4500 Harry Hines Blvd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(23, 154, '4500 Harry Hines Blvd, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:42,088] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Sarah Browning', '3900 Gaston Ave, Dallas, TX 75246', '2025-09-30', 7, 6) RETURNING "scheduling_booking"."id"; args=('Sarah Browning', '3900 Gaston Ave, Dallas, TX 75246', '2025-09-30', 7, 6); alias=default
[2025-09-30 20:28:42,088] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:42,104] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (29, 155, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(29, 155, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 20:28:42,104] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (27, 155, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(27, 155, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 20:28:42,104] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (30, 155, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(30, 155, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 20:28:42,119] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jimmy Smith', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-09-30', 8, 6) RETURNING "scheduling_booking"."id"; args=('Jimmy Smith', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-09-30', 8, 6); alias=default
[2025-09-30 20:28:42,119] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:42,119] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (29, 156, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(29, 156, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:42,119] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (28, 156, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(28, 156, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:42,137] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (30, 156, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(30, 156, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:42,143] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Rachel Anderson', '4100 Lomo Alto Dr, Dallas, TX 75219', '2025-10-01', 7, 4) RETURNING "scheduling_booking"."id"; args=('Rachel Anderson', '4100 Lomo Alto Dr, Dallas, TX 75219', '2025-10-01', 7, 4); alias=default
[2025-09-30 20:28:42,148] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:42,148] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (20, 157, '4100 Lomo Alto Dr, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(20, 157, '4100 Lomo Alto Dr, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:42,148] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Melanie Macias', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-01', 8, 5) RETURNING "scheduling_booking"."id"; args=('Melanie Macias', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-01', 8, 5); alias=default
[2025-09-30 20:28:42,148] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:42,148] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (23, 158, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(23, 158, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 20:28:42,167] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (21, 158, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(21, 158, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 20:28:42,173] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Alicia Ortiz', '1234 Lovers Ln, Dallas, TX 75225', '2025-10-01', 6, 6) RETURNING "scheduling_booking"."id"; args=('Alicia Ortiz', '1234 Lovers Ln, Dallas, TX 75225', '2025-10-01', 6, 6); alias=default
[2025-09-30 20:28:42,178] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:42,179] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (27, 159, '1234 Lovers Ln, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(27, 159, '1234 Lovers Ln, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:42,184] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (29, 159, '1234 Lovers Ln, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(29, 159, '1234 Lovers Ln, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:42,189] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Anthony Cochran', '4500 Harry Hines Blvd, Dallas, TX 75219', '2025-10-01', 8, 6) RETURNING "scheduling_booking"."id"; args=('Anthony Cochran', '4500 Harry Hines Blvd, Dallas, TX 75219', '2025-10-01', 8, 6); alias=default
[2025-09-30 20:28:42,195] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:42,197] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (28, 160, '4500 Harry Hines Blvd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(28, 160, '4500 Harry Hines Blvd, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:42,202] DEBUG django.db.backends (0.016) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (27, 160, '4500 Harry Hines Blvd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(27, 160, '4500 Harry Hines Blvd, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:42,207] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Karen Williams', '123 Greenville Ave, Dallas, TX 75206', '2025-10-02', 5, 4) RETURNING "scheduling_booking"."id"; args=('Karen Williams', '123 Greenville Ave, Dallas, TX 75206', '2025-10-02', 5, 4); alias=default
[2025-09-30 20:28:42,207] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:42,207] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 161, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(16, 161, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 20:28:42,217] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 161, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(19, 161, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 20:28:42,217] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Brian Miller', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-02', 8, 4) RETURNING "scheduling_booking"."id"; args=('Brian Miller', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-02', 8, 4); alias=default
[2025-09-30 20:28:42,217] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:42,217] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 162, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(17, 162, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 20:28:42,236] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 162, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(18, 162, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 20:28:42,242] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Anthony Anderson', '123 Greenville Ave, Dallas, TX 75206', '2025-10-02', 8, 5) RETURNING "scheduling_booking"."id"; args=('Anthony Anderson', '123 Greenville Ave, Dallas, TX 75206', '2025-10-02', 8, 5); alias=default
[2025-09-30 20:28:42,247] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:42,248] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (25, 163, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(25, 163, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 20:28:42,253] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 163, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(24, 163, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 20:28:42,257] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Theodore Fischer', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-02', 5, 6) RETURNING "scheduling_booking"."id"; args=('Theodore Fischer', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-02', 5, 6); alias=default
[2025-09-30 20:28:42,257] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:42,257] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (30, 164, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(30, 164, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 20:28:42,257] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 164, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(26, 164, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 20:28:42,272] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (29, 164, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(29, 164, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 20:28:42,272] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Michael Barber III', '6000 Preston Rd, Dallas, TX 75205', '2025-10-02', 7, 6) RETURNING "scheduling_booking"."id"; args=('Michael Barber III', '6000 Preston Rd, Dallas, TX 75205', '2025-10-02', 7, 6); alias=default
[2025-09-30 20:28:42,288] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:42,304] DEBUG django.db.backends (0.016) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (27, 165, '6000 Preston Rd, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(27, 165, '6000 Preston Rd, Dallas, TX 75205'); alias=default
[2025-09-30 20:28:42,304] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jacob David', '9999 Forest Ln, Dallas, TX 75243', '2025-10-02', 8, 6) RETURNING "scheduling_booking"."id"; args=('Jacob David', '9999 Forest Ln, Dallas, TX 75243', '2025-10-02', 8, 6); alias=default
[2025-09-30 20:28:42,304] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:42,304] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (29, 166, '9999 Forest Ln, Dallas, TX 75243') RETURNING "scheduling_jobassignment"."id"; args=(29, 166, '9999 Forest Ln, Dallas, TX 75243'); alias=default
[2025-09-30 20:28:42,322] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 166, '9999 Forest Ln, Dallas, TX 75243') RETURNING "scheduling_jobassignment"."id"; args=(26, 166, '9999 Forest Ln, Dallas, TX 75243'); alias=default
[2025-09-30 20:28:42,326] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('John Woodward', '1400 Pacific Ave, Dallas, TX 75202', '2025-10-03', 7, 4) RETURNING "scheduling_booking"."id"; args=('John Woodward', '1400 Pacific Ave, Dallas, TX 75202', '2025-10-03', 7, 4); alias=default
[2025-09-30 20:28:42,330] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:42,331] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 167, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(16, 167, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 20:28:42,337] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Michael Thompson', '1234 Lovers Ln, Dallas, TX 75225', '2025-10-03', 8, 4) RETURNING "scheduling_booking"."id"; args=('Michael Thompson', '1234 Lovers Ln, Dallas, TX 75225', '2025-10-03', 8, 4); alias=default
[2025-09-30 20:28:42,338] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:42,338] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (20, 168, '1234 Lovers Ln, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(20, 168, '1234 Lovers Ln, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:42,338] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 168, '1234 Lovers Ln, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(18, 168, '1234 Lovers Ln, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:42,338] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Alyssa Spencer', '4000 Cedar Springs Rd, Dallas, TX 75219', '2025-10-03', 7, 5) RETURNING "scheduling_booking"."id"; args=('Alyssa Spencer', '4000 Cedar Springs Rd, Dallas, TX 75219', '2025-10-03', 7, 5); alias=default
[2025-09-30 20:28:42,355] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:42,356] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (23, 169, '4000 Cedar Springs Rd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(23, 169, '4000 Cedar Springs Rd, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:42,361] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 169, '4000 Cedar Springs Rd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(24, 169, '4000 Cedar Springs Rd, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:42,365] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Joseph Nichols', '2200 N Pearl St, Dallas, TX 75201', '2025-10-03', 8, 5) RETURNING "scheduling_booking"."id"; args=('Joseph Nichols', '2200 N Pearl St, Dallas, TX 75201', '2025-10-03', 8, 5); alias=default
[2025-09-30 20:28:42,369] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:42,371] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (23, 170, '2200 N Pearl St, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(23, 170, '2200 N Pearl St, Dallas, TX 75201'); alias=default
[2025-09-30 20:28:42,375] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (22, 170, '2200 N Pearl St, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(22, 170, '2200 N Pearl St, Dallas, TX 75201'); alias=default
[2025-09-30 20:28:42,379] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Mrs. Laura Hunter', '2500 Cedar Springs Rd, Dallas, TX 75201', '2025-10-03', 5, 6) RETURNING "scheduling_booking"."id"; args=('Mrs. Laura Hunter', '2500 Cedar Springs Rd, Dallas, TX 75201', '2025-10-03', 5, 6); alias=default
[2025-09-30 20:28:42,384] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:42,386] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 171, '2500 Cedar Springs Rd, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(26, 171, '2500 Cedar Springs Rd, Dallas, TX 75201'); alias=default
[2025-09-30 20:28:42,391] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (30, 171, '2500 Cedar Springs Rd, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(30, 171, '2500 Cedar Springs Rd, Dallas, TX 75201'); alias=default
[2025-09-30 20:28:42,396] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (28, 171, '2500 Cedar Springs Rd, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(28, 171, '2500 Cedar Springs Rd, Dallas, TX 75201'); alias=default
[2025-09-30 20:28:42,402] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Julie White', '1400 Pacific Ave, Dallas, TX 75202', '2025-10-03', 6, 6) RETURNING "scheduling_booking"."id"; args=('Julie White', '1400 Pacific Ave, Dallas, TX 75202', '2025-10-03', 6, 6); alias=default
[2025-09-30 20:28:42,406] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:42,407] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 172, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(26, 172, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 20:28:42,412] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('William Norris', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-03', 8, 6) RETURNING "scheduling_booking"."id"; args=('William Norris', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-03', 8, 6); alias=default
[2025-09-30 20:28:42,417] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:42,418] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (30, 173, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(30, 173, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 20:28:42,424] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Theresa Brooks', '1234 Lovers Ln, Dallas, TX 75225', '2025-10-04', 5, 4) RETURNING "scheduling_booking"."id"; args=('Theresa Brooks', '1234 Lovers Ln, Dallas, TX 75225', '2025-10-04', 5, 4); alias=default
[2025-09-30 20:28:42,428] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:42,430] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 174, '1234 Lovers Ln, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(19, 174, '1234 Lovers Ln, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:42,435] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (20, 174, '1234 Lovers Ln, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(20, 174, '1234 Lovers Ln, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:42,440] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 174, '1234 Lovers Ln, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(17, 174, '1234 Lovers Ln, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:42,446] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Claire Wilson', '1234 Lovers Ln, Dallas, TX 75225', '2025-10-04', 6, 4) RETURNING "scheduling_booking"."id"; args=('Claire Wilson', '1234 Lovers Ln, Dallas, TX 75225', '2025-10-04', 6, 4); alias=default
[2025-09-30 20:28:42,451] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:42,452] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 175, '1234 Lovers Ln, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(16, 175, '1234 Lovers Ln, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:42,458] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 175, '1234 Lovers Ln, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(17, 175, '1234 Lovers Ln, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:42,465] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Mitchell Carlson', '4800 W Lovers Ln, Dallas, TX 75209', '2025-10-04', 6, 5) RETURNING "scheduling_booking"."id"; args=('Mitchell Carlson', '4800 W Lovers Ln, Dallas, TX 75209', '2025-10-04', 6, 5); alias=default
[2025-09-30 20:28:42,470] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:42,484] DEBUG django.db.backends (0.015) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 176, '4800 W Lovers Ln, Dallas, TX 75209') RETURNING "scheduling_jobassignment"."id"; args=(24, 176, '4800 W Lovers Ln, Dallas, TX 75209'); alias=default
[2025-09-30 20:28:42,506] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (22, 176, '4800 W Lovers Ln, Dallas, TX 75209') RETURNING "scheduling_jobassignment"."id"; args=(22, 176, '4800 W Lovers Ln, Dallas, TX 75209'); alias=default
[2025-09-30 20:28:42,506] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('John Romero', '1400 Pacific Ave, Dallas, TX 75202', '2025-10-04', 7, 5) RETURNING "scheduling_booking"."id"; args=('John Romero', '1400 Pacific Ave, Dallas, TX 75202', '2025-10-04', 7, 5); alias=default
[2025-09-30 20:28:42,524] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:42,524] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (21, 177, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(21, 177, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 20:28:42,524] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Richard Saunders', '1400 Pacific Ave, Dallas, TX 75202', '2025-10-04', 8, 5) RETURNING "scheduling_booking"."id"; args=('Richard Saunders', '1400 Pacific Ave, Dallas, TX 75202', '2025-10-04', 8, 5); alias=default
[2025-09-30 20:28:42,541] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:42,542] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (25, 178, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(25, 178, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 20:28:42,562] DEBUG django.db.backends (0.015) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (23, 178, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(23, 178, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 20:28:42,567] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (21, 178, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(21, 178, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 20:28:42,574] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('David Blair', '9999 Forest Ln, Dallas, TX 75243', '2025-10-04', 5, 6) RETURNING "scheduling_booking"."id"; args=('David Blair', '9999 Forest Ln, Dallas, TX 75243', '2025-10-04', 5, 6); alias=default
[2025-09-30 20:28:42,580] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:42,581] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (30, 179, '9999 Forest Ln, Dallas, TX 75243') RETURNING "scheduling_jobassignment"."id"; args=(30, 179, '9999 Forest Ln, Dallas, TX 75243'); alias=default
[2025-09-30 20:28:42,587] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 179, '9999 Forest Ln, Dallas, TX 75243') RETURNING "scheduling_jobassignment"."id"; args=(26, 179, '9999 Forest Ln, Dallas, TX 75243'); alias=default
[2025-09-30 20:28:42,593] DEBUG django.db.backends (0.016) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Mrs. Shelly Anderson', '4100 Lomo Alto Dr, Dallas, TX 75219', '2025-10-05', 6, 4) RETURNING "scheduling_booking"."id"; args=('Mrs. Shelly Anderson', '4100 Lomo Alto Dr, Dallas, TX 75219', '2025-10-05', 6, 4); alias=default
[2025-09-30 20:28:42,599] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:42,600] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 180, '4100 Lomo Alto Dr, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(19, 180, '4100 Lomo Alto Dr, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:42,605] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 180, '4100 Lomo Alto Dr, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(18, 180, '4100 Lomo Alto Dr, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:42,609] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 180, '4100 Lomo Alto Dr, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(17, 180, '4100 Lomo Alto Dr, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:42,615] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Robin Hickman', '2500 Cedar Springs Rd, Dallas, TX 75201', '2025-10-05', 7, 4) RETURNING "scheduling_booking"."id"; args=('Robin Hickman', '2500 Cedar Springs Rd, Dallas, TX 75201', '2025-10-05', 7, 4); alias=default
[2025-09-30 20:28:42,618] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:42,619] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 181, '2500 Cedar Springs Rd, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(16, 181, '2500 Cedar Springs Rd, Dallas, TX 75201'); alias=default
[2025-09-30 20:28:42,621] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Dylan Simpson', '7000 Mockingbird Ln, Dallas, TX 75214', '2025-10-05', 5, 5) RETURNING "scheduling_booking"."id"; args=('Dylan Simpson', '7000 Mockingbird Ln, Dallas, TX 75214', '2025-10-05', 5, 5); alias=default
[2025-09-30 20:28:42,621] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:42,621] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (23, 182, '7000 Mockingbird Ln, Dallas, TX 75214') RETURNING "scheduling_jobassignment"."id"; args=(23, 182, '7000 Mockingbird Ln, Dallas, TX 75214'); alias=default
[2025-09-30 20:28:42,621] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (22, 182, '7000 Mockingbird Ln, Dallas, TX 75214') RETURNING "scheduling_jobassignment"."id"; args=(22, 182, '7000 Mockingbird Ln, Dallas, TX 75214'); alias=default
[2025-09-30 20:28:42,640] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('James Davis', '100 Highland Park Village, Dallas, TX 75205', '2025-10-06', 5, 4) RETURNING "scheduling_booking"."id"; args=('James Davis', '100 Highland Park Village, Dallas, TX 75205', '2025-10-06', 5, 4); alias=default
[2025-09-30 20:28:42,644] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:42,645] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 183, '100 Highland Park Village, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(19, 183, '100 Highland Park Village, Dallas, TX 75205'); alias=default
[2025-09-30 20:28:42,650] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Shelby Parrish', '100 Highland Park Village, Dallas, TX 75205', '2025-10-06', 6, 4) RETURNING "scheduling_booking"."id"; args=('Shelby Parrish', '100 Highland Park Village, Dallas, TX 75205', '2025-10-06', 6, 4); alias=default
[2025-09-30 20:28:42,653] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:42,655] DEBUG django.db.backends (0.016) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 184, '100 Highland Park Village, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(16, 184, '100 Highland Park Village, Dallas, TX 75205'); alias=default
[2025-09-30 20:28:42,659] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 184, '100 Highland Park Village, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(17, 184, '100 Highland Park Village, Dallas, TX 75205'); alias=default
[2025-09-30 20:28:42,664] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 184, '100 Highland Park Village, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(18, 184, '100 Highland Park Village, Dallas, TX 75205'); alias=default
[2025-09-30 20:28:42,668] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Suzanne Newton', '1400 Pacific Ave, Dallas, TX 75202', '2025-10-06', 8, 4) RETURNING "scheduling_booking"."id"; args=('Suzanne Newton', '1400 Pacific Ave, Dallas, TX 75202', '2025-10-06', 8, 4); alias=default
[2025-09-30 20:28:42,673] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:42,674] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 185, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(17, 185, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 20:28:42,680] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (20, 185, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(20, 185, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 20:28:42,684] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Laura Haley', '8900 Hillcrest Rd, Dallas, TX 75225', '2025-10-06', 5, 5) RETURNING "scheduling_booking"."id"; args=('Laura Haley', '8900 Hillcrest Rd, Dallas, TX 75225', '2025-10-06', 5, 5); alias=default
[2025-09-30 20:28:42,688] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:42,688] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (21, 186, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(21, 186, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:42,688] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Robert Cunningham', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-06', 6, 6) RETURNING "scheduling_booking"."id"; args=('Robert Cunningham', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-06', 6, 6); alias=default
[2025-09-30 20:28:42,688] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:42,688] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (28, 187, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(28, 187, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 20:28:42,704] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (29, 187, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(29, 187, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 20:28:42,704] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 187, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(26, 187, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 20:28:42,704] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Curtis Vincent', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-06', 7, 6) RETURNING "scheduling_booking"."id"; args=('Curtis Vincent', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-06', 7, 6); alias=default
[2025-09-30 20:28:42,704] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:42,704] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (30, 188, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(30, 188, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 20:28:42,719] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Angela Murillo', '7000 Mockingbird Ln, Dallas, TX 75214', '2025-10-06', 8, 6) RETURNING "scheduling_booking"."id"; args=('Angela Murillo', '7000 Mockingbird Ln, Dallas, TX 75214', '2025-10-06', 8, 6); alias=default
[2025-09-30 20:28:42,719] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:42,719] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (28, 189, '7000 Mockingbird Ln, Dallas, TX 75214') RETURNING "scheduling_jobassignment"."id"; args=(28, 189, '7000 Mockingbird Ln, Dallas, TX 75214'); alias=default
[2025-09-30 20:28:42,719] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Michael Williams', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-07', 5, 5) RETURNING "scheduling_booking"."id"; args=('Michael Williams', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-07', 5, 5); alias=default
[2025-09-30 20:28:42,735] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:42,735] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (22, 190, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(22, 190, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:42,751] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Lisa Brown', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-07', 6, 5) RETURNING "scheduling_booking"."id"; args=('Lisa Brown', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-07', 6, 5); alias=default
[2025-09-30 20:28:42,766] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:42,767] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (21, 191, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(21, 191, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 20:28:42,772] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 191, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(24, 191, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 20:28:42,772] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (22, 191, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(22, 191, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 20:28:42,772] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Taylor Turner', '7800 N Stemmons Fwy, Dallas, TX 75247', '2025-10-07', 8, 5) RETURNING "scheduling_booking"."id"; args=('Taylor Turner', '7800 N Stemmons Fwy, Dallas, TX 75247', '2025-10-07', 8, 5); alias=default
[2025-09-30 20:28:42,772] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:42,788] DEBUG django.db.backends (0.016) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 192, '7800 N Stemmons Fwy, Dallas, TX 75247') RETURNING "scheduling_jobassignment"."id"; args=(24, 192, '7800 N Stemmons Fwy, Dallas, TX 75247'); alias=default
[2025-09-30 20:28:42,788] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (25, 192, '7800 N Stemmons Fwy, Dallas, TX 75247') RETURNING "scheduling_jobassignment"."id"; args=(25, 192, '7800 N Stemmons Fwy, Dallas, TX 75247'); alias=default
[2025-09-30 20:28:42,788] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Ruth Ruiz', '7800 N Stemmons Fwy, Dallas, TX 75247', '2025-10-07', 8, 6) RETURNING "scheduling_booking"."id"; args=('Ruth Ruiz', '7800 N Stemmons Fwy, Dallas, TX 75247', '2025-10-07', 8, 6); alias=default
[2025-09-30 20:28:42,788] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:42,788] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (28, 193, '7800 N Stemmons Fwy, Dallas, TX 75247') RETURNING "scheduling_jobassignment"."id"; args=(28, 193, '7800 N Stemmons Fwy, Dallas, TX 75247'); alias=default
[2025-09-30 20:28:42,808] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 193, '7800 N Stemmons Fwy, Dallas, TX 75247') RETURNING "scheduling_jobassignment"."id"; args=(26, 193, '7800 N Stemmons Fwy, Dallas, TX 75247'); alias=default
[2025-09-30 20:28:42,813] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Kristen Lawson', '9999 Forest Ln, Dallas, TX 75243', '2025-10-08', 5, 4) RETURNING "scheduling_booking"."id"; args=('Kristen Lawson', '9999 Forest Ln, Dallas, TX 75243', '2025-10-08', 5, 4); alias=default
[2025-09-30 20:28:42,817] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:42,818] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (20, 194, '9999 Forest Ln, Dallas, TX 75243') RETURNING "scheduling_jobassignment"."id"; args=(20, 194, '9999 Forest Ln, Dallas, TX 75243'); alias=default
[2025-09-30 20:28:42,823] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Rebecca Gould', '123 Greenville Ave, Dallas, TX 75206', '2025-10-08', 6, 4) RETURNING "scheduling_booking"."id"; args=('Rebecca Gould', '123 Greenville Ave, Dallas, TX 75206', '2025-10-08', 6, 4); alias=default
[2025-09-30 20:28:42,828] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:42,829] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 195, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(17, 195, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 20:28:42,834] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (20, 195, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(20, 195, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 20:28:42,839] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jared Suarez', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-08', 8, 4) RETURNING "scheduling_booking"."id"; args=('Jared Suarez', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-08', 8, 4); alias=default
[2025-09-30 20:28:42,839] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:42,839] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 196, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(17, 196, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:42,839] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Mark Lopez', '7800 N Stemmons Fwy, Dallas, TX 75247', '2025-10-08', 7, 5) RETURNING "scheduling_booking"."id"; args=('Mark Lopez', '7800 N Stemmons Fwy, Dallas, TX 75247', '2025-10-08', 7, 5); alias=default
[2025-09-30 20:28:42,839] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:42,855] DEBUG django.db.backends (0.016) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (25, 197, '7800 N Stemmons Fwy, Dallas, TX 75247') RETURNING "scheduling_jobassignment"."id"; args=(25, 197, '7800 N Stemmons Fwy, Dallas, TX 75247'); alias=default
[2025-09-30 20:28:42,855] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 197, '7800 N Stemmons Fwy, Dallas, TX 75247') RETURNING "scheduling_jobassignment"."id"; args=(24, 197, '7800 N Stemmons Fwy, Dallas, TX 75247'); alias=default
[2025-09-30 20:28:42,855] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (21, 197, '7800 N Stemmons Fwy, Dallas, TX 75247') RETURNING "scheduling_jobassignment"."id"; args=(21, 197, '7800 N Stemmons Fwy, Dallas, TX 75247'); alias=default
[2025-09-30 20:28:42,855] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Dawn Francis', '4500 Harry Hines Blvd, Dallas, TX 75219', '2025-10-08', 8, 5) RETURNING "scheduling_booking"."id"; args=('Dawn Francis', '4500 Harry Hines Blvd, Dallas, TX 75219', '2025-10-08', 8, 5); alias=default
[2025-09-30 20:28:42,874] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:42,875] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (23, 198, '4500 Harry Hines Blvd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(23, 198, '4500 Harry Hines Blvd, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:42,881] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Michael Pennington', '4500 Harry Hines Blvd, Dallas, TX 75219', '2025-10-08', 5, 6) RETURNING "scheduling_booking"."id"; args=('Michael Pennington', '4500 Harry Hines Blvd, Dallas, TX 75219', '2025-10-08', 5, 6); alias=default
[2025-09-30 20:28:42,885] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:42,887] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (29, 199, '4500 Harry Hines Blvd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(29, 199, '4500 Harry Hines Blvd, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:42,892] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('David Duncan', '12200 Preston Rd, Dallas, TX 75230', '2025-10-08', 7, 6) RETURNING "scheduling_booking"."id"; args=('David Duncan', '12200 Preston Rd, Dallas, TX 75230', '2025-10-08', 7, 6); alias=default
[2025-09-30 20:28:42,896] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:42,897] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 200, '12200 Preston Rd, Dallas, TX 75230') RETURNING "scheduling_jobassignment"."id"; args=(26, 200, '12200 Preston Rd, Dallas, TX 75230'); alias=default
[2025-09-30 20:28:42,903] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (29, 200, '12200 Preston Rd, Dallas, TX 75230') RETURNING "scheduling_jobassignment"."id"; args=(29, 200, '12200 Preston Rd, Dallas, TX 75230'); alias=default
[2025-09-30 20:28:42,955] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (28, 200, '12200 Preston Rd, Dallas, TX 75230') RETURNING "scheduling_jobassignment"."id"; args=(28, 200, '12200 Preston Rd, Dallas, TX 75230'); alias=default
[2025-09-30 20:28:42,955] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Kimberly Buckley', '8900 Hillcrest Rd, Dallas, TX 75225', '2025-10-09', 5, 5) RETURNING "scheduling_booking"."id"; args=('Kimberly Buckley', '8900 Hillcrest Rd, Dallas, TX 75225', '2025-10-09', 5, 5); alias=default
[2025-09-30 20:28:42,955] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:42,955] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 201, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(24, 201, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:42,972] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (22, 201, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(22, 201, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:42,972] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Ricky Cole', '8900 Hillcrest Rd, Dallas, TX 75225', '2025-10-09', 8, 6) RETURNING "scheduling_booking"."id"; args=('Ricky Cole', '8900 Hillcrest Rd, Dallas, TX 75225', '2025-10-09', 8, 6); alias=default
[2025-09-30 20:28:42,988] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:42,988] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 202, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(26, 202, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:42,988] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (30, 202, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(30, 202, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:42,988] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Mary Hunter', '12200 Preston Rd, Dallas, TX 75230', '2025-10-10', 5, 4) RETURNING "scheduling_booking"."id"; args=('Mary Hunter', '12200 Preston Rd, Dallas, TX 75230', '2025-10-10', 5, 4); alias=default
[2025-09-30 20:28:43,005] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:43,005] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 203, '12200 Preston Rd, Dallas, TX 75230') RETURNING "scheduling_jobassignment"."id"; args=(17, 203, '12200 Preston Rd, Dallas, TX 75230'); alias=default
[2025-09-30 20:28:43,005] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 203, '12200 Preston Rd, Dallas, TX 75230') RETURNING "scheduling_jobassignment"."id"; args=(18, 203, '12200 Preston Rd, Dallas, TX 75230'); alias=default
[2025-09-30 20:28:43,005] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Ryan Casey', '100 Highland Park Village, Dallas, TX 75205', '2025-10-10', 6, 4) RETURNING "scheduling_booking"."id"; args=('Ryan Casey', '100 Highland Park Village, Dallas, TX 75205', '2025-10-10', 6, 4); alias=default
[2025-09-30 20:28:43,022] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:43,022] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 204, '100 Highland Park Village, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(18, 204, '100 Highland Park Village, Dallas, TX 75205'); alias=default
[2025-09-30 20:28:43,022] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (20, 204, '100 Highland Park Village, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(20, 204, '100 Highland Park Village, Dallas, TX 75205'); alias=default
[2025-09-30 20:28:43,022] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 204, '100 Highland Park Village, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(16, 204, '100 Highland Park Village, Dallas, TX 75205'); alias=default
[2025-09-30 20:28:43,039] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Amber Williams', '100 Highland Park Village, Dallas, TX 75205', '2025-10-10', 7, 5) RETURNING "scheduling_booking"."id"; args=('Amber Williams', '100 Highland Park Village, Dallas, TX 75205', '2025-10-10', 7, 5); alias=default
[2025-09-30 20:28:43,039] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:43,039] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 205, '100 Highland Park Village, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(24, 205, '100 Highland Park Village, Dallas, TX 75205'); alias=default
[2025-09-30 20:28:43,039] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('James Thompson', '100 Highland Park Village, Dallas, TX 75205', '2025-10-10', 7, 6) RETURNING "scheduling_booking"."id"; args=('James Thompson', '100 Highland Park Village, Dallas, TX 75205', '2025-10-10', 7, 6); alias=default
[2025-09-30 20:28:43,055] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:43,055] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (29, 206, '100 Highland Park Village, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(29, 206, '100 Highland Park Village, Dallas, TX 75205'); alias=default
[2025-09-30 20:28:43,055] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Austin Leblanc', '123 Greenville Ave, Dallas, TX 75206', '2025-10-10', 8, 6) RETURNING "scheduling_booking"."id"; args=('Austin Leblanc', '123 Greenville Ave, Dallas, TX 75206', '2025-10-10', 8, 6); alias=default
[2025-09-30 20:28:43,071] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:43,072] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (30, 207, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(30, 207, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 20:28:43,072] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Charles Williams', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-11', 6, 4) RETURNING "scheduling_booking"."id"; args=('Charles Williams', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-11', 6, 4); alias=default
[2025-09-30 20:28:43,072] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:43,072] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (20, 208, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(20, 208, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:43,092] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 208, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(19, 208, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:43,098] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Shawn Davis', '2500 Cedar Springs Rd, Dallas, TX 75201', '2025-10-11', 8, 4) RETURNING "scheduling_booking"."id"; args=('Shawn Davis', '2500 Cedar Springs Rd, Dallas, TX 75201', '2025-10-11', 8, 4); alias=default
[2025-09-30 20:28:43,101] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:43,101] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 209, '2500 Cedar Springs Rd, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(17, 209, '2500 Cedar Springs Rd, Dallas, TX 75201'); alias=default
[2025-09-30 20:28:43,106] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 209, '2500 Cedar Springs Rd, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(19, 209, '2500 Cedar Springs Rd, Dallas, TX 75201'); alias=default
[2025-09-30 20:28:43,106] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Ryan Jensen', '7000 Mockingbird Ln, Dallas, TX 75214', '2025-10-11', 5, 5) RETURNING "scheduling_booking"."id"; args=('Ryan Jensen', '7000 Mockingbird Ln, Dallas, TX 75214', '2025-10-11', 5, 5); alias=default
[2025-09-30 20:28:43,106] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:43,122] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (22, 210, '7000 Mockingbird Ln, Dallas, TX 75214') RETURNING "scheduling_jobassignment"."id"; args=(22, 210, '7000 Mockingbird Ln, Dallas, TX 75214'); alias=default
[2025-09-30 20:28:43,123] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (21, 210, '7000 Mockingbird Ln, Dallas, TX 75214') RETURNING "scheduling_jobassignment"."id"; args=(21, 210, '7000 Mockingbird Ln, Dallas, TX 75214'); alias=default
[2025-09-30 20:28:43,123] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Carl Walker', '2500 Cedar Springs Rd, Dallas, TX 75201', '2025-10-11', 8, 5) RETURNING "scheduling_booking"."id"; args=('Carl Walker', '2500 Cedar Springs Rd, Dallas, TX 75201', '2025-10-11', 8, 5); alias=default
[2025-09-30 20:28:43,138] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:43,139] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (21, 211, '2500 Cedar Springs Rd, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(21, 211, '2500 Cedar Springs Rd, Dallas, TX 75201'); alias=default
[2025-09-30 20:28:43,139] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 211, '2500 Cedar Springs Rd, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(24, 211, '2500 Cedar Springs Rd, Dallas, TX 75201'); alias=default
[2025-09-30 20:28:43,139] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (22, 211, '2500 Cedar Springs Rd, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(22, 211, '2500 Cedar Springs Rd, Dallas, TX 75201'); alias=default
[2025-09-30 20:28:43,155] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('April Carr', '9999 Forest Ln, Dallas, TX 75243', '2025-10-11', 5, 6) RETURNING "scheduling_booking"."id"; args=('April Carr', '9999 Forest Ln, Dallas, TX 75243', '2025-10-11', 5, 6); alias=default
[2025-09-30 20:28:43,155] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:43,155] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (29, 212, '9999 Forest Ln, Dallas, TX 75243') RETURNING "scheduling_jobassignment"."id"; args=(29, 212, '9999 Forest Ln, Dallas, TX 75243'); alias=default
[2025-09-30 20:28:43,155] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (30, 212, '9999 Forest Ln, Dallas, TX 75243') RETURNING "scheduling_jobassignment"."id"; args=(30, 212, '9999 Forest Ln, Dallas, TX 75243'); alias=default
[2025-09-30 20:28:43,172] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 212, '9999 Forest Ln, Dallas, TX 75243') RETURNING "scheduling_jobassignment"."id"; args=(26, 212, '9999 Forest Ln, Dallas, TX 75243'); alias=default
[2025-09-30 20:28:43,172] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Matthew Brown', '2500 Cedar Springs Rd, Dallas, TX 75201', '2025-10-11', 6, 6) RETURNING "scheduling_booking"."id"; args=('Matthew Brown', '2500 Cedar Springs Rd, Dallas, TX 75201', '2025-10-11', 6, 6); alias=default
[2025-09-30 20:28:43,172] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:43,172] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (27, 213, '2500 Cedar Springs Rd, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(27, 213, '2500 Cedar Springs Rd, Dallas, TX 75201'); alias=default
[2025-09-30 20:28:43,191] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 213, '2500 Cedar Springs Rd, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(26, 213, '2500 Cedar Springs Rd, Dallas, TX 75201'); alias=default
[2025-09-30 20:28:43,196] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Mr. Jonathan Smith', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-11', 8, 6) RETURNING "scheduling_booking"."id"; args=('Mr. Jonathan Smith', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-11', 8, 6); alias=default
[2025-09-30 20:28:43,200] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:43,201] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (27, 214, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(27, 214, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 20:28:43,206] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (29, 214, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(29, 214, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 20:28:43,211] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Kimberly Kim', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-12', 5, 4) RETURNING "scheduling_booking"."id"; args=('Kimberly Kim', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-12', 5, 4); alias=default
[2025-09-30 20:28:43,211] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:43,211] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (20, 215, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(20, 215, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:43,222] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 215, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(18, 215, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:43,222] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Natalie Hall', '5600 Ross Ave, Dallas, TX 75206', '2025-10-12', 6, 4) RETURNING "scheduling_booking"."id"; args=('Natalie Hall', '5600 Ross Ave, Dallas, TX 75206', '2025-10-12', 6, 4); alias=default
[2025-09-30 20:28:43,222] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:43,222] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (20, 216, '5600 Ross Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(20, 216, '5600 Ross Ave, Dallas, TX 75206'); alias=default
[2025-09-30 20:28:43,238] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Amy Paul', '9999 Forest Ln, Dallas, TX 75243', '2025-10-13', 5, 4) RETURNING "scheduling_booking"."id"; args=('Amy Paul', '9999 Forest Ln, Dallas, TX 75243', '2025-10-13', 5, 4); alias=default
[2025-09-30 20:28:43,238] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:43,238] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 217, '9999 Forest Ln, Dallas, TX 75243') RETURNING "scheduling_jobassignment"."id"; args=(19, 217, '9999 Forest Ln, Dallas, TX 75243'); alias=default
[2025-09-30 20:28:43,238] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 217, '9999 Forest Ln, Dallas, TX 75243') RETURNING "scheduling_jobassignment"."id"; args=(18, 217, '9999 Forest Ln, Dallas, TX 75243'); alias=default
[2025-09-30 20:28:43,256] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 217, '9999 Forest Ln, Dallas, TX 75243') RETURNING "scheduling_jobassignment"."id"; args=(17, 217, '9999 Forest Ln, Dallas, TX 75243'); alias=default
[2025-09-30 20:28:43,256] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Alexander Dickerson', '4800 W Lovers Ln, Dallas, TX 75209', '2025-10-13', 7, 4) RETURNING "scheduling_booking"."id"; args=('Alexander Dickerson', '4800 W Lovers Ln, Dallas, TX 75209', '2025-10-13', 7, 4); alias=default
[2025-09-30 20:28:43,256] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:43,256] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (20, 218, '4800 W Lovers Ln, Dallas, TX 75209') RETURNING "scheduling_jobassignment"."id"; args=(20, 218, '4800 W Lovers Ln, Dallas, TX 75209'); alias=default
[2025-09-30 20:28:43,272] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 218, '4800 W Lovers Ln, Dallas, TX 75209') RETURNING "scheduling_jobassignment"."id"; args=(17, 218, '4800 W Lovers Ln, Dallas, TX 75209'); alias=default
[2025-09-30 20:28:43,272] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Holly Mason', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-13', 8, 4) RETURNING "scheduling_booking"."id"; args=('Holly Mason', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-13', 8, 4); alias=default
[2025-09-30 20:28:43,272] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:43,272] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 219, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(18, 219, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 20:28:43,289] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 219, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(16, 219, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 20:28:43,289] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 219, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(19, 219, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 20:28:43,289] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Angela Stephens', '6000 Preston Rd, Dallas, TX 75205', '2025-10-13', 5, 5) RETURNING "scheduling_booking"."id"; args=('Angela Stephens', '6000 Preston Rd, Dallas, TX 75205', '2025-10-13', 5, 5); alias=default
[2025-09-30 20:28:43,308] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:43,311] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 220, '6000 Preston Rd, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(24, 220, '6000 Preston Rd, Dallas, TX 75205'); alias=default
[2025-09-30 20:28:43,316] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (25, 220, '6000 Preston Rd, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(25, 220, '6000 Preston Rd, Dallas, TX 75205'); alias=default
[2025-09-30 20:28:43,320] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (21, 220, '6000 Preston Rd, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(21, 220, '6000 Preston Rd, Dallas, TX 75205'); alias=default
[2025-09-30 20:28:43,322] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jason Carroll', '4500 Harry Hines Blvd, Dallas, TX 75219', '2025-10-13', 7, 5) RETURNING "scheduling_booking"."id"; args=('Jason Carroll', '4500 Harry Hines Blvd, Dallas, TX 75219', '2025-10-13', 7, 5); alias=default
[2025-09-30 20:28:43,322] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:43,322] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (23, 221, '4500 Harry Hines Blvd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(23, 221, '4500 Harry Hines Blvd, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:43,337] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Christopher Houston', '6000 Preston Rd, Dallas, TX 75205', '2025-10-13', 8, 5) RETURNING "scheduling_booking"."id"; args=('Christopher Houston', '6000 Preston Rd, Dallas, TX 75205', '2025-10-13', 8, 5); alias=default
[2025-09-30 20:28:43,339] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:43,339] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (23, 222, '6000 Preston Rd, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(23, 222, '6000 Preston Rd, Dallas, TX 75205'); alias=default
[2025-09-30 20:28:43,339] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (21, 222, '6000 Preston Rd, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(21, 222, '6000 Preston Rd, Dallas, TX 75205'); alias=default
[2025-09-30 20:28:43,356] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Zachary Fitzgerald', '8900 Hillcrest Rd, Dallas, TX 75225', '2025-10-13', 6, 6) RETURNING "scheduling_booking"."id"; args=('Zachary Fitzgerald', '8900 Hillcrest Rd, Dallas, TX 75225', '2025-10-13', 6, 6); alias=default
[2025-09-30 20:28:43,356] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:43,356] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (27, 223, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(27, 223, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:43,372] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (28, 223, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(28, 223, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:43,372] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Sharon Jones', '6000 Preston Rd, Dallas, TX 75205', '2025-10-13', 7, 6) RETURNING "scheduling_booking"."id"; args=('Sharon Jones', '6000 Preston Rd, Dallas, TX 75205', '2025-10-13', 7, 6); alias=default
[2025-09-30 20:28:43,372] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:43,372] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 224, '6000 Preston Rd, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(26, 224, '6000 Preston Rd, Dallas, TX 75205'); alias=default
[2025-09-30 20:28:43,389] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Julia Khan', '1234 Lovers Ln, Dallas, TX 75225', '2025-10-13', 8, 6) RETURNING "scheduling_booking"."id"; args=('Julia Khan', '1234 Lovers Ln, Dallas, TX 75225', '2025-10-13', 8, 6); alias=default
[2025-09-30 20:28:43,389] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:43,389] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (28, 225, '1234 Lovers Ln, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(28, 225, '1234 Lovers Ln, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:43,405] DEBUG django.db.backends (0.015) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (27, 225, '1234 Lovers Ln, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(27, 225, '1234 Lovers Ln, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:43,413] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jamie Lucero', '9999 Forest Ln, Dallas, TX 75243', '2025-10-14', 6, 4) RETURNING "scheduling_booking"."id"; args=('Jamie Lucero', '9999 Forest Ln, Dallas, TX 75243', '2025-10-14', 6, 4); alias=default
[2025-09-30 20:28:43,418] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:43,419] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 226, '9999 Forest Ln, Dallas, TX 75243') RETURNING "scheduling_jobassignment"."id"; args=(19, 226, '9999 Forest Ln, Dallas, TX 75243'); alias=default
[2025-09-30 20:28:43,425] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Mark Rodriguez', '7000 Mockingbird Ln, Dallas, TX 75214', '2025-10-14', 7, 4) RETURNING "scheduling_booking"."id"; args=('Mark Rodriguez', '7000 Mockingbird Ln, Dallas, TX 75214', '2025-10-14', 7, 4); alias=default
[2025-09-30 20:28:43,430] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:43,430] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 227, '7000 Mockingbird Ln, Dallas, TX 75214') RETURNING "scheduling_jobassignment"."id"; args=(18, 227, '7000 Mockingbird Ln, Dallas, TX 75214'); alias=default
[2025-09-30 20:28:43,439] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Michael Moss', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-14', 7, 5) RETURNING "scheduling_booking"."id"; args=('Michael Moss', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-14', 7, 5); alias=default
[2025-09-30 20:28:43,439] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:43,439] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (22, 228, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(22, 228, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 20:28:43,439] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (21, 228, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(21, 228, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 20:28:43,455] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Valerie Nelson', '4000 Cedar Springs Rd, Dallas, TX 75219', '2025-10-14', 8, 5) RETURNING "scheduling_booking"."id"; args=('Valerie Nelson', '4000 Cedar Springs Rd, Dallas, TX 75219', '2025-10-14', 8, 5); alias=default
[2025-09-30 20:28:43,455] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:43,455] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (21, 229, '4000 Cedar Springs Rd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(21, 229, '4000 Cedar Springs Rd, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:43,472] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Johnathan Stark', '8900 Hillcrest Rd, Dallas, TX 75225', '2025-10-14', 5, 6) RETURNING "scheduling_booking"."id"; args=('Johnathan Stark', '8900 Hillcrest Rd, Dallas, TX 75225', '2025-10-14', 5, 6); alias=default
[2025-09-30 20:28:43,472] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:43,472] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (28, 230, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(28, 230, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:43,489] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (30, 230, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(30, 230, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:43,504] DEBUG django.db.backends (0.016) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (27, 230, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(27, 230, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:43,506] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Gary Webb', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-14', 8, 6) RETURNING "scheduling_booking"."id"; args=('Gary Webb', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-14', 8, 6); alias=default
[2025-09-30 20:28:43,506] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:43,506] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 231, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(26, 231, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 20:28:43,524] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (29, 231, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(29, 231, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 20:28:43,531] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (28, 231, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(28, 231, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 20:28:43,537] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Andrea Gray', '2200 N Pearl St, Dallas, TX 75201', '2025-10-15', 6, 4) RETURNING "scheduling_booking"."id"; args=('Andrea Gray', '2200 N Pearl St, Dallas, TX 75201', '2025-10-15', 6, 4); alias=default
[2025-09-30 20:28:43,544] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:43,546] DEBUG django.db.backends (0.016) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 232, '2200 N Pearl St, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(19, 232, '2200 N Pearl St, Dallas, TX 75201'); alias=default
[2025-09-30 20:28:43,551] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 232, '2200 N Pearl St, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(17, 232, '2200 N Pearl St, Dallas, TX 75201'); alias=default
[2025-09-30 20:28:43,558] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (20, 232, '2200 N Pearl St, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(20, 232, '2200 N Pearl St, Dallas, TX 75201'); alias=default
[2025-09-30 20:28:43,564] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Luke Flowers', '4500 Harry Hines Blvd, Dallas, TX 75219', '2025-10-15', 6, 5) RETURNING "scheduling_booking"."id"; args=('Luke Flowers', '4500 Harry Hines Blvd, Dallas, TX 75219', '2025-10-15', 6, 5); alias=default
[2025-09-30 20:28:43,564] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:43,564] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (25, 233, '4500 Harry Hines Blvd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(25, 233, '4500 Harry Hines Blvd, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:43,577] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (21, 233, '4500 Harry Hines Blvd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(21, 233, '4500 Harry Hines Blvd, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:43,577] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 233, '4500 Harry Hines Blvd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(24, 233, '4500 Harry Hines Blvd, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:43,589] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Caroline Prince', '12200 Preston Rd, Dallas, TX 75230', '2025-10-15', 7, 5) RETURNING "scheduling_booking"."id"; args=('Caroline Prince', '12200 Preston Rd, Dallas, TX 75230', '2025-10-15', 7, 5); alias=default
[2025-09-30 20:28:43,589] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:43,589] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 234, '12200 Preston Rd, Dallas, TX 75230') RETURNING "scheduling_jobassignment"."id"; args=(24, 234, '12200 Preston Rd, Dallas, TX 75230'); alias=default
[2025-09-30 20:28:43,607] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Annette Myers', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-15', 8, 5) RETURNING "scheduling_booking"."id"; args=('Annette Myers', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-15', 8, 5); alias=default
[2025-09-30 20:28:43,608] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:43,608] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 235, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(24, 235, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 20:28:43,608] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (22, 235, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(22, 235, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 20:28:43,626] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Michael Lester', '8900 Hillcrest Rd, Dallas, TX 75225', '2025-10-15', 8, 6) RETURNING "scheduling_booking"."id"; args=('Michael Lester', '8900 Hillcrest Rd, Dallas, TX 75225', '2025-10-15', 8, 6); alias=default
[2025-09-30 20:28:43,631] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:43,633] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (30, 236, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(30, 236, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:43,640] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (27, 236, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(27, 236, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:43,647] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Roberta Smith', '7000 Mockingbird Ln, Dallas, TX 75214', '2025-10-16', 8, 4) RETURNING "scheduling_booking"."id"; args=('Roberta Smith', '7000 Mockingbird Ln, Dallas, TX 75214', '2025-10-16', 8, 4); alias=default
[2025-09-30 20:28:43,648] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:43,648] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 237, '7000 Mockingbird Ln, Dallas, TX 75214') RETURNING "scheduling_jobassignment"."id"; args=(17, 237, '7000 Mockingbird Ln, Dallas, TX 75214'); alias=default
[2025-09-30 20:28:43,672] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 237, '7000 Mockingbird Ln, Dallas, TX 75214') RETURNING "scheduling_jobassignment"."id"; args=(18, 237, '7000 Mockingbird Ln, Dallas, TX 75214'); alias=default
[2025-09-30 20:28:43,672] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Dylan Schwartz', '4800 W Lovers Ln, Dallas, TX 75209', '2025-10-16', 5, 5) RETURNING "scheduling_booking"."id"; args=('Dylan Schwartz', '4800 W Lovers Ln, Dallas, TX 75209', '2025-10-16', 5, 5); alias=default
[2025-09-30 20:28:43,690] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:43,690] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 238, '4800 W Lovers Ln, Dallas, TX 75209') RETURNING "scheduling_jobassignment"."id"; args=(24, 238, '4800 W Lovers Ln, Dallas, TX 75209'); alias=default
[2025-09-30 20:28:43,690] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('David Jackson', '6000 Preston Rd, Dallas, TX 75205', '2025-10-16', 5, 6) RETURNING "scheduling_booking"."id"; args=('David Jackson', '6000 Preston Rd, Dallas, TX 75205', '2025-10-16', 5, 6); alias=default
[2025-09-30 20:28:43,690] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:43,705] DEBUG django.db.backends (0.016) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (27, 239, '6000 Preston Rd, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(27, 239, '6000 Preston Rd, Dallas, TX 75205'); alias=default
[2025-09-30 20:28:43,706] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 239, '6000 Preston Rd, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(26, 239, '6000 Preston Rd, Dallas, TX 75205'); alias=default
[2025-09-30 20:28:43,706] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Christina Hurley', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-16', 6, 6) RETURNING "scheduling_booking"."id"; args=('Christina Hurley', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-16', 6, 6); alias=default
[2025-09-30 20:28:43,721] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:43,723] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (30, 240, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(30, 240, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 20:28:43,729] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (29, 240, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(29, 240, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 20:28:43,729] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 240, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(26, 240, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 20:28:43,741] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Joseph Price', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-16', 7, 6) RETURNING "scheduling_booking"."id"; args=('Joseph Price', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-16', 7, 6); alias=default
[2025-09-30 20:28:43,747] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:43,748] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (27, 241, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(27, 241, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 20:28:43,754] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 241, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(26, 241, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 20:28:43,760] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Christian Shannon', '2500 Cedar Springs Rd, Dallas, TX 75201', '2025-10-17', 5, 4) RETURNING "scheduling_booking"."id"; args=('Christian Shannon', '2500 Cedar Springs Rd, Dallas, TX 75201', '2025-10-17', 5, 4); alias=default
[2025-09-30 20:28:43,764] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:43,766] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 242, '2500 Cedar Springs Rd, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(19, 242, '2500 Cedar Springs Rd, Dallas, TX 75201'); alias=default
[2025-09-30 20:28:43,771] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 242, '2500 Cedar Springs Rd, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(16, 242, '2500 Cedar Springs Rd, Dallas, TX 75201'); alias=default
[2025-09-30 20:28:43,771] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Felicia Martin', '2500 Cedar Springs Rd, Dallas, TX 75201', '2025-10-17', 8, 5) RETURNING "scheduling_booking"."id"; args=('Felicia Martin', '2500 Cedar Springs Rd, Dallas, TX 75201', '2025-10-17', 8, 5); alias=default
[2025-09-30 20:28:43,771] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:43,771] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (25, 243, '2500 Cedar Springs Rd, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(25, 243, '2500 Cedar Springs Rd, Dallas, TX 75201'); alias=default
[2025-09-30 20:28:43,787] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 243, '2500 Cedar Springs Rd, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(24, 243, '2500 Cedar Springs Rd, Dallas, TX 75201'); alias=default
[2025-09-30 20:28:43,787] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (23, 243, '2500 Cedar Springs Rd, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(23, 243, '2500 Cedar Springs Rd, Dallas, TX 75201'); alias=default
[2025-09-30 20:28:43,787] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Kristine Hicks', '2500 Cedar Springs Rd, Dallas, TX 75201', '2025-10-17', 6, 6) RETURNING "scheduling_booking"."id"; args=('Kristine Hicks', '2500 Cedar Springs Rd, Dallas, TX 75201', '2025-10-17', 6, 6); alias=default
[2025-09-30 20:28:43,803] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:43,803] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (30, 244, '2500 Cedar Springs Rd, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(30, 244, '2500 Cedar Springs Rd, Dallas, TX 75201'); alias=default
[2025-09-30 20:28:43,803] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (27, 244, '2500 Cedar Springs Rd, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(27, 244, '2500 Cedar Springs Rd, Dallas, TX 75201'); alias=default
[2025-09-30 20:28:43,803] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 244, '2500 Cedar Springs Rd, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(26, 244, '2500 Cedar Springs Rd, Dallas, TX 75201'); alias=default
[2025-09-30 20:28:43,818] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Michele Griffith', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-18', 5, 5) RETURNING "scheduling_booking"."id"; args=('Michele Griffith', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-18', 5, 5); alias=default
[2025-09-30 20:28:43,818] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:43,818] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (23, 245, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(23, 245, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 20:28:43,818] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 245, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(24, 245, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 20:28:43,834] DEBUG django.db.backends (0.016) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (22, 245, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(22, 245, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 20:28:43,834] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Cynthia Jenkins', '123 Greenville Ave, Dallas, TX 75206', '2025-10-18', 8, 5) RETURNING "scheduling_booking"."id"; args=('Cynthia Jenkins', '123 Greenville Ave, Dallas, TX 75206', '2025-10-18', 8, 5); alias=default
[2025-09-30 20:28:43,834] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:43,834] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (23, 246, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(23, 246, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 20:28:43,850] DEBUG django.db.backends (0.016) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Christopher Hall', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-18', 5, 6) RETURNING "scheduling_booking"."id"; args=('Christopher Hall', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-18', 5, 6); alias=default
[2025-09-30 20:28:43,850] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:43,850] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (29, 247, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(29, 247, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 20:28:43,850] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (30, 247, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(30, 247, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 20:28:43,866] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 247, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(26, 247, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 20:28:43,872] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Patricia Jenkins', '6000 Preston Rd, Dallas, TX 75205', '2025-10-19', 7, 4) RETURNING "scheduling_booking"."id"; args=('Patricia Jenkins', '6000 Preston Rd, Dallas, TX 75205', '2025-10-19', 7, 4); alias=default
[2025-09-30 20:28:43,879] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:43,881] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 248, '6000 Preston Rd, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(17, 248, '6000 Preston Rd, Dallas, TX 75205'); alias=default
[2025-09-30 20:28:43,885] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 248, '6000 Preston Rd, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(16, 248, '6000 Preston Rd, Dallas, TX 75205'); alias=default
[2025-09-30 20:28:43,890] DEBUG django.db.backends (0.015) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Omar Morris', '8900 Hillcrest Rd, Dallas, TX 75225', '2025-10-19', 5, 5) RETURNING "scheduling_booking"."id"; args=('Omar Morris', '8900 Hillcrest Rd, Dallas, TX 75225', '2025-10-19', 5, 5); alias=default
[2025-09-30 20:28:43,894] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:43,895] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (23, 249, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(23, 249, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:43,900] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Michael Perez', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-19', 6, 5) RETURNING "scheduling_booking"."id"; args=('Michael Perez', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-19', 6, 5); alias=default
[2025-09-30 20:28:43,926] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:43,927] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (21, 250, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(21, 250, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 20:28:43,933] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Troy Conner', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-20', 6, 4) RETURNING "scheduling_booking"."id"; args=('Troy Conner', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-20', 6, 4); alias=default
[2025-09-30 20:28:43,936] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:43,937] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 251, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(16, 251, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 20:28:43,943] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Kelsey Fitzgerald', '7800 N Stemmons Fwy, Dallas, TX 75247', '2025-10-20', 7, 4) RETURNING "scheduling_booking"."id"; args=('Kelsey Fitzgerald', '7800 N Stemmons Fwy, Dallas, TX 75247', '2025-10-20', 7, 4); alias=default
[2025-09-30 20:28:43,947] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:43,948] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 252, '7800 N Stemmons Fwy, Dallas, TX 75247') RETURNING "scheduling_jobassignment"."id"; args=(16, 252, '7800 N Stemmons Fwy, Dallas, TX 75247'); alias=default
[2025-09-30 20:28:43,953] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 252, '7800 N Stemmons Fwy, Dallas, TX 75247') RETURNING "scheduling_jobassignment"."id"; args=(17, 252, '7800 N Stemmons Fwy, Dallas, TX 75247'); alias=default
[2025-09-30 20:28:43,959] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (20, 252, '7800 N Stemmons Fwy, Dallas, TX 75247') RETURNING "scheduling_jobassignment"."id"; args=(20, 252, '7800 N Stemmons Fwy, Dallas, TX 75247'); alias=default
[2025-09-30 20:28:43,964] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Henry Mcdowell', '2500 Cedar Springs Rd, Dallas, TX 75201', '2025-10-20', 5, 6) RETURNING "scheduling_booking"."id"; args=('Henry Mcdowell', '2500 Cedar Springs Rd, Dallas, TX 75201', '2025-10-20', 5, 6); alias=default
[2025-09-30 20:28:43,968] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:43,970] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (29, 253, '2500 Cedar Springs Rd, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(29, 253, '2500 Cedar Springs Rd, Dallas, TX 75201'); alias=default
[2025-09-30 20:28:43,975] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (30, 253, '2500 Cedar Springs Rd, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(30, 253, '2500 Cedar Springs Rd, Dallas, TX 75201'); alias=default
[2025-09-30 20:28:43,975] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Thomas Page', '4500 Harry Hines Blvd, Dallas, TX 75219', '2025-10-20', 6, 6) RETURNING "scheduling_booking"."id"; args=('Thomas Page', '4500 Harry Hines Blvd, Dallas, TX 75219', '2025-10-20', 6, 6); alias=default
[2025-09-30 20:28:43,975] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:43,975] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 254, '4500 Harry Hines Blvd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(26, 254, '4500 Harry Hines Blvd, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:43,975] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (27, 254, '4500 Harry Hines Blvd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(27, 254, '4500 Harry Hines Blvd, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:43,990] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (30, 254, '4500 Harry Hines Blvd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(30, 254, '4500 Harry Hines Blvd, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:43,990] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Mrs. Tracey Williams', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-21', 5, 4) RETURNING "scheduling_booking"."id"; args=('Mrs. Tracey Williams', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-21', 5, 4); alias=default
[2025-09-30 20:28:43,990] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:43,990] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 255, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(19, 255, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 20:28:44,006] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('James Coleman', '123 Greenville Ave, Dallas, TX 75206', '2025-10-21', 6, 4) RETURNING "scheduling_booking"."id"; args=('James Coleman', '123 Greenville Ave, Dallas, TX 75206', '2025-10-21', 6, 4); alias=default
[2025-09-30 20:28:44,006] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:44,006] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 256, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(17, 256, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 20:28:44,006] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (20, 256, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(20, 256, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 20:28:44,022] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 256, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(16, 256, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 20:28:44,022] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Steven Nelson', '123 Greenville Ave, Dallas, TX 75206', '2025-10-21', 5, 5) RETURNING "scheduling_booking"."id"; args=('Steven Nelson', '123 Greenville Ave, Dallas, TX 75206', '2025-10-21', 5, 5); alias=default
[2025-09-30 20:28:44,022] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:44,022] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (21, 257, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(21, 257, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 20:28:44,037] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 257, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(24, 257, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 20:28:44,037] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (23, 257, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(23, 257, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 20:28:44,037] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Melissa Martin', '8900 Hillcrest Rd, Dallas, TX 75225', '2025-10-21', 7, 5) RETURNING "scheduling_booking"."id"; args=('Melissa Martin', '8900 Hillcrest Rd, Dallas, TX 75225', '2025-10-21', 7, 5); alias=default
[2025-09-30 20:28:44,053] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:44,053] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (25, 258, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(25, 258, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:44,053] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (21, 258, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(21, 258, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:44,053] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 258, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(24, 258, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:44,068] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Andrew Melton', '123 Greenville Ave, Dallas, TX 75206', '2025-10-21', 8, 5) RETURNING "scheduling_booking"."id"; args=('Andrew Melton', '123 Greenville Ave, Dallas, TX 75206', '2025-10-21', 8, 5); alias=default
[2025-09-30 20:28:44,068] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:44,068] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (25, 259, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(25, 259, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 20:28:44,068] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Christopher Becker', '4000 Cedar Springs Rd, Dallas, TX 75219', '2025-10-21', 5, 6) RETURNING "scheduling_booking"."id"; args=('Christopher Becker', '4000 Cedar Springs Rd, Dallas, TX 75219', '2025-10-21', 5, 6); alias=default
[2025-09-30 20:28:44,084] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:44,084] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (28, 260, '4000 Cedar Springs Rd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(28, 260, '4000 Cedar Springs Rd, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:44,084] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (30, 260, '4000 Cedar Springs Rd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(30, 260, '4000 Cedar Springs Rd, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:44,084] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 260, '4000 Cedar Springs Rd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(26, 260, '4000 Cedar Springs Rd, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:44,084] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Sonia Harris', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-21', 8, 6) RETURNING "scheduling_booking"."id"; args=('Sonia Harris', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-21', 8, 6); alias=default
[2025-09-30 20:28:44,100] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:44,100] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (30, 261, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(30, 261, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 20:28:44,100] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 261, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(26, 261, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 20:28:44,100] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (29, 261, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(29, 261, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 20:28:44,115] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Michelle Bullock', '8900 Hillcrest Rd, Dallas, TX 75225', '2025-10-22', 5, 4) RETURNING "scheduling_booking"."id"; args=('Michelle Bullock', '8900 Hillcrest Rd, Dallas, TX 75225', '2025-10-22', 5, 4); alias=default
[2025-09-30 20:28:44,115] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:44,115] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 262, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(19, 262, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:44,115] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Lynn Perez', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-22', 6, 4) RETURNING "scheduling_booking"."id"; args=('Lynn Perez', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-22', 6, 4); alias=default
[2025-09-30 20:28:44,131] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:44,131] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 263, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(17, 263, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 20:28:44,131] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 263, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(19, 263, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 20:28:44,131] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Monique Gardner', '8900 Hillcrest Rd, Dallas, TX 75225', '2025-10-22', 8, 4) RETURNING "scheduling_booking"."id"; args=('Monique Gardner', '8900 Hillcrest Rd, Dallas, TX 75225', '2025-10-22', 8, 4); alias=default
[2025-09-30 20:28:44,147] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:44,147] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (20, 264, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(20, 264, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:44,147] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Kelly Clark', '123 Greenville Ave, Dallas, TX 75206', '2025-10-22', 5, 5) RETURNING "scheduling_booking"."id"; args=('Kelly Clark', '123 Greenville Ave, Dallas, TX 75206', '2025-10-22', 5, 5); alias=default
[2025-09-30 20:28:44,147] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:44,147] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (25, 265, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(25, 265, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 20:28:44,166] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (23, 265, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(23, 265, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 20:28:44,170] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Francisco Sanchez', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-22', 6, 5) RETURNING "scheduling_booking"."id"; args=('Francisco Sanchez', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-22', 6, 5); alias=default
[2025-09-30 20:28:44,174] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:44,175] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (21, 266, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(21, 266, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:44,180] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (23, 266, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(23, 266, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:44,185] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (25, 266, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(25, 266, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:44,190] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Tara Baldwin', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-22', 6, 6) RETURNING "scheduling_booking"."id"; args=('Tara Baldwin', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-22', 6, 6); alias=default
[2025-09-30 20:28:44,195] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:44,196] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (29, 267, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(29, 267, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:44,201] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (27, 267, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(27, 267, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:44,205] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 267, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(26, 267, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:44,205] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Cody Stewart', '5600 Ross Ave, Dallas, TX 75206', '2025-10-23', 5, 4) RETURNING "scheduling_booking"."id"; args=('Cody Stewart', '5600 Ross Ave, Dallas, TX 75206', '2025-10-23', 5, 4); alias=default
[2025-09-30 20:28:44,205] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:44,205] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 268, '5600 Ross Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(16, 268, '5600 Ross Ave, Dallas, TX 75206'); alias=default
[2025-09-30 20:28:44,220] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 268, '5600 Ross Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(17, 268, '5600 Ross Ave, Dallas, TX 75206'); alias=default
[2025-09-30 20:28:44,220] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 268, '5600 Ross Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(18, 268, '5600 Ross Ave, Dallas, TX 75206'); alias=default
[2025-09-30 20:28:44,220] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Taylor Peterson', '1234 Lovers Ln, Dallas, TX 75225', '2025-10-23', 5, 5) RETURNING "scheduling_booking"."id"; args=('Taylor Peterson', '1234 Lovers Ln, Dallas, TX 75225', '2025-10-23', 5, 5); alias=default
[2025-09-30 20:28:44,236] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:44,236] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (21, 269, '1234 Lovers Ln, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(21, 269, '1234 Lovers Ln, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:44,236] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (22, 269, '1234 Lovers Ln, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(22, 269, '1234 Lovers Ln, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:44,236] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (23, 269, '1234 Lovers Ln, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(23, 269, '1234 Lovers Ln, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:44,251] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Julia Wilson', '8900 Hillcrest Rd, Dallas, TX 75225', '2025-10-23', 8, 5) RETURNING "scheduling_booking"."id"; args=('Julia Wilson', '8900 Hillcrest Rd, Dallas, TX 75225', '2025-10-23', 8, 5); alias=default
[2025-09-30 20:28:44,251] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:44,251] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (21, 270, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(21, 270, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:44,251] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (25, 270, '8900 Hillcrest Rd, Dallas, TX 75225') RETURNING "scheduling_jobassignment"."id"; args=(25, 270, '8900 Hillcrest Rd, Dallas, TX 75225'); alias=default
[2025-09-30 20:28:44,267] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Virginia Kennedy', '6000 Preston Rd, Dallas, TX 75205', '2025-10-23', 5, 6) RETURNING "scheduling_booking"."id"; args=('Virginia Kennedy', '6000 Preston Rd, Dallas, TX 75205', '2025-10-23', 5, 6); alias=default
[2025-09-30 20:28:44,267] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:44,267] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (28, 271, '6000 Preston Rd, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(28, 271, '6000 Preston Rd, Dallas, TX 75205'); alias=default
[2025-09-30 20:28:44,267] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (27, 271, '6000 Preston Rd, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(27, 271, '6000 Preston Rd, Dallas, TX 75205'); alias=default
[2025-09-30 20:28:44,283] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (30, 271, '6000 Preston Rd, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(30, 271, '6000 Preston Rd, Dallas, TX 75205'); alias=default
[2025-09-30 20:28:44,283] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Juan Dean', '7800 N Stemmons Fwy, Dallas, TX 75247', '2025-10-24', 5, 4) RETURNING "scheduling_booking"."id"; args=('Juan Dean', '7800 N Stemmons Fwy, Dallas, TX 75247', '2025-10-24', 5, 4); alias=default
[2025-09-30 20:28:44,283] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:44,283] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (20, 272, '7800 N Stemmons Fwy, Dallas, TX 75247') RETURNING "scheduling_jobassignment"."id"; args=(20, 272, '7800 N Stemmons Fwy, Dallas, TX 75247'); alias=default
[2025-09-30 20:28:44,298] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 272, '7800 N Stemmons Fwy, Dallas, TX 75247') RETURNING "scheduling_jobassignment"."id"; args=(16, 272, '7800 N Stemmons Fwy, Dallas, TX 75247'); alias=default
[2025-09-30 20:28:44,298] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 272, '7800 N Stemmons Fwy, Dallas, TX 75247') RETURNING "scheduling_jobassignment"."id"; args=(17, 272, '7800 N Stemmons Fwy, Dallas, TX 75247'); alias=default
[2025-09-30 20:28:44,298] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Alejandra Bright', '100 Highland Park Village, Dallas, TX 75205', '2025-10-24', 7, 4) RETURNING "scheduling_booking"."id"; args=('Alejandra Bright', '100 Highland Park Village, Dallas, TX 75205', '2025-10-24', 7, 4); alias=default
[2025-09-30 20:28:44,314] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:44,314] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 273, '100 Highland Park Village, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(16, 273, '100 Highland Park Village, Dallas, TX 75205'); alias=default
[2025-09-30 20:28:44,314] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 273, '100 Highland Park Village, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(18, 273, '100 Highland Park Village, Dallas, TX 75205'); alias=default
[2025-09-30 20:28:44,314] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 273, '100 Highland Park Village, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(17, 273, '100 Highland Park Village, Dallas, TX 75205'); alias=default
[2025-09-30 20:28:44,330] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Chad Jones', '7000 Mockingbird Ln, Dallas, TX 75214', '2025-10-24', 6, 5) RETURNING "scheduling_booking"."id"; args=('Chad Jones', '7000 Mockingbird Ln, Dallas, TX 75214', '2025-10-24', 6, 5); alias=default
[2025-09-30 20:28:44,330] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:44,330] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 274, '7000 Mockingbird Ln, Dallas, TX 75214') RETURNING "scheduling_jobassignment"."id"; args=(24, 274, '7000 Mockingbird Ln, Dallas, TX 75214'); alias=default
[2025-09-30 20:28:44,330] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Sonya Smith', '100 Highland Park Village, Dallas, TX 75205', '2025-10-25', 5, 5) RETURNING "scheduling_booking"."id"; args=('Sonya Smith', '100 Highland Park Village, Dallas, TX 75205', '2025-10-25', 5, 5); alias=default
[2025-09-30 20:28:44,345] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:44,345] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 275, '100 Highland Park Village, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(24, 275, '100 Highland Park Village, Dallas, TX 75205'); alias=default
[2025-09-30 20:28:44,345] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (22, 275, '100 Highland Park Village, Dallas, TX 75205') RETURNING "scheduling_jobassignment"."id"; args=(22, 275, '100 Highland Park Village, Dallas, TX 75205'); alias=default
[2025-09-30 20:28:44,345] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Anna Robinson', '2200 N Pearl St, Dallas, TX 75201', '2025-10-25', 6, 5) RETURNING "scheduling_booking"."id"; args=('Anna Robinson', '2200 N Pearl St, Dallas, TX 75201', '2025-10-25', 6, 5); alias=default
[2025-09-30 20:28:44,361] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:44,361] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (23, 276, '2200 N Pearl St, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(23, 276, '2200 N Pearl St, Dallas, TX 75201'); alias=default
[2025-09-30 20:28:44,361] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 276, '2200 N Pearl St, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(24, 276, '2200 N Pearl St, Dallas, TX 75201'); alias=default
[2025-09-30 20:28:44,376] DEBUG django.db.backends (0.016) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Renee Garrison', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-25', 7, 5) RETURNING "scheduling_booking"."id"; args=('Renee Garrison', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-25', 7, 5); alias=default
[2025-09-30 20:28:44,376] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:44,376] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (22, 277, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(22, 277, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:44,376] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (25, 277, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(25, 277, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:44,392] DEBUG django.db.backends (0.015) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 277, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(24, 277, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:44,392] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Darlene Perez', '2500 Cedar Springs Rd, Dallas, TX 75201', '2025-10-25', 8, 5) RETURNING "scheduling_booking"."id"; args=('Darlene Perez', '2500 Cedar Springs Rd, Dallas, TX 75201', '2025-10-25', 8, 5); alias=default
[2025-09-30 20:28:44,392] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:44,392] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 278, '2500 Cedar Springs Rd, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(24, 278, '2500 Cedar Springs Rd, Dallas, TX 75201'); alias=default
[2025-09-30 20:28:44,410] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (22, 278, '2500 Cedar Springs Rd, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(22, 278, '2500 Cedar Springs Rd, Dallas, TX 75201'); alias=default
[2025-09-30 20:28:44,416] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (21, 278, '2500 Cedar Springs Rd, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(21, 278, '2500 Cedar Springs Rd, Dallas, TX 75201'); alias=default
[2025-09-30 20:28:44,422] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jordan Allen MD', '123 Greenville Ave, Dallas, TX 75206', '2025-10-25', 6, 6) RETURNING "scheduling_booking"."id"; args=('Jordan Allen MD', '123 Greenville Ave, Dallas, TX 75206', '2025-10-25', 6, 6); alias=default
[2025-09-30 20:28:44,427] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:44,428] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (29, 279, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(29, 279, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 20:28:44,429] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (30, 279, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(30, 279, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 20:28:44,429] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Robert Chang', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-26', 5, 4) RETURNING "scheduling_booking"."id"; args=('Robert Chang', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-26', 5, 4); alias=default
[2025-09-30 20:28:44,445] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:44,445] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 280, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(18, 280, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 20:28:44,445] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (20, 280, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(20, 280, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 20:28:44,460] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 280, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(19, 280, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 20:28:44,460] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Donna Garcia', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-26', 6, 4) RETURNING "scheduling_booking"."id"; args=('Donna Garcia', '10200 E Northwest Hwy, Dallas, TX 75238', '2025-10-26', 6, 4); alias=default
[2025-09-30 20:28:44,460] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:44,460] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 281, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(18, 281, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 20:28:44,476] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (20, 281, '10200 E Northwest Hwy, Dallas, TX 75238') RETURNING "scheduling_jobassignment"."id"; args=(20, 281, '10200 E Northwest Hwy, Dallas, TX 75238'); alias=default
[2025-09-30 20:28:44,476] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Kara Mccullough', '2200 N Pearl St, Dallas, TX 75201', '2025-10-26', 7, 4) RETURNING "scheduling_booking"."id"; args=('Kara Mccullough', '2200 N Pearl St, Dallas, TX 75201', '2025-10-26', 7, 4); alias=default
[2025-09-30 20:28:44,491] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:44,491] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 282, '2200 N Pearl St, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(18, 282, '2200 N Pearl St, Dallas, TX 75201'); alias=default
[2025-09-30 20:28:44,491] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 282, '2200 N Pearl St, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(16, 282, '2200 N Pearl St, Dallas, TX 75201'); alias=default
[2025-09-30 20:28:44,491] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 282, '2200 N Pearl St, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(17, 282, '2200 N Pearl St, Dallas, TX 75201'); alias=default
[2025-09-30 20:28:44,510] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jaime Hill MD', '7000 Mockingbird Ln, Dallas, TX 75214', '2025-10-26', 6, 6) RETURNING "scheduling_booking"."id"; args=('Jaime Hill MD', '7000 Mockingbird Ln, Dallas, TX 75214', '2025-10-26', 6, 6); alias=default
[2025-09-30 20:28:44,516] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:44,517] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 283, '7000 Mockingbird Ln, Dallas, TX 75214') RETURNING "scheduling_jobassignment"."id"; args=(26, 283, '7000 Mockingbird Ln, Dallas, TX 75214'); alias=default
[2025-09-30 20:28:44,523] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Lisa Turner', '9999 Forest Ln, Dallas, TX 75243', '2025-10-26', 7, 6) RETURNING "scheduling_booking"."id"; args=('Lisa Turner', '9999 Forest Ln, Dallas, TX 75243', '2025-10-26', 7, 6); alias=default
[2025-09-30 20:28:44,523] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:44,523] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (28, 284, '9999 Forest Ln, Dallas, TX 75243') RETURNING "scheduling_jobassignment"."id"; args=(28, 284, '9999 Forest Ln, Dallas, TX 75243'); alias=default
[2025-09-30 20:28:44,539] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 284, '9999 Forest Ln, Dallas, TX 75243') RETURNING "scheduling_jobassignment"."id"; args=(26, 284, '9999 Forest Ln, Dallas, TX 75243'); alias=default
[2025-09-30 20:28:44,539] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (29, 284, '9999 Forest Ln, Dallas, TX 75243') RETURNING "scheduling_jobassignment"."id"; args=(29, 284, '9999 Forest Ln, Dallas, TX 75243'); alias=default
[2025-09-30 20:28:44,539] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Diane Henderson', '12200 Preston Rd, Dallas, TX 75230', '2025-10-26', 8, 6) RETURNING "scheduling_booking"."id"; args=('Diane Henderson', '12200 Preston Rd, Dallas, TX 75230', '2025-10-26', 8, 6); alias=default
[2025-09-30 20:28:44,555] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:44,555] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (30, 285, '12200 Preston Rd, Dallas, TX 75230') RETURNING "scheduling_jobassignment"."id"; args=(30, 285, '12200 Preston Rd, Dallas, TX 75230'); alias=default
[2025-09-30 20:28:44,555] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (27, 285, '12200 Preston Rd, Dallas, TX 75230') RETURNING "scheduling_jobassignment"."id"; args=(27, 285, '12200 Preston Rd, Dallas, TX 75230'); alias=default
[2025-09-30 20:28:44,570] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (28, 285, '12200 Preston Rd, Dallas, TX 75230') RETURNING "scheduling_jobassignment"."id"; args=(28, 285, '12200 Preston Rd, Dallas, TX 75230'); alias=default
[2025-09-30 20:28:44,570] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jeffrey Newman', '7000 Mockingbird Ln, Dallas, TX 75214', '2025-10-27', 6, 4) RETURNING "scheduling_booking"."id"; args=('Jeffrey Newman', '7000 Mockingbird Ln, Dallas, TX 75214', '2025-10-27', 6, 4); alias=default
[2025-09-30 20:28:44,601] DEBUG django.db.backends (0.016) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 20:28:44,602] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 286, '7000 Mockingbird Ln, Dallas, TX 75214') RETURNING "scheduling_jobassignment"."id"; args=(19, 286, '7000 Mockingbird Ln, Dallas, TX 75214'); alias=default
[2025-09-30 20:28:44,607] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 286, '7000 Mockingbird Ln, Dallas, TX 75214') RETURNING "scheduling_jobassignment"."id"; args=(18, 286, '7000 Mockingbird Ln, Dallas, TX 75214'); alias=default
[2025-09-30 20:28:44,612] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 286, '7000 Mockingbird Ln, Dallas, TX 75214') RETURNING "scheduling_jobassignment"."id"; args=(16, 286, '7000 Mockingbird Ln, Dallas, TX 75214'); alias=default
[2025-09-30 20:28:44,618] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Steven Peters', '4500 Harry Hines Blvd, Dallas, TX 75219', '2025-10-27', 6, 5) RETURNING "scheduling_booking"."id"; args=('Steven Peters', '4500 Harry Hines Blvd, Dallas, TX 75219', '2025-10-27', 6, 5); alias=default
[2025-09-30 20:28:44,624] DEBUG django.db.backends (0.016) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 20:28:44,625] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (22, 287, '4500 Harry Hines Blvd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(22, 287, '4500 Harry Hines Blvd, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:44,630] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 287, '4500 Harry Hines Blvd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(24, 287, '4500 Harry Hines Blvd, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:44,632] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (23, 287, '4500 Harry Hines Blvd, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(23, 287, '4500 Harry Hines Blvd, Dallas, TX 75219'); alias=default
[2025-09-30 20:28:44,632] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Joseph Gallagher', '1400 Pacific Ave, Dallas, TX 75202', '2025-10-27', 6, 6) RETURNING "scheduling_booking"."id"; args=('Joseph Gallagher', '1400 Pacific Ave, Dallas, TX 75202', '2025-10-27', 6, 6); alias=default
[2025-09-30 20:28:44,632] DEBUG django.db.backends (0.000) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 20:28:44,632] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (30, 288, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(30, 288, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 20:28:44,649] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (29, 288, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(29, 288, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 20:28:44,649] DEBUG django.db.backends (0.000) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 288, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(26, 288, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 20:28:54,772] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-30 20:28:54,772] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-30 20:28:54,788] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-30 20:28:54,788] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-30 20:30:09,271] DEBUG django.db.backends (0.000) 
            SELECT name, type FROM sqlite_master
            WHERE type in ('table', 'view') AND NOT name='sqlite_sequence'
            ORDER BY name; args=None; alias=default
[2025-09-30 20:30:09,273] DEBUG django.db.backends (0.000) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-30 21:39:32,819] DEBUG django.db.backends (0.125) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
[2025-09-30 21:39:32,945] DEBUG django.db.backends (0.109) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
[2025-09-30 21:40:06,519] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 21:40:06,741] DEBUG django.db.backends (0.219) DELETE FROM "scheduling_jobassignment"; args=(); alias=default
[2025-09-30 21:40:06,856] DEBUG django.db.backends (0.110) ROLLBACK; args=None; alias=default
[2025-09-30 21:42:39,049] DEBUG django.db.backends (0.125) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
[2025-09-30 21:42:39,162] DEBUG django.db.backends (0.109) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
[2025-09-30 21:42:39,275] DEBUG django.db.backends (0.109) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
[2025-09-30 21:42:39,275] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 21:42:39,275] DEBUG django.db.backends.schema CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); (params None)
[2025-09-30 21:42:39,580] DEBUG django.db.backends (0.313) CREATE TABLE "django_migrations" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "app" varchar(255) NOT NULL, "name" varchar(255) NOT NULL, "applied" timestamp with time zone NOT NULL); args=None; alias=default
[2025-09-30 21:42:39,695] DEBUG django.db.backends (0.109) COMMIT; args=None; alias=default
[2025-09-30 21:42:39,696] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 21:42:39,697] DEBUG django.db.backends.schema CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); (params None)
[2025-09-30 21:42:39,923] DEBUG django.db.backends (0.235) CREATE TABLE "django_content_type" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "app_label" varchar(100) NOT NULL, "model" varchar(100) NOT NULL); args=None; alias=default
[2025-09-30 21:42:39,926] DEBUG django.db.backends.schema ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); (params None)
[2025-09-30 21:42:40,040] DEBUG django.db.backends (0.109) ALTER TABLE "django_content_type" ADD CONSTRAINT "django_content_type_app_label_model_76bd3d3b_uniq" UNIQUE ("app_label", "model"); args=None; alias=default
[2025-09-30 21:42:40,161] DEBUG django.db.backends (0.125) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
[2025-09-30 21:42:40,277] DEBUG django.db.backends (0.109) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0001_initial', '2025-09-30 19:42:40.162827+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0001_initial', datetime.datetime(2025, 9, 30, 19, 42, 40, 162827, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 21:42:40,373] DEBUG django.db.backends (0.094) COMMIT; args=None; alias=default
[2025-09-30 21:42:40,388] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 21:42:40,388] DEBUG django.db.backends.schema CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); (params None)
[2025-09-30 21:42:40,610] DEBUG django.db.backends (0.234) CREATE TABLE "auth_permission" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(50) NOT NULL, "content_type_id" integer NOT NULL, "codename" varchar(100) NOT NULL); args=None; alias=default
[2025-09-30 21:42:40,610] DEBUG django.db.backends.schema CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); (params None)
[2025-09-30 21:42:40,725] DEBUG django.db.backends (0.110) CREATE TABLE "auth_group" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(80) NOT NULL UNIQUE); args=None; alias=default
[2025-09-30 21:42:40,725] DEBUG django.db.backends.schema CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
[2025-09-30 21:42:40,841] DEBUG django.db.backends (0.109) CREATE TABLE "auth_group_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "group_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
[2025-09-30 21:42:40,857] DEBUG django.db.backends.schema CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); (params None)
[2025-09-30 21:42:40,970] DEBUG django.db.backends (0.125) CREATE TABLE "auth_user" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "password" varchar(128) NOT NULL, "last_login" timestamp with time zone NOT NULL, "is_superuser" boolean NOT NULL, "username" varchar(30) NOT NULL UNIQUE, "first_name" varchar(30) NOT NULL, "last_name" varchar(30) NOT NULL, "email" varchar(75) NOT NULL, "is_staff" boolean NOT NULL, "is_active" boolean NOT NULL, "date_joined" timestamp with time zone NOT NULL); args=None; alias=default
[2025-09-30 21:42:40,971] DEBUG django.db.backends.schema CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); (params None)
[2025-09-30 21:42:41,086] DEBUG django.db.backends (0.109) CREATE TABLE "auth_user_groups" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "group_id" integer NOT NULL); args=None; alias=default
[2025-09-30 21:42:41,087] DEBUG django.db.backends.schema CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); (params None)
[2025-09-30 21:42:41,203] DEBUG django.db.backends (0.125) CREATE TABLE "auth_user_user_permissions" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "user_id" integer NOT NULL, "permission_id" integer NOT NULL); args=None; alias=default
[2025-09-30 21:42:41,204] DEBUG django.db.backends.schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); (params None)
[2025-09-30 21:42:41,304] DEBUG django.db.backends (0.094) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_codename_01ab375a_uniq" UNIQUE ("content_type_id", "codename"); args=None; alias=default
[2025-09-30 21:42:41,304] DEBUG django.db.backends.schema ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
[2025-09-30 21:42:41,493] DEBUG django.db.backends (0.187) ALTER TABLE "auth_permission" ADD CONSTRAINT "auth_permission_content_type_id_2f476e4b_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
[2025-09-30 21:42:41,493] DEBUG django.db.backends.schema CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); (params None)
[2025-09-30 21:42:41,607] DEBUG django.db.backends (0.110) CREATE INDEX "auth_permission_content_type_id_2f476e4b" ON "auth_permission" ("content_type_id"); args=None; alias=default
[2025-09-30 21:42:41,607] DEBUG django.db.backends.schema CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); (params None)
[2025-09-30 21:42:41,716] DEBUG django.db.backends (0.109) CREATE INDEX "auth_group_name_a6ea08ec_like" ON "auth_group" ("name" varchar_pattern_ops); args=None; alias=default
[2025-09-30 21:42:41,716] DEBUG django.db.backends.schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); (params None)
[2025-09-30 21:42:41,847] DEBUG django.db.backends (0.141) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_permission_id_0cd325b0_uniq" UNIQUE ("group_id", "permission_id"); args=None; alias=default
[2025-09-30 21:42:41,847] DEBUG django.db.backends.schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
[2025-09-30 21:42:41,963] DEBUG django.db.backends (0.109) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissions_group_id_b120cbf9_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
[2025-09-30 21:42:41,963] DEBUG django.db.backends.schema ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
[2025-09-30 21:42:42,075] DEBUG django.db.backends (0.109) ALTER TABLE "auth_group_permissions" ADD CONSTRAINT "auth_group_permissio_permission_id_84c5c92e_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
[2025-09-30 21:42:42,075] DEBUG django.db.backends.schema CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); (params None)
[2025-09-30 21:42:42,178] DEBUG django.db.backends (0.110) CREATE INDEX "auth_group_permissions_group_id_b120cbf9" ON "auth_group_permissions" ("group_id"); args=None; alias=default
[2025-09-30 21:42:42,178] DEBUG django.db.backends.schema CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); (params None)
[2025-09-30 21:42:42,299] DEBUG django.db.backends (0.125) CREATE INDEX "auth_group_permissions_permission_id_84c5c92e" ON "auth_group_permissions" ("permission_id"); args=None; alias=default
[2025-09-30 21:42:42,299] DEBUG django.db.backends.schema CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); (params None)
[2025-09-30 21:42:42,411] DEBUG django.db.backends (0.109) CREATE INDEX "auth_user_username_6821ab7c_like" ON "auth_user" ("username" varchar_pattern_ops); args=None; alias=default
[2025-09-30 21:42:42,411] DEBUG django.db.backends.schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); (params None)
[2025-09-30 21:42:42,522] DEBUG django.db.backends (0.109) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_group_id_94350c0c_uniq" UNIQUE ("user_id", "group_id"); args=None; alias=default
[2025-09-30 21:42:42,522] DEBUG django.db.backends.schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
[2025-09-30 21:42:42,627] DEBUG django.db.backends (0.110) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_user_id_6a12ed8b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
[2025-09-30 21:42:42,627] DEBUG django.db.backends.schema ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
[2025-09-30 21:42:42,741] DEBUG django.db.backends (0.109) ALTER TABLE "auth_user_groups" ADD CONSTRAINT "auth_user_groups_group_id_97559544_fk_auth_group_id" FOREIGN KEY ("group_id") REFERENCES "auth_group" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
[2025-09-30 21:42:42,741] DEBUG django.db.backends.schema CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); (params None)
[2025-09-30 21:42:42,851] DEBUG django.db.backends (0.110) CREATE INDEX "auth_user_groups_user_id_6a12ed8b" ON "auth_user_groups" ("user_id"); args=None; alias=default
[2025-09-30 21:42:42,851] DEBUG django.db.backends.schema CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); (params None)
[2025-09-30 21:42:42,972] DEBUG django.db.backends (0.125) CREATE INDEX "auth_user_groups_group_id_97559544" ON "auth_user_groups" ("group_id"); args=None; alias=default
[2025-09-30 21:42:42,972] DEBUG django.db.backends.schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); (params None)
[2025-09-30 21:42:43,085] DEBUG django.db.backends (0.093) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_permission_id_14a6b632_uniq" UNIQUE ("user_id", "permission_id"); args=None; alias=default
[2025-09-30 21:42:43,085] DEBUG django.db.backends.schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
[2025-09-30 21:42:43,189] DEBUG django.db.backends (0.109) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
[2025-09-30 21:42:43,189] DEBUG django.db.backends.schema ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
[2025-09-30 21:42:43,299] DEBUG django.db.backends (0.110) ALTER TABLE "auth_user_user_permissions" ADD CONSTRAINT "auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm" FOREIGN KEY ("permission_id") REFERENCES "auth_permission" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
[2025-09-30 21:42:43,299] DEBUG django.db.backends.schema CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); (params None)
[2025-09-30 21:42:43,413] DEBUG django.db.backends (0.109) CREATE INDEX "auth_user_user_permissions_user_id_a95ead1b" ON "auth_user_user_permissions" ("user_id"); args=None; alias=default
[2025-09-30 21:42:43,413] DEBUG django.db.backends.schema CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); (params None)
[2025-09-30 21:42:43,522] DEBUG django.db.backends (0.109) CREATE INDEX "auth_user_user_permissions_permission_id_1fbb5f2c" ON "auth_user_user_permissions" ("permission_id"); args=None; alias=default
[2025-09-30 21:42:43,647] DEBUG django.db.backends (0.125) COMMIT; args=None; alias=default
[2025-09-30 21:42:43,757] DEBUG django.db.backends (0.110) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
[2025-09-30 21:42:43,866] DEBUG django.db.backends (0.109) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0001_initial', '2025-09-30 19:42:43.757116+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0001_initial', datetime.datetime(2025, 9, 30, 19, 42, 43, 757116, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 21:42:43,866] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 21:42:43,866] DEBUG django.db.backends.schema CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); (params None)
[2025-09-30 21:42:44,109] DEBUG django.db.backends (0.250) CREATE TABLE "django_admin_log" ("id" integer NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "action_time" timestamp with time zone NOT NULL, "object_id" text NULL, "object_repr" varchar(200) NOT NULL, "action_flag" smallint NOT NULL CHECK ("action_flag" >= 0), "change_message" text NOT NULL, "content_type_id" integer NULL, "user_id" integer NOT NULL); args=None; alias=default
[2025-09-30 21:42:44,109] DEBUG django.db.backends.schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
[2025-09-30 21:42:44,209] DEBUG django.db.backends (0.094) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_content_type_id_c4bce8eb_fk_django_co" FOREIGN KEY ("content_type_id") REFERENCES "django_content_type" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
[2025-09-30 21:42:44,209] DEBUG django.db.backends.schema ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
[2025-09-30 21:42:44,334] DEBUG django.db.backends (0.125) ALTER TABLE "django_admin_log" ADD CONSTRAINT "django_admin_log_user_id_c564eba6_fk_auth_user_id" FOREIGN KEY ("user_id") REFERENCES "auth_user" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
[2025-09-30 21:42:44,334] DEBUG django.db.backends.schema CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); (params None)
[2025-09-30 21:42:44,443] DEBUG django.db.backends (0.109) CREATE INDEX "django_admin_log_content_type_id_c4bce8eb" ON "django_admin_log" ("content_type_id"); args=None; alias=default
[2025-09-30 21:42:44,443] DEBUG django.db.backends.schema CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); (params None)
[2025-09-30 21:42:44,554] DEBUG django.db.backends (0.110) CREATE INDEX "django_admin_log_user_id_c564eba6" ON "django_admin_log" ("user_id"); args=None; alias=default
[2025-09-30 21:42:44,681] DEBUG django.db.backends (0.125) COMMIT; args=None; alias=default
[2025-09-30 21:42:44,792] DEBUG django.db.backends (0.109) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
[2025-09-30 21:42:44,907] DEBUG django.db.backends (0.125) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0001_initial', '2025-09-30 19:42:44.792460+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0001_initial', datetime.datetime(2025, 9, 30, 19, 42, 44, 792460, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 21:42:44,908] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 21:42:45,132] DEBUG django.db.backends (0.219) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
[2025-09-30 21:42:45,247] DEBUG django.db.backends (0.109) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0002_logentry_remove_auto_add', '2025-09-30 19:42:45.132128+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0002_logentry_remove_auto_add', datetime.datetime(2025, 9, 30, 19, 42, 45, 132128, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 21:42:45,360] DEBUG django.db.backends (0.125) COMMIT; args=None; alias=default
[2025-09-30 21:42:45,360] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 21:42:45,592] DEBUG django.db.backends (0.219) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
[2025-09-30 21:42:45,695] DEBUG django.db.backends (0.109) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('admin', '0003_logentry_add_action_flag_choices', '2025-09-30 19:42:45.592817+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('admin', '0003_logentry_add_action_flag_choices', datetime.datetime(2025, 9, 30, 19, 42, 45, 592817, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 21:42:45,804] DEBUG django.db.backends (0.110) COMMIT; args=None; alias=default
[2025-09-30 21:42:45,819] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 21:42:45,819] DEBUG django.db.backends.schema ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; (params None)
[2025-09-30 21:42:46,038] DEBUG django.db.backends (0.219) ALTER TABLE "django_content_type" ALTER COLUMN "name" DROP NOT NULL; args=None; alias=default
[2025-09-30 21:42:46,054] DEBUG django.db.backends.schema ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; (params None)
[2025-09-30 21:42:46,163] DEBUG django.db.backends (0.109) ALTER TABLE "django_content_type" DROP COLUMN "name" CASCADE; args=None; alias=default
[2025-09-30 21:42:46,289] DEBUG django.db.backends (0.125) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
[2025-09-30 21:42:46,388] DEBUG django.db.backends (0.094) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('contenttypes', '0002_remove_content_type_name', '2025-09-30 19:42:46.289200+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('contenttypes', '0002_remove_content_type_name', datetime.datetime(2025, 9, 30, 19, 42, 46, 289200, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 21:42:46,501] DEBUG django.db.backends (0.125) COMMIT; args=None; alias=default
[2025-09-30 21:42:46,501] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 21:42:46,517] DEBUG django.db.backends.schema ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); (params None)
[2025-09-30 21:42:46,739] DEBUG django.db.backends (0.219) ALTER TABLE "auth_permission" ALTER COLUMN "name" TYPE varchar(255); args=None; alias=default
[2025-09-30 21:42:46,843] DEBUG django.db.backends (0.110) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
[2025-09-30 21:42:46,960] DEBUG django.db.backends (0.109) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0002_alter_permission_name_max_length', '2025-09-30 19:42:46.843406+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0002_alter_permission_name_max_length', datetime.datetime(2025, 9, 30, 19, 42, 46, 843406, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 21:42:47,069] DEBUG django.db.backends (0.109) COMMIT; args=None; alias=default
[2025-09-30 21:42:47,069] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 21:42:47,069] DEBUG django.db.backends.schema ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); (params None)
[2025-09-30 21:42:47,288] DEBUG django.db.backends (0.219) ALTER TABLE "auth_user" ALTER COLUMN "email" TYPE varchar(254); args=None; alias=default
[2025-09-30 21:42:47,407] DEBUG django.db.backends (0.125) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
[2025-09-30 21:42:47,518] DEBUG django.db.backends (0.109) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0003_alter_user_email_max_length', '2025-09-30 19:42:47.407964+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0003_alter_user_email_max_length', datetime.datetime(2025, 9, 30, 19, 42, 47, 407964, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 21:42:47,616] DEBUG django.db.backends (0.094) COMMIT; args=None; alias=default
[2025-09-30 21:42:47,632] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 21:42:47,858] DEBUG django.db.backends (0.234) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
[2025-09-30 21:42:47,960] DEBUG django.db.backends (0.094) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0004_alter_user_username_opts', '2025-09-30 19:42:47.858853+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0004_alter_user_username_opts', datetime.datetime(2025, 9, 30, 19, 42, 47, 858853, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 21:42:48,069] DEBUG django.db.backends (0.109) COMMIT; args=None; alias=default
[2025-09-30 21:42:48,069] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 21:42:48,085] DEBUG django.db.backends.schema ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; (params None)
[2025-09-30 21:42:48,308] DEBUG django.db.backends (0.219) ALTER TABLE "auth_user" ALTER COLUMN "last_login" DROP NOT NULL; args=None; alias=default
[2025-09-30 21:42:48,426] DEBUG django.db.backends (0.125) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
[2025-09-30 21:42:48,540] DEBUG django.db.backends (0.109) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0005_alter_user_last_login_null', '2025-09-30 19:42:48.426947+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0005_alter_user_last_login_null', datetime.datetime(2025, 9, 30, 19, 42, 48, 426947, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 21:42:48,647] DEBUG django.db.backends (0.109) COMMIT; args=None; alias=default
[2025-09-30 21:42:48,647] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 21:42:48,876] DEBUG django.db.backends (0.235) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
[2025-09-30 21:42:48,991] DEBUG django.db.backends (0.109) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0006_require_contenttypes_0002', '2025-09-30 19:42:48.876462+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0006_require_contenttypes_0002', datetime.datetime(2025, 9, 30, 19, 42, 48, 876462, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 21:42:49,101] DEBUG django.db.backends (0.110) COMMIT; args=None; alias=default
[2025-09-30 21:42:49,101] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 21:42:49,325] DEBUG django.db.backends (0.218) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
[2025-09-30 21:42:49,445] DEBUG django.db.backends (0.125) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0007_alter_validators_add_error_messages', '2025-09-30 19:42:49.325409+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0007_alter_validators_add_error_messages', datetime.datetime(2025, 9, 30, 19, 42, 49, 325409, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 21:42:49,558] DEBUG django.db.backends (0.110) COMMIT; args=None; alias=default
[2025-09-30 21:42:49,558] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 21:42:49,563] DEBUG django.db.backends.schema ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); (params None)
[2025-09-30 21:42:49,793] DEBUG django.db.backends (0.219) ALTER TABLE "auth_user" ALTER COLUMN "username" TYPE varchar(150); args=None; alias=default
[2025-09-30 21:42:49,904] DEBUG django.db.backends (0.109) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
[2025-09-30 21:42:50,009] DEBUG django.db.backends (0.110) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0008_alter_user_username_max_length', '2025-09-30 19:42:49.904365+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0008_alter_user_username_max_length', datetime.datetime(2025, 9, 30, 19, 42, 49, 904365, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 21:42:50,132] DEBUG django.db.backends (0.125) COMMIT; args=None; alias=default
[2025-09-30 21:42:50,132] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 21:42:50,132] DEBUG django.db.backends.schema ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); (params None)
[2025-09-30 21:42:50,365] DEBUG django.db.backends (0.234) ALTER TABLE "auth_user" ALTER COLUMN "last_name" TYPE varchar(150); args=None; alias=default
[2025-09-30 21:42:50,476] DEBUG django.db.backends (0.110) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
[2025-09-30 21:42:50,585] DEBUG django.db.backends (0.109) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0009_alter_user_last_name_max_length', '2025-09-30 19:42:50.476371+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0009_alter_user_last_name_max_length', datetime.datetime(2025, 9, 30, 19, 42, 50, 476371, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 21:42:50,700] DEBUG django.db.backends (0.109) COMMIT; args=None; alias=default
[2025-09-30 21:42:50,700] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 21:42:50,704] DEBUG django.db.backends.schema ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); (params None)
[2025-09-30 21:42:50,925] DEBUG django.db.backends (0.219) ALTER TABLE "auth_group" ALTER COLUMN "name" TYPE varchar(150); args=None; alias=default
[2025-09-30 21:42:51,034] DEBUG django.db.backends (0.109) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
[2025-09-30 21:42:51,147] DEBUG django.db.backends (0.093) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0010_alter_group_name_max_length', '2025-09-30 19:42:51.050046+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0010_alter_group_name_max_length', datetime.datetime(2025, 9, 30, 19, 42, 51, 50046, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 21:42:51,258] DEBUG django.db.backends (0.110) COMMIT; args=None; alias=default
[2025-09-30 21:42:51,258] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 21:42:51,501] DEBUG django.db.backends (0.235) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
[2025-09-30 21:42:51,609] DEBUG django.db.backends (0.109) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0011_update_proxy_permissions', '2025-09-30 19:42:51.501405+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0011_update_proxy_permissions', datetime.datetime(2025, 9, 30, 19, 42, 51, 501405, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 21:42:51,721] DEBUG django.db.backends (0.110) COMMIT; args=None; alias=default
[2025-09-30 21:42:51,721] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 21:42:51,721] DEBUG django.db.backends.schema ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); (params None)
[2025-09-30 21:42:51,944] DEBUG django.db.backends (0.203) ALTER TABLE "auth_user" ALTER COLUMN "first_name" TYPE varchar(150); args=None; alias=default
[2025-09-30 21:42:52,070] DEBUG django.db.backends (0.125) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
[2025-09-30 21:42:52,174] DEBUG django.db.backends (0.110) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('auth', '0012_alter_user_first_name_max_length', '2025-09-30 19:42:52.070540+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('auth', '0012_alter_user_first_name_max_length', datetime.datetime(2025, 9, 30, 19, 42, 52, 70540, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 21:42:52,293] DEBUG django.db.backends (0.109) COMMIT; args=None; alias=default
[2025-09-30 21:42:52,293] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 21:42:52,294] DEBUG django.db.backends.schema CREATE TABLE "customers_registeredcustomer" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "unique_customer_id" varchar(36) NOT NULL UNIQUE, "first_name" varchar(60) NOT NULL, "last_name" varchar(60) NOT NULL, "street_address" varchar(120) NOT NULL, "city" varchar(60) NOT NULL, "state" varchar(30) NOT NULL, "zipcode" varchar(15) NOT NULL, "phone" varchar(25) NOT NULL, "email" varchar(254) NOT NULL UNIQUE, "created_at" timestamp with time zone NOT NULL); (params None)
[2025-09-30 21:42:52,519] DEBUG django.db.backends (0.234) CREATE TABLE "customers_registeredcustomer" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "unique_customer_id" varchar(36) NOT NULL UNIQUE, "first_name" varchar(60) NOT NULL, "last_name" varchar(60) NOT NULL, "street_address" varchar(120) NOT NULL, "city" varchar(60) NOT NULL, "state" varchar(30) NOT NULL, "zipcode" varchar(15) NOT NULL, "phone" varchar(25) NOT NULL, "email" varchar(254) NOT NULL UNIQUE, "created_at" timestamp with time zone NOT NULL); args=None; alias=default
[2025-09-30 21:42:52,519] DEBUG django.db.backends.schema CREATE INDEX "customers_registeredcustomer_unique_customer_id_008fe259_like" ON "customers_registeredcustomer" ("unique_customer_id" varchar_pattern_ops); (params None)
[2025-09-30 21:42:52,641] DEBUG django.db.backends (0.125) CREATE INDEX "customers_registeredcustomer_unique_customer_id_008fe259_like" ON "customers_registeredcustomer" ("unique_customer_id" varchar_pattern_ops); args=None; alias=default
[2025-09-30 21:42:52,641] DEBUG django.db.backends.schema CREATE INDEX "customers_registeredcustomer_email_b73645c5_like" ON "customers_registeredcustomer" ("email" varchar_pattern_ops); (params None)
[2025-09-30 21:42:52,753] DEBUG django.db.backends (0.110) CREATE INDEX "customers_registeredcustomer_email_b73645c5_like" ON "customers_registeredcustomer" ("email" varchar_pattern_ops); args=None; alias=default
[2025-09-30 21:42:52,866] DEBUG django.db.backends (0.109) COMMIT; args=None; alias=default
[2025-09-30 21:42:52,975] DEBUG django.db.backends (0.110) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
[2025-09-30 21:42:53,085] DEBUG django.db.backends (0.109) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('customers', '0001_initial', '2025-09-30 19:42:52.975780+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('customers', '0001_initial', datetime.datetime(2025, 9, 30, 19, 42, 52, 975780, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 21:42:53,085] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 21:42:53,101] DEBUG django.db.backends.schema CREATE TABLE "scheduling_booking" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "customer_name" varchar(255) NOT NULL, "customer_address" varchar(255) NOT NULL, "date" date NOT NULL); (params None)
[2025-09-30 21:42:53,319] DEBUG django.db.backends (0.218) CREATE TABLE "scheduling_booking" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "customer_name" varchar(255) NOT NULL, "customer_address" varchar(255) NOT NULL, "date" date NOT NULL); args=None; alias=default
[2025-09-30 21:42:53,319] DEBUG django.db.backends.schema CREATE TABLE "scheduling_employee" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "home_address" varchar(255) NOT NULL); (params None)
[2025-09-30 21:42:53,444] DEBUG django.db.backends (0.125) CREATE TABLE "scheduling_employee" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL, "home_address" varchar(255) NOT NULL); args=None; alias=default
[2025-09-30 21:42:53,444] DEBUG django.db.backends.schema CREATE TABLE "scheduling_servicecategory" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL UNIQUE); (params None)
[2025-09-30 21:42:53,585] DEBUG django.db.backends (0.141) CREATE TABLE "scheduling_servicecategory" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "name" varchar(100) NOT NULL UNIQUE); args=None; alias=default
[2025-09-30 21:42:53,585] DEBUG django.db.backends.schema CREATE TABLE "scheduling_timeslot" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "label" varchar(20) NOT NULL UNIQUE); (params None)
[2025-09-30 21:42:53,690] DEBUG django.db.backends (0.109) CREATE TABLE "scheduling_timeslot" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "label" varchar(20) NOT NULL UNIQUE); args=None; alias=default
[2025-09-30 21:42:53,690] DEBUG django.db.backends.schema CREATE TABLE "scheduling_jobassignment" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "jobsite_address" varchar(255) NOT NULL, "booking_id" bigint NOT NULL, "employee_id" bigint NOT NULL); (params None)
[2025-09-30 21:42:53,804] DEBUG django.db.backends (0.110) CREATE TABLE "scheduling_jobassignment" ("id" bigint NOT NULL PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY, "jobsite_address" varchar(255) NOT NULL, "booking_id" bigint NOT NULL, "employee_id" bigint NOT NULL); args=None; alias=default
[2025-09-30 21:42:53,819] DEBUG django.db.backends.schema ALTER TABLE "scheduling_employee" ADD COLUMN "service_category_id" bigint NOT NULL CONSTRAINT "scheduling_employee_service_category_id_5a713c42_fk_schedulin" REFERENCES "scheduling_servicecategory"("id") DEFERRABLE INITIALLY DEFERRED; SET CONSTRAINTS "scheduling_employee_service_category_id_5a713c42_fk_schedulin" IMMEDIATE; (params None)
[2025-09-30 21:42:53,931] DEBUG django.db.backends (0.110) ALTER TABLE "scheduling_employee" ADD COLUMN "service_category_id" bigint NOT NULL CONSTRAINT "scheduling_employee_service_category_id_5a713c42_fk_schedulin" REFERENCES "scheduling_servicecategory"("id") DEFERRABLE INITIALLY DEFERRED; SET CONSTRAINTS "scheduling_employee_service_category_id_5a713c42_fk_schedulin" IMMEDIATE; args=None; alias=default
[2025-09-30 21:42:53,934] DEBUG django.db.backends.schema ALTER TABLE "scheduling_booking" ADD COLUMN "service_category_id" bigint NOT NULL CONSTRAINT "scheduling_booking_service_category_id_6691953b_fk_schedulin" REFERENCES "scheduling_servicecategory"("id") DEFERRABLE INITIALLY DEFERRED; SET CONSTRAINTS "scheduling_booking_service_category_id_6691953b_fk_schedulin" IMMEDIATE; (params None)
[2025-09-30 21:42:54,039] DEBUG django.db.backends (0.109) ALTER TABLE "scheduling_booking" ADD COLUMN "service_category_id" bigint NOT NULL CONSTRAINT "scheduling_booking_service_category_id_6691953b_fk_schedulin" REFERENCES "scheduling_servicecategory"("id") DEFERRABLE INITIALLY DEFERRED; SET CONSTRAINTS "scheduling_booking_service_category_id_6691953b_fk_schedulin" IMMEDIATE; args=None; alias=default
[2025-09-30 21:42:54,039] DEBUG django.db.backends.schema ALTER TABLE "scheduling_booking" ADD COLUMN "time_slot_id" bigint NOT NULL CONSTRAINT "scheduling_booking_time_slot_id_d16801ef_fk_schedulin" REFERENCES "scheduling_timeslot"("id") DEFERRABLE INITIALLY DEFERRED; SET CONSTRAINTS "scheduling_booking_time_slot_id_d16801ef_fk_schedulin" IMMEDIATE; (params None)
[2025-09-30 21:42:54,166] DEBUG django.db.backends (0.125) ALTER TABLE "scheduling_booking" ADD COLUMN "time_slot_id" bigint NOT NULL CONSTRAINT "scheduling_booking_time_slot_id_d16801ef_fk_schedulin" REFERENCES "scheduling_timeslot"("id") DEFERRABLE INITIALLY DEFERRED; SET CONSTRAINTS "scheduling_booking_time_slot_id_d16801ef_fk_schedulin" IMMEDIATE; args=None; alias=default
[2025-09-30 21:42:54,166] DEBUG django.db.backends.schema CREATE INDEX "scheduling_servicecategory_name_87b5b45d_like" ON "scheduling_servicecategory" ("name" varchar_pattern_ops); (params None)
[2025-09-30 21:42:54,279] DEBUG django.db.backends (0.109) CREATE INDEX "scheduling_servicecategory_name_87b5b45d_like" ON "scheduling_servicecategory" ("name" varchar_pattern_ops); args=None; alias=default
[2025-09-30 21:42:54,279] DEBUG django.db.backends.schema CREATE INDEX "scheduling_timeslot_label_a29a9bd5_like" ON "scheduling_timeslot" ("label" varchar_pattern_ops); (params None)
[2025-09-30 21:42:54,396] DEBUG django.db.backends (0.125) CREATE INDEX "scheduling_timeslot_label_a29a9bd5_like" ON "scheduling_timeslot" ("label" varchar_pattern_ops); args=None; alias=default
[2025-09-30 21:42:54,396] DEBUG django.db.backends.schema ALTER TABLE "scheduling_jobassignment" ADD CONSTRAINT "scheduling_jobassign_booking_id_728c9ae6_fk_schedulin" FOREIGN KEY ("booking_id") REFERENCES "scheduling_booking" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
[2025-09-30 21:42:54,507] DEBUG django.db.backends (0.110) ALTER TABLE "scheduling_jobassignment" ADD CONSTRAINT "scheduling_jobassign_booking_id_728c9ae6_fk_schedulin" FOREIGN KEY ("booking_id") REFERENCES "scheduling_booking" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
[2025-09-30 21:42:54,507] DEBUG django.db.backends.schema ALTER TABLE "scheduling_jobassignment" ADD CONSTRAINT "scheduling_jobassign_employee_id_3167ac53_fk_schedulin" FOREIGN KEY ("employee_id") REFERENCES "scheduling_employee" ("id") DEFERRABLE INITIALLY DEFERRED; (params None)
[2025-09-30 21:42:54,626] DEBUG django.db.backends (0.125) ALTER TABLE "scheduling_jobassignment" ADD CONSTRAINT "scheduling_jobassign_employee_id_3167ac53_fk_schedulin" FOREIGN KEY ("employee_id") REFERENCES "scheduling_employee" ("id") DEFERRABLE INITIALLY DEFERRED; args=None; alias=default
[2025-09-30 21:42:54,626] DEBUG django.db.backends.schema CREATE INDEX "scheduling_jobassignment_booking_id_728c9ae6" ON "scheduling_jobassignment" ("booking_id"); (params None)
[2025-09-30 21:42:54,726] DEBUG django.db.backends (0.094) CREATE INDEX "scheduling_jobassignment_booking_id_728c9ae6" ON "scheduling_jobassignment" ("booking_id"); args=None; alias=default
[2025-09-30 21:42:54,726] DEBUG django.db.backends.schema CREATE INDEX "scheduling_jobassignment_employee_id_3167ac53" ON "scheduling_jobassignment" ("employee_id"); (params None)
[2025-09-30 21:42:54,850] DEBUG django.db.backends (0.109) CREATE INDEX "scheduling_jobassignment_employee_id_3167ac53" ON "scheduling_jobassignment" ("employee_id"); args=None; alias=default
[2025-09-30 21:42:54,850] DEBUG django.db.backends.schema CREATE INDEX "scheduling_employee_service_category_id_5a713c42" ON "scheduling_employee" ("service_category_id"); (params None)
[2025-09-30 21:42:54,959] DEBUG django.db.backends (0.109) CREATE INDEX "scheduling_employee_service_category_id_5a713c42" ON "scheduling_employee" ("service_category_id"); args=None; alias=default
[2025-09-30 21:42:54,959] DEBUG django.db.backends.schema CREATE INDEX "scheduling_booking_service_category_id_6691953b" ON "scheduling_booking" ("service_category_id"); (params None)
[2025-09-30 21:42:55,069] DEBUG django.db.backends (0.109) CREATE INDEX "scheduling_booking_service_category_id_6691953b" ON "scheduling_booking" ("service_category_id"); args=None; alias=default
[2025-09-30 21:42:55,069] DEBUG django.db.backends.schema CREATE INDEX "scheduling_booking_time_slot_id_d16801ef" ON "scheduling_booking" ("time_slot_id"); (params None)
[2025-09-30 21:42:55,179] DEBUG django.db.backends (0.110) CREATE INDEX "scheduling_booking_time_slot_id_d16801ef" ON "scheduling_booking" ("time_slot_id"); args=None; alias=default
[2025-09-30 21:42:55,305] DEBUG django.db.backends (0.125) COMMIT; args=None; alias=default
[2025-09-30 21:42:55,413] DEBUG django.db.backends (0.109) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
[2025-09-30 21:42:55,523] DEBUG django.db.backends (0.109) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('scheduling', '0001_initial', '2025-09-30 19:42:55.413104+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('scheduling', '0001_initial', datetime.datetime(2025, 9, 30, 19, 42, 55, 413104, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 21:42:55,523] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 21:42:55,523] DEBUG django.db.backends.schema ALTER TABLE "scheduling_employee" ALTER COLUMN "name" TYPE varchar(255); (params None)
[2025-09-30 21:42:55,757] DEBUG django.db.backends (0.235) ALTER TABLE "scheduling_employee" ALTER COLUMN "name" TYPE varchar(255); args=None; alias=default
[2025-09-30 21:42:55,857] DEBUG django.db.backends (0.094) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
[2025-09-30 21:42:55,982] DEBUG django.db.backends (0.110) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('scheduling', '0002_alter_employee_name', '2025-09-30 19:42:55.857907+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('scheduling', '0002_alter_employee_name', datetime.datetime(2025, 9, 30, 19, 42, 55, 857907, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 21:42:56,084] DEBUG django.db.backends (0.109) COMMIT; args=None; alias=default
[2025-09-30 21:42:56,084] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 21:42:56,084] DEBUG django.db.backends.schema CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); (params None)
[2025-09-30 21:42:56,305] DEBUG django.db.backends (0.219) CREATE TABLE "django_session" ("session_key" varchar(40) NOT NULL PRIMARY KEY, "session_data" text NOT NULL, "expire_date" timestamp with time zone NOT NULL); args=None; alias=default
[2025-09-30 21:42:56,305] DEBUG django.db.backends.schema CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); (params None)
[2025-09-30 21:42:56,423] DEBUG django.db.backends (0.125) CREATE INDEX "django_session_session_key_c0390e0f_like" ON "django_session" ("session_key" varchar_pattern_ops); args=None; alias=default
[2025-09-30 21:42:56,423] DEBUG django.db.backends.schema CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); (params None)
[2025-09-30 21:42:56,532] DEBUG django.db.backends (0.109) CREATE INDEX "django_session_expire_date_a5c62663" ON "django_session" ("expire_date"); args=None; alias=default
[2025-09-30 21:42:56,662] DEBUG django.db.backends (0.125) COMMIT; args=None; alias=default
[2025-09-30 21:42:56,776] DEBUG django.db.backends (0.109) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
[2025-09-30 21:42:56,889] DEBUG django.db.backends (0.110) INSERT INTO "django_migrations" ("app", "name", "applied") VALUES ('sessions', '0001_initial', '2025-09-30 19:42:56.776131+00:00'::timestamptz) RETURNING "django_migrations"."id"; args=('sessions', '0001_initial', datetime.datetime(2025, 9, 30, 19, 42, 56, 776131, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 21:42:57,000] DEBUG django.db.backends (0.125) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
[2025-09-30 21:42:57,109] DEBUG django.db.backends (0.109) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-30 21:42:57,235] DEBUG django.db.backends (0.125) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
[2025-09-30 21:42:57,235] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 21:42:57,458] DEBUG django.db.backends (0.219) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('admin', 'logentry') RETURNING "django_content_type"."id"; args=('admin', 'logentry'); alias=default
[2025-09-30 21:42:57,565] DEBUG django.db.backends (0.109) COMMIT; args=None; alias=default
[2025-09-30 21:42:57,681] DEBUG django.db.backends (0.110) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'admin' AND "django_content_type"."model" = 'logentry') LIMIT 21; args=('admin', 'logentry'); alias=default
[2025-09-30 21:42:57,796] DEBUG django.db.backends (0.125) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (1) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(1,); alias=default
[2025-09-30 21:42:57,796] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 21:42:58,021] DEBUG django.db.backends (0.218) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add log entry', 1, 'add_logentry'), ('Can change log entry', 1, 'change_logentry'), ('Can delete log entry', 1, 'delete_logentry'), ('Can view log entry', 1, 'view_logentry') RETURNING "auth_permission"."id"; args=('Can add log entry', 1, 'add_logentry', 'Can change log entry', 1, 'change_logentry', 'Can delete log entry', 1, 'delete_logentry', 'Can view log entry', 1, 'view_logentry'); alias=default
[2025-09-30 21:42:58,131] DEBUG django.db.backends (0.110) COMMIT; args=None; alias=default
[2025-09-30 21:42:58,243] DEBUG django.db.backends (0.109) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'admin'; args=('admin',); alias=default
[2025-09-30 21:42:58,356] DEBUG django.db.backends (0.110) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
[2025-09-30 21:42:58,356] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 21:42:58,575] DEBUG django.db.backends (0.218) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('auth', 'permission'), ('auth', 'group'), ('auth', 'user') RETURNING "django_content_type"."id"; args=('auth', 'permission', 'auth', 'group', 'auth', 'user'); alias=default
[2025-09-30 21:42:58,691] DEBUG django.db.backends (0.125) COMMIT; args=None; alias=default
[2025-09-30 21:42:58,805] DEBUG django.db.backends (0.110) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'permission') LIMIT 21; args=('auth', 'permission'); alias=default
[2025-09-30 21:42:58,918] DEBUG django.db.backends (0.109) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'group') LIMIT 21; args=('auth', 'group'); alias=default
[2025-09-30 21:42:59,031] DEBUG django.db.backends (0.125) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'auth' AND "django_content_type"."model" = 'user') LIMIT 21; args=('auth', 'user'); alias=default
[2025-09-30 21:42:59,144] DEBUG django.db.backends (0.109) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (2, 3, 4) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(2, 3, 4); alias=default
[2025-09-30 21:42:59,144] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 21:42:59,366] DEBUG django.db.backends (0.219) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add permission', 2, 'add_permission'), ('Can change permission', 2, 'change_permission'), ('Can delete permission', 2, 'delete_permission'), ('Can view permission', 2, 'view_permission'), ('Can add group', 3, 'add_group'), ('Can change group', 3, 'change_group'), ('Can delete group', 3, 'delete_group'), ('Can view group', 3, 'view_group'), ('Can add user', 4, 'add_user'), ('Can change user', 4, 'change_user'), ('Can delete user', 4, 'delete_user'), ('Can view user', 4, 'view_user') RETURNING "auth_permission"."id"; args=('Can add permission', 2, 'add_permission', 'Can change permission', 2, 'change_permission', 'Can delete permission', 2, 'delete_permission', 'Can view permission', 2, 'view_permission', 'Can add group', 3, 'add_group', 'Can change group', 3, 'change_group', 'Can delete group', 3, 'delete_group', 'Can view group', 3, 'view_group', 'Can add user', 4, 'add_user', 'Can change user', 4, 'change_user', 'Can delete user', 4, 'delete_user', 'Can view user', 4, 'view_user'); alias=default
[2025-09-30 21:42:59,476] DEBUG django.db.backends (0.110) COMMIT; args=None; alias=default
[2025-09-30 21:42:59,585] DEBUG django.db.backends (0.109) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'auth'; args=('auth',); alias=default
[2025-09-30 21:42:59,701] DEBUG django.db.backends (0.109) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
[2025-09-30 21:42:59,701] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 21:42:59,924] DEBUG django.db.backends (0.235) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('contenttypes', 'contenttype') RETURNING "django_content_type"."id"; args=('contenttypes', 'contenttype'); alias=default
[2025-09-30 21:43:00,040] DEBUG django.db.backends (0.109) COMMIT; args=None; alias=default
[2025-09-30 21:43:00,138] DEBUG django.db.backends (0.094) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'contenttypes' AND "django_content_type"."model" = 'contenttype') LIMIT 21; args=('contenttypes', 'contenttype'); alias=default
[2025-09-30 21:43:00,256] DEBUG django.db.backends (0.125) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (5) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(5,); alias=default
[2025-09-30 21:43:00,256] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 21:43:00,491] DEBUG django.db.backends (0.234) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add content type', 5, 'add_contenttype'), ('Can change content type', 5, 'change_contenttype'), ('Can delete content type', 5, 'delete_contenttype'), ('Can view content type', 5, 'view_contenttype') RETURNING "auth_permission"."id"; args=('Can add content type', 5, 'add_contenttype', 'Can change content type', 5, 'change_contenttype', 'Can delete content type', 5, 'delete_contenttype', 'Can view content type', 5, 'view_contenttype'); alias=default
[2025-09-30 21:43:00,601] DEBUG django.db.backends (0.110) COMMIT; args=None; alias=default
[2025-09-30 21:43:00,719] DEBUG django.db.backends (0.125) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'contenttypes'; args=('contenttypes',); alias=default
[2025-09-30 21:43:00,819] DEBUG django.db.backends (0.093) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
[2025-09-30 21:43:00,819] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 21:43:01,054] DEBUG django.db.backends (0.235) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('sessions', 'session') RETURNING "django_content_type"."id"; args=('sessions', 'session'); alias=default
[2025-09-30 21:43:01,158] DEBUG django.db.backends (0.109) COMMIT; args=None; alias=default
[2025-09-30 21:43:01,272] DEBUG django.db.backends (0.109) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'sessions' AND "django_content_type"."model" = 'session') LIMIT 21; args=('sessions', 'session'); alias=default
[2025-09-30 21:43:01,381] DEBUG django.db.backends (0.110) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (6) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(6,); alias=default
[2025-09-30 21:43:01,381] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 21:43:01,600] DEBUG django.db.backends (0.219) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add session', 6, 'add_session'), ('Can change session', 6, 'change_session'), ('Can delete session', 6, 'delete_session'), ('Can view session', 6, 'view_session') RETURNING "auth_permission"."id"; args=('Can add session', 6, 'add_session', 'Can change session', 6, 'change_session', 'Can delete session', 6, 'delete_session', 'Can view session', 6, 'view_session'); alias=default
[2025-09-30 21:43:01,722] DEBUG django.db.backends (0.125) COMMIT; args=None; alias=default
[2025-09-30 21:43:01,835] DEBUG django.db.backends (0.109) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'sessions'; args=('sessions',); alias=default
[2025-09-30 21:43:01,948] DEBUG django.db.backends (0.109) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'customers'; args=('customers',); alias=default
[2025-09-30 21:43:01,948] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 21:43:02,163] DEBUG django.db.backends (0.219) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('customers', 'registeredcustomer') RETURNING "django_content_type"."id"; args=('customers', 'registeredcustomer'); alias=default
[2025-09-30 21:43:02,283] DEBUG django.db.backends (0.125) COMMIT; args=None; alias=default
[2025-09-30 21:43:02,382] DEBUG django.db.backends (0.094) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'customers' AND "django_content_type"."model" = 'registeredcustomer') LIMIT 21; args=('customers', 'registeredcustomer'); alias=default
[2025-09-30 21:43:02,507] DEBUG django.db.backends (0.110) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (7) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(7,); alias=default
[2025-09-30 21:43:02,507] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 21:43:02,734] DEBUG django.db.backends (0.234) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add registered customer', 7, 'add_registeredcustomer'), ('Can change registered customer', 7, 'change_registeredcustomer'), ('Can delete registered customer', 7, 'delete_registeredcustomer'), ('Can view registered customer', 7, 'view_registeredcustomer') RETURNING "auth_permission"."id"; args=('Can add registered customer', 7, 'add_registeredcustomer', 'Can change registered customer', 7, 'change_registeredcustomer', 'Can delete registered customer', 7, 'delete_registeredcustomer', 'Can view registered customer', 7, 'view_registeredcustomer'); alias=default
[2025-09-30 21:43:02,847] DEBUG django.db.backends (0.110) COMMIT; args=None; alias=default
[2025-09-30 21:43:02,959] DEBUG django.db.backends (0.109) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'customers'; args=('customers',); alias=default
[2025-09-30 21:43:03,069] DEBUG django.db.backends (0.109) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'scheduling'; args=('scheduling',); alias=default
[2025-09-30 21:43:03,069] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 21:43:03,288] DEBUG django.db.backends (0.219) INSERT INTO "django_content_type" ("app_label", "model") VALUES ('scheduling', 'booking'), ('scheduling', 'employee'), ('scheduling', 'servicecategory'), ('scheduling', 'timeslot'), ('scheduling', 'jobassignment') RETURNING "django_content_type"."id"; args=('scheduling', 'booking', 'scheduling', 'employee', 'scheduling', 'servicecategory', 'scheduling', 'timeslot', 'scheduling', 'jobassignment'); alias=default
[2025-09-30 21:43:03,397] DEBUG django.db.backends (0.109) COMMIT; args=None; alias=default
[2025-09-30 21:43:03,522] DEBUG django.db.backends (0.125) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'booking') LIMIT 21; args=('scheduling', 'booking'); alias=default
[2025-09-30 21:43:03,632] DEBUG django.db.backends (0.110) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'employee') LIMIT 21; args=('scheduling', 'employee'); alias=default
[2025-09-30 21:43:03,745] DEBUG django.db.backends (0.109) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'servicecategory') LIMIT 21; args=('scheduling', 'servicecategory'); alias=default
[2025-09-30 21:43:03,850] DEBUG django.db.backends (0.110) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'timeslot') LIMIT 21; args=('scheduling', 'timeslot'); alias=default
[2025-09-30 21:43:03,959] DEBUG django.db.backends (0.109) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE ("django_content_type"."app_label" = 'scheduling' AND "django_content_type"."model" = 'jobassignment') LIMIT 21; args=('scheduling', 'jobassignment'); alias=default
[2025-09-30 21:43:04,069] DEBUG django.db.backends (0.109) SELECT "auth_permission"."content_type_id", "auth_permission"."codename" FROM "auth_permission" INNER JOIN "django_content_type" ON ("auth_permission"."content_type_id" = "django_content_type"."id") WHERE "auth_permission"."content_type_id" IN (8, 9, 10, 11, 12) ORDER BY "django_content_type"."app_label" ASC, "django_content_type"."model" ASC, "auth_permission"."codename" ASC; args=(8, 9, 10, 11, 12); alias=default
[2025-09-30 21:43:04,069] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 21:43:04,304] DEBUG django.db.backends (0.219) INSERT INTO "auth_permission" ("name", "content_type_id", "codename") VALUES ('Can add booking', 8, 'add_booking'), ('Can change booking', 8, 'change_booking'), ('Can delete booking', 8, 'delete_booking'), ('Can view booking', 8, 'view_booking'), ('Can add employee', 9, 'add_employee'), ('Can change employee', 9, 'change_employee'), ('Can delete employee', 9, 'delete_employee'), ('Can view employee', 9, 'view_employee'), ('Can add service category', 10, 'add_servicecategory'), ('Can change service category', 10, 'change_servicecategory'), ('Can delete service category', 10, 'delete_servicecategory'), ('Can view service category', 10, 'view_servicecategory'), ('Can add time slot', 11, 'add_timeslot'), ('Can change time slot', 11, 'change_timeslot'), ('Can delete time slot', 11, 'delete_timeslot'), ('Can view time slot', 11, 'view_timeslot'), ('Can add job assignment', 12, 'add_jobassignment'), ('Can change job assignment', 12, 'change_jobassignment'), ('Can delete job assignment', 12, 'delete_jobassignment'), ('Can view job assignment', 12, 'view_jobassignment') RETURNING "auth_permission"."id"; args=('Can add booking', 8, 'add_booking', 'Can change booking', 8, 'change_booking', 'Can delete booking', 8, 'delete_booking', 'Can view booking', 8, 'view_booking', 'Can add employee', 9, 'add_employee', 'Can change employee', 9, 'change_employee', 'Can delete employee', 9, 'delete_employee', 'Can view employee', 9, 'view_employee', 'Can add service category', 10, 'add_servicecategory', 'Can change service category', 10, 'change_servicecategory', 'Can delete service category', 10, 'delete_servicecategory', 'Can view service category', 10, 'view_servicecategory', 'Can add time slot', 11, 'add_timeslot', 'Can change time slot', 11, 'change_timeslot', 'Can delete time slot', 11, 'delete_timeslot', 'Can view time slot', 11, 'view_timeslot', 'Can add job assignment', 12, 'add_jobassignment', 'Can change job assignment', 12, 'change_jobassignment', 'Can delete job assignment', 12, 'delete_jobassignment', 'Can view job assignment', 12, 'view_jobassignment'); alias=default
[2025-09-30 21:43:04,414] DEBUG django.db.backends (0.109) COMMIT; args=None; alias=default
[2025-09-30 21:43:04,523] DEBUG django.db.backends (0.109) SELECT "django_content_type"."id", "django_content_type"."app_label", "django_content_type"."model" FROM "django_content_type" WHERE "django_content_type"."app_label" = 'scheduling'; args=('scheduling',); alias=default
[2025-09-30 21:43:18,741] DEBUG django.db.backends (0.109) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
[2025-09-30 21:43:18,851] DEBUG django.db.backends (0.110) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-30 21:43:18,972] DEBUG django.db.backends (0.125) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
[2025-09-30 21:43:19,069] DEBUG django.db.backends (0.093) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-30 22:16:16,846] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 22:16:17,086] DEBUG django.db.backends (0.234) DELETE FROM "scheduling_jobassignment"; args=(); alias=default
[2025-09-30 22:16:17,194] DEBUG django.db.backends (0.109) COMMIT; args=None; alias=default
[2025-09-30 22:16:17,319] DEBUG django.db.backends (0.125) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking"; args=(); alias=default
[2025-09-30 22:16:17,319] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 22:16:17,319] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-30 22:16:17,438] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee"; args=(); alias=default
[2025-09-30 22:16:17,438] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 22:16:17,438] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-30 22:16:17,554] DEBUG django.db.backends (0.110) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot"; args=(); alias=default
[2025-09-30 22:16:17,554] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 22:16:17,554] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-30 22:16:17,673] DEBUG django.db.backends (0.125) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory"; args=(); alias=default
[2025-09-30 22:16:17,673] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 22:16:17,673] DEBUG django.db.backends (0.000) COMMIT; args=None; alias=default
[2025-09-30 22:16:17,788] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_servicecategory" ("name") VALUES ('Garage/Basement') RETURNING "scheduling_servicecategory"."id"; args=('Garage/Basement',); alias=default
[2025-09-30 22:16:17,896] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_servicecategory" ("name") VALUES ('Lawncare') RETURNING "scheduling_servicecategory"."id"; args=('Lawncare',); alias=default
[2025-09-30 22:16:18,019] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_servicecategory" ("name") VALUES ('House Cleaning') RETURNING "scheduling_servicecategory"."id"; args=('House Cleaning',); alias=default
[2025-09-30 22:16:18,130] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_timeslot" ("label") VALUES ('7:30-9:30') RETURNING "scheduling_timeslot"."id"; args=('7:30-9:30',); alias=default
[2025-09-30 22:16:18,246] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_timeslot" ("label") VALUES ('10:00-12:00') RETURNING "scheduling_timeslot"."id"; args=('10:00-12:00',); alias=default
[2025-09-30 22:16:18,361] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_timeslot" ("label") VALUES ('12:30-2:30') RETURNING "scheduling_timeslot"."id"; args=('12:30-2:30',); alias=default
[2025-09-30 22:16:18,465] DEBUG django.db.backends (0.094) INSERT INTO "scheduling_timeslot" ("label") VALUES ('3:00-5:00') RETURNING "scheduling_timeslot"."id"; args=('3:00-5:00',); alias=default
[2025-09-30 22:16:18,602] DEBUG django.db.backends (0.141) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Brandy Hernandez', '3200 W Irving Blvd, Irving, TX 75061', 1) RETURNING "scheduling_employee"."id"; args=('Brandy Hernandez', '3200 W Irving Blvd, Irving, TX 75061', 1); alias=default
[2025-09-30 22:16:18,719] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Lauren Campbell', '500 W Hickory St, Denton, TX 76201', 1) RETURNING "scheduling_employee"."id"; args=('Lauren Campbell', '500 W Hickory St, Denton, TX 76201', 1); alias=default
[2025-09-30 22:16:18,833] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Mary Webster', '1200 E Spring Valley Rd, Richardson, TX 75081', 1) RETURNING "scheduling_employee"."id"; args=('Mary Webster', '1200 E Spring Valley Rd, Richardson, TX 75081', 1); alias=default
[2025-09-30 22:16:18,946] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Connie Rogers', '123 Greenville Ave, Dallas, TX 75206', 1) RETURNING "scheduling_employee"."id"; args=('Connie Rogers', '123 Greenville Ave, Dallas, TX 75206', 1); alias=default
[2025-09-30 22:16:19,059] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Samantha Howard', '2601 Preston Rd, Frisco, TX 75034', 1) RETURNING "scheduling_employee"."id"; args=('Samantha Howard', '2601 Preston Rd, Frisco, TX 75034', 1); alias=default
[2025-09-30 22:16:19,173] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Kayla Murray', '2201 E Road to Six Flags St, Arlington, TX 76011', 2) RETURNING "scheduling_employee"."id"; args=('Kayla Murray', '2201 E Road to Six Flags St, Arlington, TX 76011', 2); alias=default
[2025-09-30 22:16:19,286] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Austin Vasquez', '5806 Birchbrook Dr, Plano, TX 75093', 2) RETURNING "scheduling_employee"."id"; args=('Austin Vasquez', '5806 Birchbrook Dr, Plano, TX 75093', 2); alias=default
[2025-09-30 22:16:19,397] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Lisa Martinez', '4200 Broadway Blvd, Garland, TX 75043', 2) RETURNING "scheduling_employee"."id"; args=('Lisa Martinez', '4200 Broadway Blvd, Garland, TX 75043', 2); alias=default
[2025-09-30 22:16:19,508] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Johnathan Hamilton', '2000 W University Dr, Denton, TX 76201', 2) RETURNING "scheduling_employee"."id"; args=('Johnathan Hamilton', '2000 W University Dr, Denton, TX 76201', 2); alias=default
[2025-09-30 22:16:19,616] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Christopher Garcia', '2601 Preston Rd, Frisco, TX 75034', 2) RETURNING "scheduling_employee"."id"; args=('Christopher Garcia', '2601 Preston Rd, Frisco, TX 75034', 2); alias=default
[2025-09-30 22:16:19,730] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Kristen Sharp', '5151 N President George Bush Hwy, Garland, TX 75040', 3) RETURNING "scheduling_employee"."id"; args=('Kristen Sharp', '5151 N President George Bush Hwy, Garland, TX 75040', 3); alias=default
[2025-09-30 22:16:19,850] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Jane Rivera', '1100 Long Prairie Rd, Flower Mound, TX 75028', 3) RETURNING "scheduling_employee"."id"; args=('Jane Rivera', '1100 Long Prairie Rd, Flower Mound, TX 75028', 3); alias=default
[2025-09-30 22:16:19,960] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Jacob Thomas', '400 W Campbell Rd, Richardson, TX 75080', 3) RETURNING "scheduling_employee"."id"; args=('Jacob Thomas', '400 W Campbell Rd, Richardson, TX 75080', 3); alias=default
[2025-09-30 22:16:20,070] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Brandon Lewis', '2000 W University Dr, Denton, TX 76201', 3) RETURNING "scheduling_employee"."id"; args=('Brandon Lewis', '2000 W University Dr, Denton, TX 76201', 3); alias=default
[2025-09-30 22:16:20,195] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Fernando Daniels', '2201 E Road to Six Flags St, Arlington, TX 76011', 3) RETURNING "scheduling_employee"."id"; args=('Fernando Daniels', '2201 E Road to Six Flags St, Arlington, TX 76011', 3); alias=default
[2025-09-30 22:16:20,304] DEBUG django.db.backends (0.110) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC; args=(); alias=default
[2025-09-30 22:16:20,430] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Carol Walton', '4200 Broadway Blvd, Garland, TX 75043', '2025-09-30'::date, 2, 2) RETURNING "scheduling_booking"."id"; args=('Carol Walton', '4200 Broadway Blvd, Garland, TX 75043', datetime.date(2025, 9, 30), 2, 2); alias=default
[2025-09-30 22:16:20,547] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:16:20,663] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 1, '4200 Broadway Blvd, Garland, TX 75043') RETURNING "scheduling_jobassignment"."id"; args=(9, 1, '4200 Broadway Blvd, Garland, TX 75043'); alias=default
[2025-09-30 22:16:20,780] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 1, '4200 Broadway Blvd, Garland, TX 75043') RETURNING "scheduling_jobassignment"."id"; args=(7, 1, '4200 Broadway Blvd, Garland, TX 75043'); alias=default
[2025-09-30 22:16:20,896] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (10, 1, '4200 Broadway Blvd, Garland, TX 75043') RETURNING "scheduling_jobassignment"."id"; args=(10, 1, '4200 Broadway Blvd, Garland, TX 75043'); alias=default
[2025-09-30 22:16:21,011] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jared Burgess', '1900 E Belt Line Rd, Carrollton, TX 75006', '2025-09-30'::date, 3, 3) RETURNING "scheduling_booking"."id"; args=('Jared Burgess', '1900 E Belt Line Rd, Carrollton, TX 75006', datetime.date(2025, 9, 30), 3, 3); alias=default
[2025-09-30 22:16:21,124] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:16:21,225] DEBUG django.db.backends (0.094) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 2, '1900 E Belt Line Rd, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(13, 2, '1900 E Belt Line Rd, Carrollton, TX 75006'); alias=default
[2025-09-30 22:16:21,382] DEBUG django.db.backends (0.156) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 2, '1900 E Belt Line Rd, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(15, 2, '1900 E Belt Line Rd, Carrollton, TX 75006'); alias=default
[2025-09-30 22:16:21,491] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Patricia Bowers MD', '1100 Long Prairie Rd, Flower Mound, TX 75028', '2025-09-30'::date, 4, 3) RETURNING "scheduling_booking"."id"; args=('Patricia Bowers MD', '1100 Long Prairie Rd, Flower Mound, TX 75028', datetime.date(2025, 9, 30), 4, 3); alias=default
[2025-09-30 22:16:21,612] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:16:21,710] DEBUG django.db.backends (0.094) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 3, '1100 Long Prairie Rd, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(13, 3, '1100 Long Prairie Rd, Flower Mound, TX 75028'); alias=default
[2025-09-30 22:16:21,835] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 3, '1100 Long Prairie Rd, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(14, 3, '1100 Long Prairie Rd, Flower Mound, TX 75028'); alias=default
[2025-09-30 22:16:21,944] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 3, '1100 Long Prairie Rd, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(12, 3, '1100 Long Prairie Rd, Flower Mound, TX 75028'); alias=default
[2025-09-30 22:16:22,053] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Shawn Thomas', '5600 Ross Ave, Dallas, TX 75206', '2025-10-01'::date, 3, 1) RETURNING "scheduling_booking"."id"; args=('Shawn Thomas', '5600 Ross Ave, Dallas, TX 75206', datetime.date(2025, 10, 1), 3, 1); alias=default
[2025-09-30 22:16:22,163] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:16:22,272] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 4, '5600 Ross Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(1, 4, '5600 Ross Ave, Dallas, TX 75206'); alias=default
[2025-09-30 22:16:22,397] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (4, 4, '5600 Ross Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(4, 4, '5600 Ross Ave, Dallas, TX 75206'); alias=default
[2025-09-30 22:16:22,507] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (3, 4, '5600 Ross Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(3, 4, '5600 Ross Ave, Dallas, TX 75206'); alias=default
[2025-09-30 22:16:22,616] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('John Baker', '2201 E Road to Six Flags St, Arlington, TX 76011', '2025-10-01'::date, 4, 2) RETURNING "scheduling_booking"."id"; args=('John Baker', '2201 E Road to Six Flags St, Arlington, TX 76011', datetime.date(2025, 10, 1), 4, 2); alias=default
[2025-09-30 22:16:22,726] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:16:22,850] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 5, '2201 E Road to Six Flags St, Arlington, TX 76011') RETURNING "scheduling_jobassignment"."id"; args=(7, 5, '2201 E Road to Six Flags St, Arlington, TX 76011'); alias=default
[2025-09-30 22:16:23,289] DEBUG django.db.backends (0.437) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (10, 5, '2201 E Road to Six Flags St, Arlington, TX 76011') RETURNING "scheduling_jobassignment"."id"; args=(10, 5, '2201 E Road to Six Flags St, Arlington, TX 76011'); alias=default
[2025-09-30 22:16:23,424] DEBUG django.db.backends (0.141) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Matthew Peters', '1400 Pacific Ave, Dallas, TX 75202', '2025-10-01'::date, 1, 3) RETURNING "scheduling_booking"."id"; args=('Matthew Peters', '1400 Pacific Ave, Dallas, TX 75202', datetime.date(2025, 10, 1), 1, 3); alias=default
[2025-09-30 22:16:23,537] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:16:23,647] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 6, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(11, 6, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 22:16:23,756] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 6, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(15, 6, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 22:16:23,866] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 6, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(13, 6, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 22:16:23,977] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Shannon Anderson', '2201 E Road to Six Flags St, Arlington, TX 76011', '2025-10-02'::date, 1, 1) RETURNING "scheduling_booking"."id"; args=('Shannon Anderson', '2201 E Road to Six Flags St, Arlington, TX 76011', datetime.date(2025, 10, 2), 1, 1); alias=default
[2025-09-30 22:16:24,085] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:16:24,210] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 7, '2201 E Road to Six Flags St, Arlington, TX 76011') RETURNING "scheduling_jobassignment"."id"; args=(1, 7, '2201 E Road to Six Flags St, Arlington, TX 76011'); alias=default
[2025-09-30 22:16:24,325] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 7, '2201 E Road to Six Flags St, Arlington, TX 76011') RETURNING "scheduling_jobassignment"."id"; args=(2, 7, '2201 E Road to Six Flags St, Arlington, TX 76011'); alias=default
[2025-09-30 22:16:24,437] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Mr. Daniel Baldwin', '3000 N Belt Line Rd, Irving, TX 75062', '2025-10-02'::date, 2, 1) RETURNING "scheduling_booking"."id"; args=('Mr. Daniel Baldwin', '3000 N Belt Line Rd, Irving, TX 75062', datetime.date(2025, 10, 2), 2, 1); alias=default
[2025-09-30 22:16:24,537] DEBUG django.db.backends (0.094) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:16:24,663] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 8, '3000 N Belt Line Rd, Irving, TX 75062') RETURNING "scheduling_jobassignment"."id"; args=(2, 8, '3000 N Belt Line Rd, Irving, TX 75062'); alias=default
[2025-09-30 22:16:24,789] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (4, 8, '3000 N Belt Line Rd, Irving, TX 75062') RETURNING "scheduling_jobassignment"."id"; args=(4, 8, '3000 N Belt Line Rd, Irving, TX 75062'); alias=default
[2025-09-30 22:16:24,904] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Kaitlyn Wilson', '2200 Cross Timbers Rd, Flower Mound, TX 75028', '2025-10-02'::date, 3, 1) RETURNING "scheduling_booking"."id"; args=('Kaitlyn Wilson', '2200 Cross Timbers Rd, Flower Mound, TX 75028', datetime.date(2025, 10, 2), 3, 1); alias=default
[2025-09-30 22:16:25,015] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:16:25,130] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 9, '2200 Cross Timbers Rd, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(5, 9, '2200 Cross Timbers Rd, Flower Mound, TX 75028'); alias=default
[2025-09-30 22:16:25,242] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 9, '2200 Cross Timbers Rd, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(1, 9, '2200 Cross Timbers Rd, Flower Mound, TX 75028'); alias=default
[2025-09-30 22:16:25,355] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (4, 9, '2200 Cross Timbers Rd, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(4, 9, '2200 Cross Timbers Rd, Flower Mound, TX 75028'); alias=default
[2025-09-30 22:16:25,470] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('John Davis', '2400 Old Denton Rd, Carrollton, TX 75006', '2025-10-02'::date, 1, 3) RETURNING "scheduling_booking"."id"; args=('John Davis', '2400 Old Denton Rd, Carrollton, TX 75006', datetime.date(2025, 10, 2), 1, 3); alias=default
[2025-09-30 22:16:25,581] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:16:25,693] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 10, '2400 Old Denton Rd, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(15, 10, '2400 Old Denton Rd, Carrollton, TX 75006'); alias=default
[2025-09-30 22:16:25,807] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 10, '2400 Old Denton Rd, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(11, 10, '2400 Old Denton Rd, Carrollton, TX 75006'); alias=default
[2025-09-30 22:16:25,920] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 10, '2400 Old Denton Rd, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(14, 10, '2400 Old Denton Rd, Carrollton, TX 75006'); alias=default
[2025-09-30 22:16:26,034] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Scott Hayes', '1000 Ballpark Way, Arlington, TX 76011', '2025-10-02'::date, 2, 3) RETURNING "scheduling_booking"."id"; args=('Scott Hayes', '1000 Ballpark Way, Arlington, TX 76011', datetime.date(2025, 10, 2), 2, 3); alias=default
[2025-09-30 22:16:26,147] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:16:26,259] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 11, '1000 Ballpark Way, Arlington, TX 76011') RETURNING "scheduling_jobassignment"."id"; args=(13, 11, '1000 Ballpark Way, Arlington, TX 76011'); alias=default
[2025-09-30 22:16:26,373] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 11, '1000 Ballpark Way, Arlington, TX 76011') RETURNING "scheduling_jobassignment"."id"; args=(15, 11, '1000 Ballpark Way, Arlington, TX 76011'); alias=default
[2025-09-30 22:16:26,486] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 11, '1000 Ballpark Way, Arlington, TX 76011') RETURNING "scheduling_jobassignment"."id"; args=(14, 11, '1000 Ballpark Way, Arlington, TX 76011'); alias=default
[2025-09-30 22:16:26,625] DEBUG django.db.backends (0.141) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Mario Bray', '3000 N Belt Line Rd, Irving, TX 75062', '2025-10-02'::date, 3, 3) RETURNING "scheduling_booking"."id"; args=('Mario Bray', '3000 N Belt Line Rd, Irving, TX 75062', datetime.date(2025, 10, 2), 3, 3); alias=default
[2025-09-30 22:16:26,752] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:16:26,870] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 12, '3000 N Belt Line Rd, Irving, TX 75062') RETURNING "scheduling_jobassignment"."id"; args=(13, 12, '3000 N Belt Line Rd, Irving, TX 75062'); alias=default
[2025-09-30 22:16:26,982] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Parker Atkinson', '300 W Abram St, Arlington, TX 76010', '2025-10-03'::date, 2, 1) RETURNING "scheduling_booking"."id"; args=('Parker Atkinson', '300 W Abram St, Arlington, TX 76010', datetime.date(2025, 10, 3), 2, 1); alias=default
[2025-09-30 22:16:27,093] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:16:27,206] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (3, 13, '300 W Abram St, Arlington, TX 76010') RETURNING "scheduling_jobassignment"."id"; args=(3, 13, '300 W Abram St, Arlington, TX 76010'); alias=default
[2025-09-30 22:16:27,317] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Scott Rivers', '1400 Pacific Ave, Dallas, TX 75202', '2025-10-03'::date, 3, 1) RETURNING "scheduling_booking"."id"; args=('Scott Rivers', '1400 Pacific Ave, Dallas, TX 75202', datetime.date(2025, 10, 3), 3, 1); alias=default
[2025-09-30 22:16:27,432] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:16:27,541] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 14, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(5, 14, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 22:16:27,654] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 14, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(2, 14, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 22:16:27,767] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (4, 14, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(4, 14, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 22:16:27,881] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Cheryl Barnes', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-03'::date, 4, 1) RETURNING "scheduling_booking"."id"; args=('Cheryl Barnes', '3900 Gaston Ave, Dallas, TX 75246', datetime.date(2025, 10, 3), 4, 1); alias=default
[2025-09-30 22:16:27,994] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:16:28,107] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (3, 15, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(3, 15, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 22:16:28,219] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 15, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(5, 15, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 22:16:28,333] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Michelle Clark', '1500 Spring Creek Pkwy, Plano, TX 75074', '2025-10-03'::date, 1, 2) RETURNING "scheduling_booking"."id"; args=('Michelle Clark', '1500 Spring Creek Pkwy, Plano, TX 75074', datetime.date(2025, 10, 3), 1, 2); alias=default
[2025-09-30 22:16:28,445] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:16:28,555] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 16, '1500 Spring Creek Pkwy, Plano, TX 75074') RETURNING "scheduling_jobassignment"."id"; args=(7, 16, '1500 Spring Creek Pkwy, Plano, TX 75074'); alias=default
[2025-09-30 22:16:28,668] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Daniel Hicks', '2000 W University Dr, Denton, TX 76201', '2025-10-03'::date, 2, 2) RETURNING "scheduling_booking"."id"; args=('Daniel Hicks', '2000 W University Dr, Denton, TX 76201', datetime.date(2025, 10, 3), 2, 2); alias=default
[2025-09-30 22:16:28,780] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:16:28,896] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 17, '2000 W University Dr, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(7, 17, '2000 W University Dr, Denton, TX 76201'); alias=default
[2025-09-30 22:16:29,042] DEBUG django.db.backends (0.141) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Brianna Bowman', '500 W Hickory St, Denton, TX 76201', '2025-10-03'::date, 4, 2) RETURNING "scheduling_booking"."id"; args=('Brianna Bowman', '500 W Hickory St, Denton, TX 76201', datetime.date(2025, 10, 3), 4, 2); alias=default
[2025-09-30 22:16:29,157] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:16:29,263] DEBUG django.db.backends (0.094) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 18, '500 W Hickory St, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(8, 18, '500 W Hickory St, Denton, TX 76201'); alias=default
[2025-09-30 22:16:29,379] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 18, '500 W Hickory St, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(9, 18, '500 W Hickory St, Denton, TX 76201'); alias=default
[2025-09-30 22:16:29,491] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (10, 18, '500 W Hickory St, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(10, 18, '500 W Hickory St, Denton, TX 76201'); alias=default
[2025-09-30 22:16:29,601] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Benjamin Bell', '300 W Abram St, Arlington, TX 76010', '2025-10-03'::date, 1, 3) RETURNING "scheduling_booking"."id"; args=('Benjamin Bell', '300 W Abram St, Arlington, TX 76010', datetime.date(2025, 10, 3), 1, 3); alias=default
[2025-09-30 22:16:29,715] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:16:29,828] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 19, '300 W Abram St, Arlington, TX 76010') RETURNING "scheduling_jobassignment"."id"; args=(13, 19, '300 W Abram St, Arlington, TX 76010'); alias=default
[2025-09-30 22:16:29,941] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 19, '300 W Abram St, Arlington, TX 76010') RETURNING "scheduling_jobassignment"."id"; args=(12, 19, '300 W Abram St, Arlington, TX 76010'); alias=default
[2025-09-30 22:16:30,055] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Olivia Clark', '2300 N Central Expy, Richardson, TX 75080', '2025-10-04'::date, 1, 1) RETURNING "scheduling_booking"."id"; args=('Olivia Clark', '2300 N Central Expy, Richardson, TX 75080', datetime.date(2025, 10, 4), 1, 1); alias=default
[2025-09-30 22:16:30,549] DEBUG django.db.backends (0.500) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:16:30,663] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 20, '2300 N Central Expy, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(5, 20, '2300 N Central Expy, Richardson, TX 75080'); alias=default
[2025-09-30 22:16:30,771] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 20, '2300 N Central Expy, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(1, 20, '2300 N Central Expy, Richardson, TX 75080'); alias=default
[2025-09-30 22:16:30,890] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Latoya Neal', '8000 Dallas Pkwy, Frisco, TX 75034', '2025-10-04'::date, 3, 1) RETURNING "scheduling_booking"."id"; args=('Latoya Neal', '8000 Dallas Pkwy, Frisco, TX 75034', datetime.date(2025, 10, 4), 3, 1); alias=default
[2025-09-30 22:16:31,003] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:16:31,133] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (4, 21, '8000 Dallas Pkwy, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(4, 21, '8000 Dallas Pkwy, Frisco, TX 75034'); alias=default
[2025-09-30 22:16:31,247] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Patrick White', '6000 Morriss Rd, Flower Mound, TX 75028', '2025-10-04'::date, 4, 1) RETURNING "scheduling_booking"."id"; args=('Patrick White', '6000 Morriss Rd, Flower Mound, TX 75028', datetime.date(2025, 10, 4), 4, 1); alias=default
[2025-09-30 22:16:31,360] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:16:31,473] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 22, '6000 Morriss Rd, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(1, 22, '6000 Morriss Rd, Flower Mound, TX 75028'); alias=default
[2025-09-30 22:16:31,587] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jaclyn Francis', '8100 Preston Rd, Plano, TX 75024', '2025-10-04'::date, 1, 2) RETURNING "scheduling_booking"."id"; args=('Jaclyn Francis', '8100 Preston Rd, Plano, TX 75024', datetime.date(2025, 10, 4), 1, 2); alias=default
[2025-09-30 22:16:31,715] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:16:31,837] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 23, '8100 Preston Rd, Plano, TX 75024') RETURNING "scheduling_jobassignment"."id"; args=(9, 23, '8100 Preston Rd, Plano, TX 75024'); alias=default
[2025-09-30 22:16:31,947] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 23, '8100 Preston Rd, Plano, TX 75024') RETURNING "scheduling_jobassignment"."id"; args=(7, 23, '8100 Preston Rd, Plano, TX 75024'); alias=default
[2025-09-30 22:16:32,057] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Mark Butler', '2000 W University Dr, Denton, TX 76201', '2025-10-04'::date, 2, 2) RETURNING "scheduling_booking"."id"; args=('Mark Butler', '2000 W University Dr, Denton, TX 76201', datetime.date(2025, 10, 4), 2, 2); alias=default
[2025-09-30 22:16:32,167] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:16:32,277] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (6, 24, '2000 W University Dr, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(6, 24, '2000 W University Dr, Denton, TX 76201'); alias=default
[2025-09-30 22:16:32,391] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 24, '2000 W University Dr, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(9, 24, '2000 W University Dr, Denton, TX 76201'); alias=default
[2025-09-30 22:16:32,504] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 24, '2000 W University Dr, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(8, 24, '2000 W University Dr, Denton, TX 76201'); alias=default
[2025-09-30 22:16:32,619] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Elizabeth Brown', '2100 W Walnut St, Garland, TX 75042', '2025-10-04'::date, 3, 2) RETURNING "scheduling_booking"."id"; args=('Elizabeth Brown', '2100 W Walnut St, Garland, TX 75042', datetime.date(2025, 10, 4), 3, 2); alias=default
[2025-09-30 22:16:32,733] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:16:32,846] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 25, '2100 W Walnut St, Garland, TX 75042') RETURNING "scheduling_jobassignment"."id"; args=(7, 25, '2100 W Walnut St, Garland, TX 75042'); alias=default
[2025-09-30 22:16:32,959] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (6, 25, '2100 W Walnut St, Garland, TX 75042') RETURNING "scheduling_jobassignment"."id"; args=(6, 25, '2100 W Walnut St, Garland, TX 75042'); alias=default
[2025-09-30 22:16:33,072] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Shane Carlson', '2400 Old Denton Rd, Carrollton, TX 75006', '2025-10-04'::date, 2, 3) RETURNING "scheduling_booking"."id"; args=('Shane Carlson', '2400 Old Denton Rd, Carrollton, TX 75006', datetime.date(2025, 10, 4), 2, 3); alias=default
[2025-09-30 22:16:33,186] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:16:33,298] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 26, '2400 Old Denton Rd, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(13, 26, '2400 Old Denton Rd, Carrollton, TX 75006'); alias=default
[2025-09-30 22:16:33,413] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Benjamin Brown', '1155 Union Cir, Denton, TX 76203', '2025-10-04'::date, 3, 3) RETURNING "scheduling_booking"."id"; args=('Benjamin Brown', '1155 Union Cir, Denton, TX 76203', datetime.date(2025, 10, 4), 3, 3); alias=default
[2025-09-30 22:16:33,525] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:16:33,969] DEBUG django.db.backends (0.454) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 27, '1155 Union Cir, Denton, TX 76203') RETURNING "scheduling_jobassignment"."id"; args=(13, 27, '1155 Union Cir, Denton, TX 76203'); alias=default
[2025-09-30 22:16:34,070] DEBUG django.db.backends (0.093) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 27, '1155 Union Cir, Denton, TX 76203') RETURNING "scheduling_jobassignment"."id"; args=(14, 27, '1155 Union Cir, Denton, TX 76203'); alias=default
[2025-09-30 22:16:34,241] DEBUG django.db.backends (0.172) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Brittney Ramos', '6000 Morriss Rd, Flower Mound, TX 75028', '2025-10-04'::date, 4, 3) RETURNING "scheduling_booking"."id"; args=('Brittney Ramos', '6000 Morriss Rd, Flower Mound, TX 75028', datetime.date(2025, 10, 4), 4, 3); alias=default
[2025-09-30 22:16:34,351] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:16:34,469] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 28, '6000 Morriss Rd, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(11, 28, '6000 Morriss Rd, Flower Mound, TX 75028'); alias=default
[2025-09-30 22:16:34,586] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Mary Henry', '2400 Old Denton Rd, Carrollton, TX 75006', '2025-10-05'::date, 1, 1) RETURNING "scheduling_booking"."id"; args=('Mary Henry', '2400 Old Denton Rd, Carrollton, TX 75006', datetime.date(2025, 10, 5), 1, 1); alias=default
[2025-09-30 22:16:34,698] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:16:34,810] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 29, '2400 Old Denton Rd, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(5, 29, '2400 Old Denton Rd, Carrollton, TX 75006'); alias=default
[2025-09-30 22:16:34,923] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 29, '2400 Old Denton Rd, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(1, 29, '2400 Old Denton Rd, Carrollton, TX 75006'); alias=default
[2025-09-30 22:16:35,037] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 29, '2400 Old Denton Rd, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(2, 29, '2400 Old Denton Rd, Carrollton, TX 75006'); alias=default
[2025-09-30 22:16:35,150] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jennifer Hamilton', '2601 Preston Rd, Frisco, TX 75034', '2025-10-05'::date, 2, 1) RETURNING "scheduling_booking"."id"; args=('Jennifer Hamilton', '2601 Preston Rd, Frisco, TX 75034', datetime.date(2025, 10, 5), 2, 1); alias=default
[2025-09-30 22:16:35,263] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:16:35,376] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 30, '2601 Preston Rd, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(5, 30, '2601 Preston Rd, Frisco, TX 75034'); alias=default
[2025-09-30 22:16:35,490] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 30, '2601 Preston Rd, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(1, 30, '2601 Preston Rd, Frisco, TX 75034'); alias=default
[2025-09-30 22:16:35,603] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Monica Carlson', '1010 E Trinity Mills Rd, Carrollton, TX 75006', '2025-10-05'::date, 3, 1) RETURNING "scheduling_booking"."id"; args=('Monica Carlson', '1010 E Trinity Mills Rd, Carrollton, TX 75006', datetime.date(2025, 10, 5), 3, 1); alias=default
[2025-09-30 22:16:35,716] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:16:35,828] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (4, 31, '1010 E Trinity Mills Rd, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(4, 31, '1010 E Trinity Mills Rd, Carrollton, TX 75006'); alias=default
[2025-09-30 22:16:35,946] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 31, '1010 E Trinity Mills Rd, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(1, 31, '1010 E Trinity Mills Rd, Carrollton, TX 75006'); alias=default
[2025-09-30 22:16:36,059] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (3, 31, '1010 E Trinity Mills Rd, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(3, 31, '1010 E Trinity Mills Rd, Carrollton, TX 75006'); alias=default
[2025-09-30 22:16:36,173] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Mark Olson', '8000 Dallas Pkwy, Frisco, TX 75034', '2025-10-05'::date, 4, 1) RETURNING "scheduling_booking"."id"; args=('Mark Olson', '8000 Dallas Pkwy, Frisco, TX 75034', datetime.date(2025, 10, 5), 4, 1); alias=default
[2025-09-30 22:16:36,286] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:16:36,399] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 32, '8000 Dallas Pkwy, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(2, 32, '8000 Dallas Pkwy, Frisco, TX 75034'); alias=default
[2025-09-30 22:16:36,512] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Madison Mccoy', '123 Greenville Ave, Dallas, TX 75206', '2025-10-05'::date, 3, 2) RETURNING "scheduling_booking"."id"; args=('Madison Mccoy', '123 Greenville Ave, Dallas, TX 75206', datetime.date(2025, 10, 5), 3, 2); alias=default
[2025-09-30 22:16:36,624] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:16:36,740] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 33, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(9, 33, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 22:16:36,860] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (10, 33, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(10, 33, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 22:16:36,975] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jason Lynch', '1155 Union Cir, Denton, TX 76203', '2025-10-05'::date, 4, 2) RETURNING "scheduling_booking"."id"; args=('Jason Lynch', '1155 Union Cir, Denton, TX 76203', datetime.date(2025, 10, 5), 4, 2); alias=default
[2025-09-30 22:16:37,088] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:16:37,202] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 34, '1155 Union Cir, Denton, TX 76203') RETURNING "scheduling_jobassignment"."id"; args=(9, 34, '1155 Union Cir, Denton, TX 76203'); alias=default
[2025-09-30 22:16:37,318] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (6, 34, '1155 Union Cir, Denton, TX 76203') RETURNING "scheduling_jobassignment"."id"; args=(6, 34, '1155 Union Cir, Denton, TX 76203'); alias=default
[2025-09-30 22:16:37,428] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('David Ford', '4017 Legacy Dr, Plano, TX 75023', '2025-10-05'::date, 1, 3) RETURNING "scheduling_booking"."id"; args=('David Ford', '4017 Legacy Dr, Plano, TX 75023', datetime.date(2025, 10, 5), 1, 3); alias=default
[2025-09-30 22:16:37,541] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:16:37,655] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 35, '4017 Legacy Dr, Plano, TX 75023') RETURNING "scheduling_jobassignment"."id"; args=(15, 35, '4017 Legacy Dr, Plano, TX 75023'); alias=default
[2025-09-30 22:16:37,768] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 35, '4017 Legacy Dr, Plano, TX 75023') RETURNING "scheduling_jobassignment"."id"; args=(12, 35, '4017 Legacy Dr, Plano, TX 75023'); alias=default
[2025-09-30 22:16:37,877] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 35, '4017 Legacy Dr, Plano, TX 75023') RETURNING "scheduling_jobassignment"."id"; args=(11, 35, '4017 Legacy Dr, Plano, TX 75023'); alias=default
[2025-09-30 22:16:37,990] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Shane Thomas', '1155 Union Cir, Denton, TX 76203', '2025-10-05'::date, 2, 3) RETURNING "scheduling_booking"."id"; args=('Shane Thomas', '1155 Union Cir, Denton, TX 76203', datetime.date(2025, 10, 5), 2, 3); alias=default
[2025-09-30 22:16:38,103] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:16:38,218] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 36, '1155 Union Cir, Denton, TX 76203') RETURNING "scheduling_jobassignment"."id"; args=(14, 36, '1155 Union Cir, Denton, TX 76203'); alias=default
[2025-09-30 22:16:38,334] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 36, '1155 Union Cir, Denton, TX 76203') RETURNING "scheduling_jobassignment"."id"; args=(13, 36, '1155 Union Cir, Denton, TX 76203'); alias=default
[2025-09-30 22:16:38,445] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 36, '1155 Union Cir, Denton, TX 76203') RETURNING "scheduling_jobassignment"."id"; args=(12, 36, '1155 Union Cir, Denton, TX 76203'); alias=default
[2025-09-30 22:16:38,561] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Brandi Brennan', '500 W Hickory St, Denton, TX 76201', '2025-10-05'::date, 4, 3) RETURNING "scheduling_booking"."id"; args=('Brandi Brennan', '500 W Hickory St, Denton, TX 76201', datetime.date(2025, 10, 5), 4, 3); alias=default
[2025-09-30 22:16:38,671] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:16:38,785] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 37, '500 W Hickory St, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(12, 37, '500 W Hickory St, Denton, TX 76201'); alias=default
[2025-09-30 22:16:38,894] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 37, '500 W Hickory St, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(11, 37, '500 W Hickory St, Denton, TX 76201'); alias=default
[2025-09-30 22:16:39,006] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Christopher White', '2100 W Walnut St, Garland, TX 75042', '2025-10-06'::date, 2, 2) RETURNING "scheduling_booking"."id"; args=('Christopher White', '2100 W Walnut St, Garland, TX 75042', datetime.date(2025, 10, 6), 2, 2); alias=default
[2025-09-30 22:16:39,119] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:16:39,233] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 38, '2100 W Walnut St, Garland, TX 75042') RETURNING "scheduling_jobassignment"."id"; args=(9, 38, '2100 W Walnut St, Garland, TX 75042'); alias=default
[2025-09-30 22:16:39,347] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (6, 38, '2100 W Walnut St, Garland, TX 75042') RETURNING "scheduling_jobassignment"."id"; args=(6, 38, '2100 W Walnut St, Garland, TX 75042'); alias=default
[2025-09-30 22:16:39,460] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Tricia Robles', '6801 Gaylord Pkwy, Frisco, TX 75034', '2025-10-06'::date, 3, 2) RETURNING "scheduling_booking"."id"; args=('Tricia Robles', '6801 Gaylord Pkwy, Frisco, TX 75034', datetime.date(2025, 10, 6), 3, 2); alias=default
[2025-09-30 22:16:39,573] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:16:39,685] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 39, '6801 Gaylord Pkwy, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(9, 39, '6801 Gaylord Pkwy, Frisco, TX 75034'); alias=default
[2025-09-30 22:16:39,798] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 39, '6801 Gaylord Pkwy, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(7, 39, '6801 Gaylord Pkwy, Frisco, TX 75034'); alias=default
[2025-09-30 22:16:39,912] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Emma Arroyo', '6801 Gaylord Pkwy, Frisco, TX 75034', '2025-10-06'::date, 1, 3) RETURNING "scheduling_booking"."id"; args=('Emma Arroyo', '6801 Gaylord Pkwy, Frisco, TX 75034', datetime.date(2025, 10, 6), 1, 3); alias=default
[2025-09-30 22:16:40,023] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:16:40,133] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 40, '6801 Gaylord Pkwy, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(12, 40, '6801 Gaylord Pkwy, Frisco, TX 75034'); alias=default
[2025-09-30 22:16:40,245] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 40, '6801 Gaylord Pkwy, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(13, 40, '6801 Gaylord Pkwy, Frisco, TX 75034'); alias=default
[2025-09-30 22:16:40,360] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 40, '6801 Gaylord Pkwy, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(14, 40, '6801 Gaylord Pkwy, Frisco, TX 75034'); alias=default
[2025-09-30 22:16:40,473] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Lawrence Watson', '400 W Campbell Rd, Richardson, TX 75080', '2025-10-06'::date, 3, 3) RETURNING "scheduling_booking"."id"; args=('Lawrence Watson', '400 W Campbell Rd, Richardson, TX 75080', datetime.date(2025, 10, 6), 3, 3); alias=default
[2025-09-30 22:16:40,589] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:16:40,708] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 41, '400 W Campbell Rd, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(13, 41, '400 W Campbell Rd, Richardson, TX 75080'); alias=default
[2025-09-30 22:16:40,819] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Stephanie Garcia', '500 W John Carpenter Fwy, Irving, TX 75039', '2025-10-07'::date, 3, 1) RETURNING "scheduling_booking"."id"; args=('Stephanie Garcia', '500 W John Carpenter Fwy, Irving, TX 75039', datetime.date(2025, 10, 7), 3, 1); alias=default
[2025-09-30 22:16:40,933] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:16:41,046] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 42, '500 W John Carpenter Fwy, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(5, 42, '500 W John Carpenter Fwy, Irving, TX 75039'); alias=default
[2025-09-30 22:16:41,159] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Danielle Woods', '5151 N President George Bush Hwy, Garland, TX 75040', '2025-10-07'::date, 4, 1) RETURNING "scheduling_booking"."id"; args=('Danielle Woods', '5151 N President George Bush Hwy, Garland, TX 75040', datetime.date(2025, 10, 7), 4, 1); alias=default
[2025-09-30 22:16:41,267] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:16:41,399] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (3, 43, '5151 N President George Bush Hwy, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(3, 43, '5151 N President George Bush Hwy, Garland, TX 75040'); alias=default
[2025-09-30 22:16:41,532] DEBUG django.db.backends (0.141) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (4, 43, '5151 N President George Bush Hwy, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(4, 43, '5151 N President George Bush Hwy, Garland, TX 75040'); alias=default
[2025-09-30 22:16:41,646] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Michael Graham', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-07'::date, 1, 2) RETURNING "scheduling_booking"."id"; args=('Michael Graham', '3900 Gaston Ave, Dallas, TX 75246', datetime.date(2025, 10, 7), 1, 2); alias=default
[2025-09-30 22:16:41,758] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:16:41,872] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (10, 44, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(10, 44, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 22:16:41,985] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 44, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(7, 44, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 22:16:42,099] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 44, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(8, 44, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 22:16:42,212] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Hannah Watkins', '2100 W Walnut St, Garland, TX 75042', '2025-10-07'::date, 3, 3) RETURNING "scheduling_booking"."id"; args=('Hannah Watkins', '2100 W Walnut St, Garland, TX 75042', datetime.date(2025, 10, 7), 3, 3); alias=default
[2025-09-30 22:16:42,322] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:16:42,436] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 45, '2100 W Walnut St, Garland, TX 75042') RETURNING "scheduling_jobassignment"."id"; args=(15, 45, '2100 W Walnut St, Garland, TX 75042'); alias=default
[2025-09-30 22:16:42,545] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 45, '2100 W Walnut St, Garland, TX 75042') RETURNING "scheduling_jobassignment"."id"; args=(12, 45, '2100 W Walnut St, Garland, TX 75042'); alias=default
[2025-09-30 22:16:42,658] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 45, '2100 W Walnut St, Garland, TX 75042') RETURNING "scheduling_jobassignment"."id"; args=(11, 45, '2100 W Walnut St, Garland, TX 75042'); alias=default
[2025-09-30 22:16:42,771] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Sheri Campos', '300 W Abram St, Arlington, TX 76010', '2025-10-08'::date, 2, 1) RETURNING "scheduling_booking"."id"; args=('Sheri Campos', '300 W Abram St, Arlington, TX 76010', datetime.date(2025, 10, 8), 2, 1); alias=default
[2025-09-30 22:16:42,884] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:16:42,997] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 46, '300 W Abram St, Arlington, TX 76010') RETURNING "scheduling_jobassignment"."id"; args=(1, 46, '300 W Abram St, Arlington, TX 76010'); alias=default
[2025-09-30 22:16:43,112] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Leslie West', '6801 Gaylord Pkwy, Frisco, TX 75034', '2025-10-08'::date, 3, 1) RETURNING "scheduling_booking"."id"; args=('Leslie West', '6801 Gaylord Pkwy, Frisco, TX 75034', datetime.date(2025, 10, 8), 3, 1); alias=default
[2025-09-30 22:16:43,224] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:16:43,338] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 47, '6801 Gaylord Pkwy, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(1, 47, '6801 Gaylord Pkwy, Frisco, TX 75034'); alias=default
[2025-09-30 22:16:43,450] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 47, '6801 Gaylord Pkwy, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(2, 47, '6801 Gaylord Pkwy, Frisco, TX 75034'); alias=default
[2025-09-30 22:16:43,563] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (3, 47, '6801 Gaylord Pkwy, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(3, 47, '6801 Gaylord Pkwy, Frisco, TX 75034'); alias=default
[2025-09-30 22:16:43,676] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Tami Smith', '500 W John Carpenter Fwy, Irving, TX 75039', '2025-10-08'::date, 4, 1) RETURNING "scheduling_booking"."id"; args=('Tami Smith', '500 W John Carpenter Fwy, Irving, TX 75039', datetime.date(2025, 10, 8), 4, 1); alias=default
[2025-09-30 22:16:43,787] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:16:43,903] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (4, 48, '500 W John Carpenter Fwy, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(4, 48, '500 W John Carpenter Fwy, Irving, TX 75039'); alias=default
[2025-09-30 22:16:44,016] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 48, '500 W John Carpenter Fwy, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(5, 48, '500 W John Carpenter Fwy, Irving, TX 75039'); alias=default
[2025-09-30 22:16:44,129] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Brenda Ferguson', '1400 Pacific Ave, Dallas, TX 75202', '2025-10-08'::date, 1, 2) RETURNING "scheduling_booking"."id"; args=('Brenda Ferguson', '1400 Pacific Ave, Dallas, TX 75202', datetime.date(2025, 10, 8), 1, 2); alias=default
[2025-09-30 22:16:44,240] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:16:44,350] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 49, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(9, 49, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 22:16:44,464] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 49, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(8, 49, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 22:16:44,575] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Terry Mason', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-08'::date, 1, 3) RETURNING "scheduling_booking"."id"; args=('Terry Mason', '3500 Oak Lawn Ave, Dallas, TX 75219', datetime.date(2025, 10, 8), 1, 3); alias=default
[2025-09-30 22:16:44,689] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:16:44,818] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 50, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(12, 50, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 22:16:44,928] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 50, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(13, 50, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 22:16:45,041] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Andrew Walker', '123 Greenville Ave, Dallas, TX 75206', '2025-10-08'::date, 2, 3) RETURNING "scheduling_booking"."id"; args=('Andrew Walker', '123 Greenville Ave, Dallas, TX 75206', datetime.date(2025, 10, 8), 2, 3); alias=default
[2025-09-30 22:16:45,155] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:16:45,264] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 51, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(12, 51, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 22:16:45,377] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('John Allen', '6801 Gaylord Pkwy, Frisco, TX 75034', '2025-10-08'::date, 4, 3) RETURNING "scheduling_booking"."id"; args=('John Allen', '6801 Gaylord Pkwy, Frisco, TX 75034', datetime.date(2025, 10, 8), 4, 3); alias=default
[2025-09-30 22:16:45,490] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:16:45,602] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 52, '6801 Gaylord Pkwy, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(11, 52, '6801 Gaylord Pkwy, Frisco, TX 75034'); alias=default
[2025-09-30 22:16:45,716] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 52, '6801 Gaylord Pkwy, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(15, 52, '6801 Gaylord Pkwy, Frisco, TX 75034'); alias=default
[2025-09-30 22:16:45,828] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Andrew Howard', '8100 Preston Rd, Plano, TX 75024', '2025-10-09'::date, 1, 1) RETURNING "scheduling_booking"."id"; args=('Andrew Howard', '8100 Preston Rd, Plano, TX 75024', datetime.date(2025, 10, 9), 1, 1); alias=default
[2025-09-30 22:16:45,936] DEBUG django.db.backends (0.094) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:16:46,049] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 53, '8100 Preston Rd, Plano, TX 75024') RETURNING "scheduling_jobassignment"."id"; args=(5, 53, '8100 Preston Rd, Plano, TX 75024'); alias=default
[2025-09-30 22:16:46,162] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('James Brown', '300 W Abram St, Arlington, TX 76010', '2025-10-09'::date, 2, 2) RETURNING "scheduling_booking"."id"; args=('James Brown', '300 W Abram St, Arlington, TX 76010', datetime.date(2025, 10, 9), 2, 2); alias=default
[2025-09-30 22:16:46,279] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:16:46,394] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 54, '300 W Abram St, Arlington, TX 76010') RETURNING "scheduling_jobassignment"."id"; args=(9, 54, '300 W Abram St, Arlington, TX 76010'); alias=default
[2025-09-30 22:16:46,506] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 54, '300 W Abram St, Arlington, TX 76010') RETURNING "scheduling_jobassignment"."id"; args=(8, 54, '300 W Abram St, Arlington, TX 76010'); alias=default
[2025-09-30 22:16:46,619] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (10, 54, '300 W Abram St, Arlington, TX 76010') RETURNING "scheduling_jobassignment"."id"; args=(10, 54, '300 W Abram St, Arlington, TX 76010'); alias=default
[2025-09-30 22:16:46,733] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Amy Wright', '2000 W University Dr, Denton, TX 76201', '2025-10-09'::date, 4, 2) RETURNING "scheduling_booking"."id"; args=('Amy Wright', '2000 W University Dr, Denton, TX 76201', datetime.date(2025, 10, 9), 4, 2); alias=default
[2025-09-30 22:16:46,846] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:16:46,959] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (6, 55, '2000 W University Dr, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(6, 55, '2000 W University Dr, Denton, TX 76201'); alias=default
[2025-09-30 22:16:47,072] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 55, '2000 W University Dr, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(8, 55, '2000 W University Dr, Denton, TX 76201'); alias=default
[2025-09-30 22:16:47,186] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('William Harris', '2100 W Walnut St, Garland, TX 75042', '2025-10-09'::date, 1, 3) RETURNING "scheduling_booking"."id"; args=('William Harris', '2100 W Walnut St, Garland, TX 75042', datetime.date(2025, 10, 9), 1, 3); alias=default
[2025-09-30 22:16:47,299] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:16:47,412] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 56, '2100 W Walnut St, Garland, TX 75042') RETURNING "scheduling_jobassignment"."id"; args=(15, 56, '2100 W Walnut St, Garland, TX 75042'); alias=default
[2025-09-30 22:16:47,522] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 56, '2100 W Walnut St, Garland, TX 75042') RETURNING "scheduling_jobassignment"."id"; args=(12, 56, '2100 W Walnut St, Garland, TX 75042'); alias=default
[2025-09-30 22:16:47,634] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 56, '2100 W Walnut St, Garland, TX 75042') RETURNING "scheduling_jobassignment"."id"; args=(11, 56, '2100 W Walnut St, Garland, TX 75042'); alias=default
[2025-09-30 22:16:47,745] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Cindy Tran', '8100 Preston Rd, Plano, TX 75024', '2025-10-10'::date, 1, 1) RETURNING "scheduling_booking"."id"; args=('Cindy Tran', '8100 Preston Rd, Plano, TX 75024', datetime.date(2025, 10, 10), 1, 1); alias=default
[2025-09-30 22:16:47,844] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:16:47,967] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (3, 57, '8100 Preston Rd, Plano, TX 75024') RETURNING "scheduling_jobassignment"."id"; args=(3, 57, '8100 Preston Rd, Plano, TX 75024'); alias=default
[2025-09-30 22:16:48,078] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 57, '8100 Preston Rd, Plano, TX 75024') RETURNING "scheduling_jobassignment"."id"; args=(1, 57, '8100 Preston Rd, Plano, TX 75024'); alias=default
[2025-09-30 22:16:48,179] DEBUG django.db.backends (0.094) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Olivia Esparza', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-10'::date, 2, 1) RETURNING "scheduling_booking"."id"; args=('Olivia Esparza', '3900 Gaston Ave, Dallas, TX 75246', datetime.date(2025, 10, 10), 2, 1); alias=default
[2025-09-30 22:16:48,307] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:16:48,429] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (4, 58, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(4, 58, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 22:16:48,542] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 58, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(5, 58, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 22:16:48,654] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Christopher Jones', '5151 N President George Bush Hwy, Garland, TX 75040', '2025-10-10'::date, 1, 2) RETURNING "scheduling_booking"."id"; args=('Christopher Jones', '5151 N President George Bush Hwy, Garland, TX 75040', datetime.date(2025, 10, 10), 1, 2); alias=default
[2025-09-30 22:16:48,768] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:16:48,881] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 59, '5151 N President George Bush Hwy, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(9, 59, '5151 N President George Bush Hwy, Garland, TX 75040'); alias=default
[2025-09-30 22:16:48,994] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Ariel Cameron', '123 Greenville Ave, Dallas, TX 75206', '2025-10-10'::date, 3, 2) RETURNING "scheduling_booking"."id"; args=('Ariel Cameron', '123 Greenville Ave, Dallas, TX 75206', datetime.date(2025, 10, 10), 3, 2); alias=default
[2025-09-30 22:16:49,108] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:16:49,221] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (6, 60, '123 Greenville Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(6, 60, '123 Greenville Ave, Dallas, TX 75206'); alias=default
[2025-09-30 22:16:49,334] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Brianna Grant', '8100 Preston Rd, Plano, TX 75024', '2025-10-10'::date, 4, 2) RETURNING "scheduling_booking"."id"; args=('Brianna Grant', '8100 Preston Rd, Plano, TX 75024', datetime.date(2025, 10, 10), 4, 2); alias=default
[2025-09-30 22:16:49,445] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:16:49,558] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 61, '8100 Preston Rd, Plano, TX 75024') RETURNING "scheduling_jobassignment"."id"; args=(8, 61, '8100 Preston Rd, Plano, TX 75024'); alias=default
[2025-09-30 22:16:49,673] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (10, 61, '8100 Preston Rd, Plano, TX 75024') RETURNING "scheduling_jobassignment"."id"; args=(10, 61, '8100 Preston Rd, Plano, TX 75024'); alias=default
[2025-09-30 22:16:49,787] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 61, '8100 Preston Rd, Plano, TX 75024') RETURNING "scheduling_jobassignment"."id"; args=(7, 61, '8100 Preston Rd, Plano, TX 75024'); alias=default
[2025-09-30 22:16:49,899] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jasmin Mills', '500 W John Carpenter Fwy, Irving, TX 75039', '2025-10-10'::date, 3, 3) RETURNING "scheduling_booking"."id"; args=('Jasmin Mills', '500 W John Carpenter Fwy, Irving, TX 75039', datetime.date(2025, 10, 10), 3, 3); alias=default
[2025-09-30 22:16:50,011] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:16:50,124] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 62, '500 W John Carpenter Fwy, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(15, 62, '500 W John Carpenter Fwy, Irving, TX 75039'); alias=default
[2025-09-30 22:16:50,238] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 62, '500 W John Carpenter Fwy, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(12, 62, '500 W John Carpenter Fwy, Irving, TX 75039'); alias=default
[2025-09-30 22:16:50,350] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 62, '500 W John Carpenter Fwy, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(13, 62, '500 W John Carpenter Fwy, Irving, TX 75039'); alias=default
[2025-09-30 22:16:50,463] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jose Montgomery', '1400 Pacific Ave, Dallas, TX 75202', '2025-10-10'::date, 4, 3) RETURNING "scheduling_booking"."id"; args=('Jose Montgomery', '1400 Pacific Ave, Dallas, TX 75202', datetime.date(2025, 10, 10), 4, 3); alias=default
[2025-09-30 22:16:50,575] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:16:50,685] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 63, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(13, 63, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 22:16:50,799] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 63, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(14, 63, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 22:16:50,912] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Kristina Morrison', '500 W Hickory St, Denton, TX 76201', '2025-10-11'::date, 2, 1) RETURNING "scheduling_booking"."id"; args=('Kristina Morrison', '500 W Hickory St, Denton, TX 76201', datetime.date(2025, 10, 11), 2, 1); alias=default
[2025-09-30 22:16:51,023] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:16:51,138] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 64, '500 W Hickory St, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(2, 64, '500 W Hickory St, Denton, TX 76201'); alias=default
[2025-09-30 22:16:51,249] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Theresa Jones', '2400 Old Denton Rd, Carrollton, TX 75006', '2025-10-11'::date, 3, 1) RETURNING "scheduling_booking"."id"; args=('Theresa Jones', '2400 Old Denton Rd, Carrollton, TX 75006', datetime.date(2025, 10, 11), 3, 1); alias=default
[2025-09-30 22:16:51,363] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:16:51,474] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 65, '2400 Old Denton Rd, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(5, 65, '2400 Old Denton Rd, Carrollton, TX 75006'); alias=default
[2025-09-30 22:16:51,585] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (4, 65, '2400 Old Denton Rd, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(4, 65, '2400 Old Denton Rd, Carrollton, TX 75006'); alias=default
[2025-09-30 22:16:51,698] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Samuel Hudson', '3200 W Irving Blvd, Irving, TX 75061', '2025-10-11'::date, 4, 1) RETURNING "scheduling_booking"."id"; args=('Samuel Hudson', '3200 W Irving Blvd, Irving, TX 75061', datetime.date(2025, 10, 11), 4, 1); alias=default
[2025-09-30 22:16:51,811] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:16:51,924] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 66, '3200 W Irving Blvd, Irving, TX 75061') RETURNING "scheduling_jobassignment"."id"; args=(5, 66, '3200 W Irving Blvd, Irving, TX 75061'); alias=default
[2025-09-30 22:16:52,050] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 66, '3200 W Irving Blvd, Irving, TX 75061') RETURNING "scheduling_jobassignment"."id"; args=(1, 66, '3200 W Irving Blvd, Irving, TX 75061'); alias=default
[2025-09-30 22:16:52,164] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (3, 66, '3200 W Irving Blvd, Irving, TX 75061') RETURNING "scheduling_jobassignment"."id"; args=(3, 66, '3200 W Irving Blvd, Irving, TX 75061'); alias=default
[2025-09-30 22:16:52,277] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Barry Collins', '2100 W Walnut St, Garland, TX 75042', '2025-10-11'::date, 4, 2) RETURNING "scheduling_booking"."id"; args=('Barry Collins', '2100 W Walnut St, Garland, TX 75042', datetime.date(2025, 10, 11), 4, 2); alias=default
[2025-09-30 22:16:52,390] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:16:52,503] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (6, 67, '2100 W Walnut St, Garland, TX 75042') RETURNING "scheduling_jobassignment"."id"; args=(6, 67, '2100 W Walnut St, Garland, TX 75042'); alias=default
[2025-09-30 22:16:52,617] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jason Ballard', '8000 Dallas Pkwy, Frisco, TX 75034', '2025-10-11'::date, 1, 3) RETURNING "scheduling_booking"."id"; args=('Jason Ballard', '8000 Dallas Pkwy, Frisco, TX 75034', datetime.date(2025, 10, 11), 1, 3); alias=default
[2025-09-30 22:16:52,729] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:16:52,845] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 68, '8000 Dallas Pkwy, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(15, 68, '8000 Dallas Pkwy, Frisco, TX 75034'); alias=default
[2025-09-30 22:16:52,960] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 68, '8000 Dallas Pkwy, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(12, 68, '8000 Dallas Pkwy, Frisco, TX 75034'); alias=default
[2025-09-30 22:16:53,072] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Daniel Mcpherson', '400 W Campbell Rd, Richardson, TX 75080', '2025-10-11'::date, 3, 3) RETURNING "scheduling_booking"."id"; args=('Daniel Mcpherson', '400 W Campbell Rd, Richardson, TX 75080', datetime.date(2025, 10, 11), 3, 3); alias=default
[2025-09-30 22:16:53,184] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:16:53,300] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 69, '400 W Campbell Rd, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(13, 69, '400 W Campbell Rd, Richardson, TX 75080'); alias=default
[2025-09-30 22:16:53,411] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Nicole Carney', '1155 Union Cir, Denton, TX 76203', '2025-10-11'::date, 4, 3) RETURNING "scheduling_booking"."id"; args=('Nicole Carney', '1155 Union Cir, Denton, TX 76203', datetime.date(2025, 10, 11), 4, 3); alias=default
[2025-09-30 22:16:53,519] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:16:53,628] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 70, '1155 Union Cir, Denton, TX 76203') RETURNING "scheduling_jobassignment"."id"; args=(15, 70, '1155 Union Cir, Denton, TX 76203'); alias=default
[2025-09-30 22:16:53,725] DEBUG django.db.backends (0.094) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Kimberly Perez', '1100 Long Prairie Rd, Flower Mound, TX 75028', '2025-10-12'::date, 1, 1) RETURNING "scheduling_booking"."id"; args=('Kimberly Perez', '1100 Long Prairie Rd, Flower Mound, TX 75028', datetime.date(2025, 10, 12), 1, 1); alias=default
[2025-09-30 22:16:53,831] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:16:53,956] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 71, '1100 Long Prairie Rd, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(1, 71, '1100 Long Prairie Rd, Flower Mound, TX 75028'); alias=default
[2025-09-30 22:16:54,066] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (3, 71, '1100 Long Prairie Rd, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(3, 71, '1100 Long Prairie Rd, Flower Mound, TX 75028'); alias=default
[2025-09-30 22:16:54,180] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 71, '1100 Long Prairie Rd, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(2, 71, '1100 Long Prairie Rd, Flower Mound, TX 75028'); alias=default
[2025-09-30 22:16:54,288] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Allen Hurst', '3200 W Irving Blvd, Irving, TX 75061', '2025-10-12'::date, 3, 1) RETURNING "scheduling_booking"."id"; args=('Allen Hurst', '3200 W Irving Blvd, Irving, TX 75061', datetime.date(2025, 10, 12), 3, 1); alias=default
[2025-09-30 22:16:54,397] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:16:54,507] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 72, '3200 W Irving Blvd, Irving, TX 75061') RETURNING "scheduling_jobassignment"."id"; args=(1, 72, '3200 W Irving Blvd, Irving, TX 75061'); alias=default
[2025-09-30 22:16:54,625] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 72, '3200 W Irving Blvd, Irving, TX 75061') RETURNING "scheduling_jobassignment"."id"; args=(5, 72, '3200 W Irving Blvd, Irving, TX 75061'); alias=default
[2025-09-30 22:16:54,747] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (4, 72, '3200 W Irving Blvd, Irving, TX 75061') RETURNING "scheduling_jobassignment"."id"; args=(4, 72, '3200 W Irving Blvd, Irving, TX 75061'); alias=default
[2025-09-30 22:16:54,859] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Sophia Young', '2200 Cross Timbers Rd, Flower Mound, TX 75028', '2025-10-12'::date, 2, 2) RETURNING "scheduling_booking"."id"; args=('Sophia Young', '2200 Cross Timbers Rd, Flower Mound, TX 75028', datetime.date(2025, 10, 12), 2, 2); alias=default
[2025-09-30 22:16:54,960] DEBUG django.db.backends (0.094) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:16:55,080] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (6, 73, '2200 Cross Timbers Rd, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(6, 73, '2200 Cross Timbers Rd, Flower Mound, TX 75028'); alias=default
[2025-09-30 22:16:55,194] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Donna Nguyen MD', '1010 E Trinity Mills Rd, Carrollton, TX 75006', '2025-10-12'::date, 1, 3) RETURNING "scheduling_booking"."id"; args=('Donna Nguyen MD', '1010 E Trinity Mills Rd, Carrollton, TX 75006', datetime.date(2025, 10, 12), 1, 3); alias=default
[2025-09-30 22:16:55,304] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:16:55,413] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 74, '1010 E Trinity Mills Rd, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(15, 74, '1010 E Trinity Mills Rd, Carrollton, TX 75006'); alias=default
[2025-09-30 22:16:55,522] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Heather Larson', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-12'::date, 4, 3) RETURNING "scheduling_booking"."id"; args=('Heather Larson', '3900 Gaston Ave, Dallas, TX 75246', datetime.date(2025, 10, 12), 4, 3); alias=default
[2025-09-30 22:16:55,632] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:16:55,741] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 75, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(11, 75, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 22:16:55,866] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 75, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(15, 75, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 22:16:55,975] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('James Mcdonald', '1500 Spring Creek Pkwy, Plano, TX 75074', '2025-10-13'::date, 2, 1) RETURNING "scheduling_booking"."id"; args=('James Mcdonald', '1500 Spring Creek Pkwy, Plano, TX 75074', datetime.date(2025, 10, 13), 2, 1); alias=default
[2025-09-30 22:16:56,198] DEBUG django.db.backends (0.218) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:16:56,293] DEBUG django.db.backends (0.094) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 76, '1500 Spring Creek Pkwy, Plano, TX 75074') RETURNING "scheduling_jobassignment"."id"; args=(1, 76, '1500 Spring Creek Pkwy, Plano, TX 75074'); alias=default
[2025-09-30 22:16:56,409] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 76, '1500 Spring Creek Pkwy, Plano, TX 75074') RETURNING "scheduling_jobassignment"."id"; args=(5, 76, '1500 Spring Creek Pkwy, Plano, TX 75074'); alias=default
[2025-09-30 22:16:56,540] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 76, '1500 Spring Creek Pkwy, Plano, TX 75074') RETURNING "scheduling_jobassignment"."id"; args=(2, 76, '1500 Spring Creek Pkwy, Plano, TX 75074'); alias=default
[2025-09-30 22:16:56,649] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Katrina Strickland', '2300 N Central Expy, Richardson, TX 75080', '2025-10-13'::date, 2, 2) RETURNING "scheduling_booking"."id"; args=('Katrina Strickland', '2300 N Central Expy, Richardson, TX 75080', datetime.date(2025, 10, 13), 2, 2); alias=default
[2025-09-30 22:16:56,760] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:16:56,882] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (10, 77, '2300 N Central Expy, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(10, 77, '2300 N Central Expy, Richardson, TX 75080'); alias=default
[2025-09-30 22:16:56,994] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 77, '2300 N Central Expy, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(9, 77, '2300 N Central Expy, Richardson, TX 75080'); alias=default
[2025-09-30 22:16:57,107] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (6, 77, '2300 N Central Expy, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(6, 77, '2300 N Central Expy, Richardson, TX 75080'); alias=default
[2025-09-30 22:16:57,221] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('David Blackwell', '2100 W Walnut St, Garland, TX 75042', '2025-10-13'::date, 3, 2) RETURNING "scheduling_booking"."id"; args=('David Blackwell', '2100 W Walnut St, Garland, TX 75042', datetime.date(2025, 10, 13), 3, 2); alias=default
[2025-09-30 22:16:57,328] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:16:57,444] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (6, 78, '2100 W Walnut St, Garland, TX 75042') RETURNING "scheduling_jobassignment"."id"; args=(6, 78, '2100 W Walnut St, Garland, TX 75042'); alias=default
[2025-09-30 22:16:57,560] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Shannon Hayes', '1000 Ballpark Way, Arlington, TX 76011', '2025-10-13'::date, 1, 3) RETURNING "scheduling_booking"."id"; args=('Shannon Hayes', '1000 Ballpark Way, Arlington, TX 76011', datetime.date(2025, 10, 13), 1, 3); alias=default
[2025-09-30 22:16:57,673] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:16:57,786] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 79, '1000 Ballpark Way, Arlington, TX 76011') RETURNING "scheduling_jobassignment"."id"; args=(14, 79, '1000 Ballpark Way, Arlington, TX 76011'); alias=default
[2025-09-30 22:16:57,899] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 79, '1000 Ballpark Way, Arlington, TX 76011') RETURNING "scheduling_jobassignment"."id"; args=(15, 79, '1000 Ballpark Way, Arlington, TX 76011'); alias=default
[2025-09-30 22:16:58,009] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Rebecca Warren', '3000 N Belt Line Rd, Irving, TX 75062', '2025-10-13'::date, 3, 3) RETURNING "scheduling_booking"."id"; args=('Rebecca Warren', '3000 N Belt Line Rd, Irving, TX 75062', datetime.date(2025, 10, 13), 3, 3); alias=default
[2025-09-30 22:16:58,109] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:16:58,226] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 80, '3000 N Belt Line Rd, Irving, TX 75062') RETURNING "scheduling_jobassignment"."id"; args=(13, 80, '3000 N Belt Line Rd, Irving, TX 75062'); alias=default
[2025-09-30 22:16:58,341] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 80, '3000 N Belt Line Rd, Irving, TX 75062') RETURNING "scheduling_jobassignment"."id"; args=(11, 80, '3000 N Belt Line Rd, Irving, TX 75062'); alias=default
[2025-09-30 22:16:58,451] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Barbara Lin', '8000 Dallas Pkwy, Frisco, TX 75034', '2025-10-14'::date, 1, 1) RETURNING "scheduling_booking"."id"; args=('Barbara Lin', '8000 Dallas Pkwy, Frisco, TX 75034', datetime.date(2025, 10, 14), 1, 1); alias=default
[2025-09-30 22:16:58,570] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:16:58,679] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (3, 81, '8000 Dallas Pkwy, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(3, 81, '8000 Dallas Pkwy, Frisco, TX 75034'); alias=default
[2025-09-30 22:16:58,794] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 81, '8000 Dallas Pkwy, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(1, 81, '8000 Dallas Pkwy, Frisco, TX 75034'); alias=default
[2025-09-30 22:16:58,900] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Deborah Mercer', '400 W Campbell Rd, Richardson, TX 75080', '2025-10-14'::date, 2, 1) RETURNING "scheduling_booking"."id"; args=('Deborah Mercer', '400 W Campbell Rd, Richardson, TX 75080', datetime.date(2025, 10, 14), 2, 1); alias=default
[2025-09-30 22:16:59,006] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:16:59,134] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 82, '400 W Campbell Rd, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(2, 82, '400 W Campbell Rd, Richardson, TX 75080'); alias=default
[2025-09-30 22:16:59,245] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('William Jackson', '5806 Birchbrook Dr, Plano, TX 75093', '2025-10-14'::date, 3, 1) RETURNING "scheduling_booking"."id"; args=('William Jackson', '5806 Birchbrook Dr, Plano, TX 75093', datetime.date(2025, 10, 14), 3, 1); alias=default
[2025-09-30 22:16:59,353] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:16:59,456] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 83, '5806 Birchbrook Dr, Plano, TX 75093') RETURNING "scheduling_jobassignment"."id"; args=(1, 83, '5806 Birchbrook Dr, Plano, TX 75093'); alias=default
[2025-09-30 22:16:59,580] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jill Carter', '1400 Pacific Ave, Dallas, TX 75202', '2025-10-14'::date, 3, 2) RETURNING "scheduling_booking"."id"; args=('Jill Carter', '1400 Pacific Ave, Dallas, TX 75202', datetime.date(2025, 10, 14), 3, 2); alias=default
[2025-09-30 22:16:59,689] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:16:59,802] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (6, 84, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(6, 84, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 22:16:59,911] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Tammy Jones', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-14'::date, 4, 2) RETURNING "scheduling_booking"."id"; args=('Tammy Jones', '3900 Gaston Ave, Dallas, TX 75246', datetime.date(2025, 10, 14), 4, 2); alias=default
[2025-09-30 22:17:00,024] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:17:00,137] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 85, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(8, 85, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 22:17:00,250] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 85, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(9, 85, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 22:17:00,363] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (10, 85, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(10, 85, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 22:17:00,477] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jonathan Ferguson', '3200 W Irving Blvd, Irving, TX 75061', '2025-10-14'::date, 4, 3) RETURNING "scheduling_booking"."id"; args=('Jonathan Ferguson', '3200 W Irving Blvd, Irving, TX 75061', datetime.date(2025, 10, 14), 4, 3); alias=default
[2025-09-30 22:17:00,584] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:17:00,694] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 86, '3200 W Irving Blvd, Irving, TX 75061') RETURNING "scheduling_jobassignment"."id"; args=(12, 86, '3200 W Irving Blvd, Irving, TX 75061'); alias=default
[2025-09-30 22:17:00,814] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 86, '3200 W Irving Blvd, Irving, TX 75061') RETURNING "scheduling_jobassignment"."id"; args=(14, 86, '3200 W Irving Blvd, Irving, TX 75061'); alias=default
[2025-09-30 22:17:00,925] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('George Riley', '2201 E Road to Six Flags St, Arlington, TX 76011', '2025-10-15'::date, 1, 1) RETURNING "scheduling_booking"."id"; args=('George Riley', '2201 E Road to Six Flags St, Arlington, TX 76011', datetime.date(2025, 10, 15), 1, 1); alias=default
[2025-09-30 22:17:01,037] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:17:01,160] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (3, 87, '2201 E Road to Six Flags St, Arlington, TX 76011') RETURNING "scheduling_jobassignment"."id"; args=(3, 87, '2201 E Road to Six Flags St, Arlington, TX 76011'); alias=default
[2025-09-30 22:17:01,278] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Tara Lynch', '4017 Legacy Dr, Plano, TX 75023', '2025-10-15'::date, 2, 1) RETURNING "scheduling_booking"."id"; args=('Tara Lynch', '4017 Legacy Dr, Plano, TX 75023', datetime.date(2025, 10, 15), 2, 1); alias=default
[2025-09-30 22:17:01,374] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:17:01,504] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 88, '4017 Legacy Dr, Plano, TX 75023') RETURNING "scheduling_jobassignment"."id"; args=(1, 88, '4017 Legacy Dr, Plano, TX 75023'); alias=default
[2025-09-30 22:17:01,619] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Darren Barnett', '1155 Union Cir, Denton, TX 76203', '2025-10-15'::date, 4, 2) RETURNING "scheduling_booking"."id"; args=('Darren Barnett', '1155 Union Cir, Denton, TX 76203', datetime.date(2025, 10, 15), 4, 2); alias=default
[2025-09-30 22:17:01,732] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:17:01,846] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 89, '1155 Union Cir, Denton, TX 76203') RETURNING "scheduling_jobassignment"."id"; args=(8, 89, '1155 Union Cir, Denton, TX 76203'); alias=default
[2025-09-30 22:17:01,956] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Todd Anderson', '500 W Hickory St, Denton, TX 76201', '2025-10-15'::date, 1, 3) RETURNING "scheduling_booking"."id"; args=('Todd Anderson', '500 W Hickory St, Denton, TX 76201', datetime.date(2025, 10, 15), 1, 3); alias=default
[2025-09-30 22:17:02,077] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:17:02,190] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 90, '500 W Hickory St, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(15, 90, '500 W Hickory St, Denton, TX 76201'); alias=default
[2025-09-30 22:17:02,303] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 90, '500 W Hickory St, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(12, 90, '500 W Hickory St, Denton, TX 76201'); alias=default
[2025-09-30 22:17:02,416] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 90, '500 W Hickory St, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(13, 90, '500 W Hickory St, Denton, TX 76201'); alias=default
[2025-09-30 22:17:02,529] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Rhonda Love', '300 W Abram St, Arlington, TX 76010', '2025-10-15'::date, 3, 3) RETURNING "scheduling_booking"."id"; args=('Rhonda Love', '300 W Abram St, Arlington, TX 76010', datetime.date(2025, 10, 15), 3, 3); alias=default
[2025-09-30 22:17:02,640] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:17:02,756] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 91, '300 W Abram St, Arlington, TX 76010') RETURNING "scheduling_jobassignment"."id"; args=(12, 91, '300 W Abram St, Arlington, TX 76010'); alias=default
[2025-09-30 22:17:02,866] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 91, '300 W Abram St, Arlington, TX 76010') RETURNING "scheduling_jobassignment"."id"; args=(14, 91, '300 W Abram St, Arlington, TX 76010'); alias=default
[2025-09-30 22:17:02,982] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Nathaniel Lynch', '2201 E Road to Six Flags St, Arlington, TX 76011', '2025-10-16'::date, 1, 1) RETURNING "scheduling_booking"."id"; args=('Nathaniel Lynch', '2201 E Road to Six Flags St, Arlington, TX 76011', datetime.date(2025, 10, 16), 1, 1); alias=default
[2025-09-30 22:17:03,094] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:17:03,206] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (3, 92, '2201 E Road to Six Flags St, Arlington, TX 76011') RETURNING "scheduling_jobassignment"."id"; args=(3, 92, '2201 E Road to Six Flags St, Arlington, TX 76011'); alias=default
[2025-09-30 22:17:03,317] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 92, '2201 E Road to Six Flags St, Arlington, TX 76011') RETURNING "scheduling_jobassignment"."id"; args=(5, 92, '2201 E Road to Six Flags St, Arlington, TX 76011'); alias=default
[2025-09-30 22:17:03,432] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Kristin Contreras', '2400 Old Denton Rd, Carrollton, TX 75006', '2025-10-16'::date, 2, 1) RETURNING "scheduling_booking"."id"; args=('Kristin Contreras', '2400 Old Denton Rd, Carrollton, TX 75006', datetime.date(2025, 10, 16), 2, 1); alias=default
[2025-09-30 22:17:03,546] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:17:03,657] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (4, 93, '2400 Old Denton Rd, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(4, 93, '2400 Old Denton Rd, Carrollton, TX 75006'); alias=default
[2025-09-30 22:17:03,767] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (3, 93, '2400 Old Denton Rd, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(3, 93, '2400 Old Denton Rd, Carrollton, TX 75006'); alias=default
[2025-09-30 22:17:03,874] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 93, '2400 Old Denton Rd, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(5, 93, '2400 Old Denton Rd, Carrollton, TX 75006'); alias=default
[2025-09-30 22:17:03,991] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jason Lin', '1100 Long Prairie Rd, Flower Mound, TX 75028', '2025-10-16'::date, 2, 2) RETURNING "scheduling_booking"."id"; args=('Jason Lin', '1100 Long Prairie Rd, Flower Mound, TX 75028', datetime.date(2025, 10, 16), 2, 2); alias=default
[2025-09-30 22:17:04,100] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:17:04,210] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 94, '1100 Long Prairie Rd, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(9, 94, '1100 Long Prairie Rd, Flower Mound, TX 75028'); alias=default
[2025-09-30 22:17:04,320] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 94, '1100 Long Prairie Rd, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(7, 94, '1100 Long Prairie Rd, Flower Mound, TX 75028'); alias=default
[2025-09-30 22:17:04,447] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Samantha Bowman', '1010 E Trinity Mills Rd, Carrollton, TX 75006', '2025-10-16'::date, 1, 3) RETURNING "scheduling_booking"."id"; args=('Samantha Bowman', '1010 E Trinity Mills Rd, Carrollton, TX 75006', datetime.date(2025, 10, 16), 1, 3); alias=default
[2025-09-30 22:17:04,556] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:17:04,659] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 95, '1010 E Trinity Mills Rd, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(12, 95, '1010 E Trinity Mills Rd, Carrollton, TX 75006'); alias=default
[2025-09-30 22:17:04,771] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 95, '1010 E Trinity Mills Rd, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(11, 95, '1010 E Trinity Mills Rd, Carrollton, TX 75006'); alias=default
[2025-09-30 22:17:04,900] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Logan Edwards', '5151 N President George Bush Hwy, Garland, TX 75040', '2025-10-16'::date, 4, 3) RETURNING "scheduling_booking"."id"; args=('Logan Edwards', '5151 N President George Bush Hwy, Garland, TX 75040', datetime.date(2025, 10, 16), 4, 3); alias=default
[2025-09-30 22:17:05,007] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:17:05,116] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 96, '5151 N President George Bush Hwy, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(12, 96, '5151 N President George Bush Hwy, Garland, TX 75040'); alias=default
[2025-09-30 22:17:05,241] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 96, '5151 N President George Bush Hwy, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(15, 96, '5151 N President George Bush Hwy, Garland, TX 75040'); alias=default
[2025-09-30 22:17:05,354] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 96, '5151 N President George Bush Hwy, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(13, 96, '5151 N President George Bush Hwy, Garland, TX 75040'); alias=default
[2025-09-30 22:17:05,460] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Casey Hall', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-17'::date, 1, 1) RETURNING "scheduling_booking"."id"; args=('Casey Hall', '3900 Gaston Ave, Dallas, TX 75246', datetime.date(2025, 10, 17), 1, 1); alias=default
[2025-09-30 22:17:05,581] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:17:05,694] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (4, 97, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(4, 97, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 22:17:05,804] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 97, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(5, 97, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 22:17:05,913] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Amanda Morrow', '2400 Old Denton Rd, Carrollton, TX 75006', '2025-10-17'::date, 2, 1) RETURNING "scheduling_booking"."id"; args=('Amanda Morrow', '2400 Old Denton Rd, Carrollton, TX 75006', datetime.date(2025, 10, 17), 2, 1); alias=default
[2025-09-30 22:17:06,022] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:17:06,131] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 98, '2400 Old Denton Rd, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(1, 98, '2400 Old Denton Rd, Carrollton, TX 75006'); alias=default
[2025-09-30 22:17:06,241] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 98, '2400 Old Denton Rd, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(2, 98, '2400 Old Denton Rd, Carrollton, TX 75006'); alias=default
[2025-09-30 22:17:06,366] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (4, 98, '2400 Old Denton Rd, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(4, 98, '2400 Old Denton Rd, Carrollton, TX 75006'); alias=default
[2025-09-30 22:17:06,475] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Luis Jenkins', '8000 Dallas Pkwy, Frisco, TX 75034', '2025-10-17'::date, 3, 1) RETURNING "scheduling_booking"."id"; args=('Luis Jenkins', '8000 Dallas Pkwy, Frisco, TX 75034', datetime.date(2025, 10, 17), 3, 1); alias=default
[2025-09-30 22:17:06,584] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:17:06,710] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (3, 99, '8000 Dallas Pkwy, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(3, 99, '8000 Dallas Pkwy, Frisco, TX 75034'); alias=default
[2025-09-30 22:17:06,824] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 99, '8000 Dallas Pkwy, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(2, 99, '8000 Dallas Pkwy, Frisco, TX 75034'); alias=default
[2025-09-30 22:17:06,929] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (4, 99, '8000 Dallas Pkwy, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(4, 99, '8000 Dallas Pkwy, Frisco, TX 75034'); alias=default
[2025-09-30 22:17:07,054] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Nicole Michael', '1500 Spring Creek Pkwy, Plano, TX 75074', '2025-10-17'::date, 4, 2) RETURNING "scheduling_booking"."id"; args=('Nicole Michael', '1500 Spring Creek Pkwy, Plano, TX 75074', datetime.date(2025, 10, 17), 4, 2); alias=default
[2025-09-30 22:17:07,163] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:17:07,272] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 100, '1500 Spring Creek Pkwy, Plano, TX 75074') RETURNING "scheduling_jobassignment"."id"; args=(9, 100, '1500 Spring Creek Pkwy, Plano, TX 75074'); alias=default
[2025-09-30 22:17:07,388] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (10, 100, '1500 Spring Creek Pkwy, Plano, TX 75074') RETURNING "scheduling_jobassignment"."id"; args=(10, 100, '1500 Spring Creek Pkwy, Plano, TX 75074'); alias=default
[2025-09-30 22:17:07,497] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (6, 100, '1500 Spring Creek Pkwy, Plano, TX 75074') RETURNING "scheduling_jobassignment"."id"; args=(6, 100, '1500 Spring Creek Pkwy, Plano, TX 75074'); alias=default
[2025-09-30 22:17:07,616] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jasmine Jones', '1100 Long Prairie Rd, Flower Mound, TX 75028', '2025-10-17'::date, 2, 3) RETURNING "scheduling_booking"."id"; args=('Jasmine Jones', '1100 Long Prairie Rd, Flower Mound, TX 75028', datetime.date(2025, 10, 17), 2, 3); alias=default
[2025-09-30 22:17:07,729] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:17:07,842] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 101, '1100 Long Prairie Rd, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(11, 101, '1100 Long Prairie Rd, Flower Mound, TX 75028'); alias=default
[2025-09-30 22:17:07,944] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 101, '1100 Long Prairie Rd, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(13, 101, '1100 Long Prairie Rd, Flower Mound, TX 75028'); alias=default
[2025-09-30 22:17:08,064] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Ross Alvarado', '2300 N Central Expy, Richardson, TX 75080', '2025-10-17'::date, 3, 3) RETURNING "scheduling_booking"."id"; args=('Ross Alvarado', '2300 N Central Expy, Richardson, TX 75080', datetime.date(2025, 10, 17), 3, 3); alias=default
[2025-09-30 22:17:08,163] DEBUG django.db.backends (0.094) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:17:08,286] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 102, '2300 N Central Expy, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(12, 102, '2300 N Central Expy, Richardson, TX 75080'); alias=default
[2025-09-30 22:17:08,397] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 102, '2300 N Central Expy, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(14, 102, '2300 N Central Expy, Richardson, TX 75080'); alias=default
[2025-09-30 22:17:08,495] DEBUG django.db.backends (0.094) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 102, '2300 N Central Expy, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(13, 102, '2300 N Central Expy, Richardson, TX 75080'); alias=default
[2025-09-30 22:17:08,618] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Abigail Hess', '500 W John Carpenter Fwy, Irving, TX 75039', '2025-10-18'::date, 1, 2) RETURNING "scheduling_booking"."id"; args=('Abigail Hess', '500 W John Carpenter Fwy, Irving, TX 75039', datetime.date(2025, 10, 18), 1, 2); alias=default
[2025-09-30 22:17:08,736] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:17:08,836] DEBUG django.db.backends (0.094) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (10, 103, '500 W John Carpenter Fwy, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(10, 103, '500 W John Carpenter Fwy, Irving, TX 75039'); alias=default
[2025-09-30 22:17:08,956] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 103, '500 W John Carpenter Fwy, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(7, 103, '500 W John Carpenter Fwy, Irving, TX 75039'); alias=default
[2025-09-30 22:17:09,077] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jenna Nunez', '1100 Long Prairie Rd, Flower Mound, TX 75028', '2025-10-18'::date, 3, 2) RETURNING "scheduling_booking"."id"; args=('Jenna Nunez', '1100 Long Prairie Rd, Flower Mound, TX 75028', datetime.date(2025, 10, 18), 3, 2); alias=default
[2025-09-30 22:17:09,190] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:17:09,303] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 104, '1100 Long Prairie Rd, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(8, 104, '1100 Long Prairie Rd, Flower Mound, TX 75028'); alias=default
[2025-09-30 22:17:09,413] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Daniel Figueroa', '2400 Old Denton Rd, Carrollton, TX 75006', '2025-10-18'::date, 4, 2) RETURNING "scheduling_booking"."id"; args=('Daniel Figueroa', '2400 Old Denton Rd, Carrollton, TX 75006', datetime.date(2025, 10, 18), 4, 2); alias=default
[2025-09-30 22:17:09,520] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:17:09,647] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 105, '2400 Old Denton Rd, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(9, 105, '2400 Old Denton Rd, Carrollton, TX 75006'); alias=default
[2025-09-30 22:17:09,757] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (10, 105, '2400 Old Denton Rd, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(10, 105, '2400 Old Denton Rd, Carrollton, TX 75006'); alias=default
[2025-09-30 22:17:09,867] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 105, '2400 Old Denton Rd, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(7, 105, '2400 Old Denton Rd, Carrollton, TX 75006'); alias=default
[2025-09-30 22:17:09,986] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Kenneth Rodriguez', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-18'::date, 3, 3) RETURNING "scheduling_booking"."id"; args=('Kenneth Rodriguez', '3500 Oak Lawn Ave, Dallas, TX 75219', datetime.date(2025, 10, 18), 3, 3); alias=default
[2025-09-30 22:17:10,086] DEBUG django.db.backends (0.094) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:17:10,194] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 106, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(13, 106, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 22:17:10,320] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 106, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(14, 106, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 22:17:10,429] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 106, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(15, 106, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 22:17:10,540] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Nicholas Shea', '8100 Preston Rd, Plano, TX 75024', '2025-10-18'::date, 4, 3) RETURNING "scheduling_booking"."id"; args=('Nicholas Shea', '8100 Preston Rd, Plano, TX 75024', datetime.date(2025, 10, 18), 4, 3); alias=default
[2025-09-30 22:17:10,652] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:17:10,756] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 107, '8100 Preston Rd, Plano, TX 75024') RETURNING "scheduling_jobassignment"."id"; args=(14, 107, '8100 Preston Rd, Plano, TX 75024'); alias=default
[2025-09-30 22:17:10,881] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Michael Moore', '400 W Campbell Rd, Richardson, TX 75080', '2025-10-19'::date, 1, 1) RETURNING "scheduling_booking"."id"; args=('Michael Moore', '400 W Campbell Rd, Richardson, TX 75080', datetime.date(2025, 10, 19), 1, 1); alias=default
[2025-09-30 22:17:10,991] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:17:11,101] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 108, '400 W Campbell Rd, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(1, 108, '400 W Campbell Rd, Richardson, TX 75080'); alias=default
[2025-09-30 22:17:11,210] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 108, '400 W Campbell Rd, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(5, 108, '400 W Campbell Rd, Richardson, TX 75080'); alias=default
[2025-09-30 22:17:11,320] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Ana Baker', '1900 E Belt Line Rd, Carrollton, TX 75006', '2025-10-19'::date, 2, 1) RETURNING "scheduling_booking"."id"; args=('Ana Baker', '1900 E Belt Line Rd, Carrollton, TX 75006', datetime.date(2025, 10, 19), 2, 1); alias=default
[2025-09-30 22:17:11,429] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:17:11,554] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 109, '1900 E Belt Line Rd, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(5, 109, '1900 E Belt Line Rd, Carrollton, TX 75006'); alias=default
[2025-09-30 22:17:11,663] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (4, 109, '1900 E Belt Line Rd, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(4, 109, '1900 E Belt Line Rd, Carrollton, TX 75006'); alias=default
[2025-09-30 22:17:11,772] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Rebecca Harmon', '8000 Dallas Pkwy, Frisco, TX 75034', '2025-10-19'::date, 3, 1) RETURNING "scheduling_booking"."id"; args=('Rebecca Harmon', '8000 Dallas Pkwy, Frisco, TX 75034', datetime.date(2025, 10, 19), 3, 1); alias=default
[2025-09-30 22:17:11,883] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:17:11,992] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 110, '8000 Dallas Pkwy, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(5, 110, '8000 Dallas Pkwy, Frisco, TX 75034'); alias=default
[2025-09-30 22:17:12,107] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 110, '8000 Dallas Pkwy, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(1, 110, '8000 Dallas Pkwy, Frisco, TX 75034'); alias=default
[2025-09-30 22:17:12,217] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (3, 110, '8000 Dallas Pkwy, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(3, 110, '8000 Dallas Pkwy, Frisco, TX 75034'); alias=default
[2025-09-30 22:17:12,337] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Heather Boone', '1000 Ballpark Way, Arlington, TX 76011', '2025-10-19'::date, 4, 1) RETURNING "scheduling_booking"."id"; args=('Heather Boone', '1000 Ballpark Way, Arlington, TX 76011', datetime.date(2025, 10, 19), 4, 1); alias=default
[2025-09-30 22:17:12,448] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:17:12,559] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 111, '1000 Ballpark Way, Arlington, TX 76011') RETURNING "scheduling_jobassignment"."id"; args=(1, 111, '1000 Ballpark Way, Arlington, TX 76011'); alias=default
[2025-09-30 22:17:12,688] DEBUG django.db.backends (0.140) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 111, '1000 Ballpark Way, Arlington, TX 76011') RETURNING "scheduling_jobassignment"."id"; args=(2, 111, '1000 Ballpark Way, Arlington, TX 76011'); alias=default
[2025-09-30 22:17:12,788] DEBUG django.db.backends (0.094) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Mrs. Kayla Petersen', '2201 E Road to Six Flags St, Arlington, TX 76011', '2025-10-19'::date, 2, 3) RETURNING "scheduling_booking"."id"; args=('Mrs. Kayla Petersen', '2201 E Road to Six Flags St, Arlington, TX 76011', datetime.date(2025, 10, 19), 2, 3); alias=default
[2025-09-30 22:17:12,905] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:17:13,007] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 112, '2201 E Road to Six Flags St, Arlington, TX 76011') RETURNING "scheduling_jobassignment"."id"; args=(11, 112, '2201 E Road to Six Flags St, Arlington, TX 76011'); alias=default
[2025-09-30 22:17:13,128] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 112, '2201 E Road to Six Flags St, Arlington, TX 76011') RETURNING "scheduling_jobassignment"."id"; args=(13, 112, '2201 E Road to Six Flags St, Arlington, TX 76011'); alias=default
[2025-09-30 22:17:13,241] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 112, '2201 E Road to Six Flags St, Arlington, TX 76011') RETURNING "scheduling_jobassignment"."id"; args=(14, 112, '2201 E Road to Six Flags St, Arlington, TX 76011'); alias=default
[2025-09-30 22:17:13,351] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Stacy Ferguson', '1100 Long Prairie Rd, Flower Mound, TX 75028', '2025-10-19'::date, 3, 3) RETURNING "scheduling_booking"."id"; args=('Stacy Ferguson', '1100 Long Prairie Rd, Flower Mound, TX 75028', datetime.date(2025, 10, 19), 3, 3); alias=default
[2025-09-30 22:17:13,475] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:17:13,586] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 113, '1100 Long Prairie Rd, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(11, 113, '1100 Long Prairie Rd, Flower Mound, TX 75028'); alias=default
[2025-09-30 22:17:13,700] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Mary Ryan', '1400 Pacific Ave, Dallas, TX 75202', '2025-10-19'::date, 4, 3) RETURNING "scheduling_booking"."id"; args=('Mary Ryan', '1400 Pacific Ave, Dallas, TX 75202', datetime.date(2025, 10, 19), 4, 3); alias=default
[2025-09-30 22:17:13,804] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:17:13,913] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 114, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(13, 114, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 22:17:14,022] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Tara Johnson', '1155 Union Cir, Denton, TX 76203', '2025-10-20'::date, 3, 1) RETURNING "scheduling_booking"."id"; args=('Tara Johnson', '1155 Union Cir, Denton, TX 76203', datetime.date(2025, 10, 20), 3, 1); alias=default
[2025-09-30 22:17:14,163] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:17:14,271] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 115, '1155 Union Cir, Denton, TX 76203') RETURNING "scheduling_jobassignment"."id"; args=(1, 115, '1155 Union Cir, Denton, TX 76203'); alias=default
[2025-09-30 22:17:14,382] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 115, '1155 Union Cir, Denton, TX 76203') RETURNING "scheduling_jobassignment"."id"; args=(2, 115, '1155 Union Cir, Denton, TX 76203'); alias=default
[2025-09-30 22:17:14,494] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Andre Roach', '500 W Hickory St, Denton, TX 76201', '2025-10-20'::date, 4, 1) RETURNING "scheduling_booking"."id"; args=('Andre Roach', '500 W Hickory St, Denton, TX 76201', datetime.date(2025, 10, 20), 4, 1); alias=default
[2025-09-30 22:17:14,621] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:17:14,734] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 116, '500 W Hickory St, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(1, 116, '500 W Hickory St, Denton, TX 76201'); alias=default
[2025-09-30 22:17:14,844] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Joshua Wright', '6000 Morriss Rd, Flower Mound, TX 75028', '2025-10-20'::date, 1, 2) RETURNING "scheduling_booking"."id"; args=('Joshua Wright', '6000 Morriss Rd, Flower Mound, TX 75028', datetime.date(2025, 10, 20), 1, 2); alias=default
[2025-09-30 22:17:14,944] DEBUG django.db.backends (0.093) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:17:15,068] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (10, 117, '6000 Morriss Rd, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(10, 117, '6000 Morriss Rd, Flower Mound, TX 75028'); alias=default
[2025-09-30 22:17:15,179] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (6, 117, '6000 Morriss Rd, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(6, 117, '6000 Morriss Rd, Flower Mound, TX 75028'); alias=default
[2025-09-30 22:17:15,290] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Megan Adams', '1400 Pacific Ave, Dallas, TX 75202', '2025-10-20'::date, 3, 2) RETURNING "scheduling_booking"."id"; args=('Megan Adams', '1400 Pacific Ave, Dallas, TX 75202', datetime.date(2025, 10, 20), 3, 2); alias=default
[2025-09-30 22:17:15,413] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:17:15,523] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 118, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(7, 118, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 22:17:15,632] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 118, '1400 Pacific Ave, Dallas, TX 75202') RETURNING "scheduling_jobassignment"."id"; args=(8, 118, '1400 Pacific Ave, Dallas, TX 75202'); alias=default
[2025-09-30 22:17:15,741] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Mallory Buck', '5151 N President George Bush Hwy, Garland, TX 75040', '2025-10-20'::date, 4, 2) RETURNING "scheduling_booking"."id"; args=('Mallory Buck', '5151 N President George Bush Hwy, Garland, TX 75040', datetime.date(2025, 10, 20), 4, 2); alias=default
[2025-09-30 22:17:15,851] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:17:15,975] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 119, '5151 N President George Bush Hwy, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(7, 119, '5151 N President George Bush Hwy, Garland, TX 75040'); alias=default
[2025-09-30 22:17:16,085] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 119, '5151 N President George Bush Hwy, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(8, 119, '5151 N President George Bush Hwy, Garland, TX 75040'); alias=default
[2025-09-30 22:17:16,539] DEBUG django.db.backends (0.453) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Lisa Ochoa', '3000 N Belt Line Rd, Irving, TX 75062', '2025-10-20'::date, 1, 3) RETURNING "scheduling_booking"."id"; args=('Lisa Ochoa', '3000 N Belt Line Rd, Irving, TX 75062', datetime.date(2025, 10, 20), 1, 3); alias=default
[2025-09-30 22:17:16,679] DEBUG django.db.backends (0.141) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:17:16,794] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 120, '3000 N Belt Line Rd, Irving, TX 75062') RETURNING "scheduling_jobassignment"."id"; args=(13, 120, '3000 N Belt Line Rd, Irving, TX 75062'); alias=default
[2025-09-30 22:17:16,907] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Aaron Taylor', '1200 E Spring Valley Rd, Richardson, TX 75081', '2025-10-20'::date, 4, 3) RETURNING "scheduling_booking"."id"; args=('Aaron Taylor', '1200 E Spring Valley Rd, Richardson, TX 75081', datetime.date(2025, 10, 20), 4, 3); alias=default
[2025-09-30 22:17:17,018] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:17:17,131] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 121, '1200 E Spring Valley Rd, Richardson, TX 75081') RETURNING "scheduling_jobassignment"."id"; args=(14, 121, '1200 E Spring Valley Rd, Richardson, TX 75081'); alias=default
[2025-09-30 22:17:17,241] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Benjamin Ortiz', '2300 N Central Expy, Richardson, TX 75080', '2025-10-21'::date, 1, 1) RETURNING "scheduling_booking"."id"; args=('Benjamin Ortiz', '2300 N Central Expy, Richardson, TX 75080', datetime.date(2025, 10, 21), 1, 1); alias=default
[2025-09-30 22:17:17,354] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:17:17,470] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (3, 122, '2300 N Central Expy, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(3, 122, '2300 N Central Expy, Richardson, TX 75080'); alias=default
[2025-09-30 22:17:17,584] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 122, '2300 N Central Expy, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(2, 122, '2300 N Central Expy, Richardson, TX 75080'); alias=default
[2025-09-30 22:17:17,699] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Adrian Montoya', '2201 E Road to Six Flags St, Arlington, TX 76011', '2025-10-21'::date, 4, 1) RETURNING "scheduling_booking"."id"; args=('Adrian Montoya', '2201 E Road to Six Flags St, Arlington, TX 76011', datetime.date(2025, 10, 21), 4, 1); alias=default
[2025-09-30 22:17:17,796] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:17:17,923] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 123, '2201 E Road to Six Flags St, Arlington, TX 76011') RETURNING "scheduling_jobassignment"."id"; args=(5, 123, '2201 E Road to Six Flags St, Arlington, TX 76011'); alias=default
[2025-09-30 22:17:18,037] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (3, 123, '2201 E Road to Six Flags St, Arlington, TX 76011') RETURNING "scheduling_jobassignment"."id"; args=(3, 123, '2201 E Road to Six Flags St, Arlington, TX 76011'); alias=default
[2025-09-30 22:17:18,146] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Christina Cook', '2300 N Central Expy, Richardson, TX 75080', '2025-10-21'::date, 2, 2) RETURNING "scheduling_booking"."id"; args=('Christina Cook', '2300 N Central Expy, Richardson, TX 75080', datetime.date(2025, 10, 21), 2, 2); alias=default
[2025-09-30 22:17:18,255] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:17:18,368] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 124, '2300 N Central Expy, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(8, 124, '2300 N Central Expy, Richardson, TX 75080'); alias=default
[2025-09-30 22:17:18,476] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Melissa Fields', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-21'::date, 3, 2) RETURNING "scheduling_booking"."id"; args=('Melissa Fields', '3900 Gaston Ave, Dallas, TX 75246', datetime.date(2025, 10, 21), 3, 2); alias=default
[2025-09-30 22:17:18,585] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:17:18,703] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 125, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(8, 125, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 22:17:18,816] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (6, 125, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(6, 125, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 22:17:18,929] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 125, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(9, 125, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 22:17:19,048] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Kevin Gutierrez', '400 W Campbell Rd, Richardson, TX 75080', '2025-10-21'::date, 4, 2) RETURNING "scheduling_booking"."id"; args=('Kevin Gutierrez', '400 W Campbell Rd, Richardson, TX 75080', datetime.date(2025, 10, 21), 4, 2); alias=default
[2025-09-30 22:17:19,162] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:17:19,270] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (10, 126, '400 W Campbell Rd, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(10, 126, '400 W Campbell Rd, Richardson, TX 75080'); alias=default
[2025-09-30 22:17:19,382] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Edward Roberts', '1000 Ballpark Way, Arlington, TX 76011', '2025-10-21'::date, 1, 3) RETURNING "scheduling_booking"."id"; args=('Edward Roberts', '1000 Ballpark Way, Arlington, TX 76011', datetime.date(2025, 10, 21), 1, 3); alias=default
[2025-09-30 22:17:19,502] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:17:19,615] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 127, '1000 Ballpark Way, Arlington, TX 76011') RETURNING "scheduling_jobassignment"."id"; args=(11, 127, '1000 Ballpark Way, Arlington, TX 76011'); alias=default
[2025-09-30 22:17:19,726] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 127, '1000 Ballpark Way, Arlington, TX 76011') RETURNING "scheduling_jobassignment"."id"; args=(15, 127, '1000 Ballpark Way, Arlington, TX 76011'); alias=default
[2025-09-30 22:17:19,835] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 127, '1000 Ballpark Way, Arlington, TX 76011') RETURNING "scheduling_jobassignment"."id"; args=(14, 127, '1000 Ballpark Way, Arlington, TX 76011'); alias=default
[2025-09-30 22:17:19,950] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Eric Moore', '2300 N Central Expy, Richardson, TX 75080', '2025-10-21'::date, 4, 3) RETURNING "scheduling_booking"."id"; args=('Eric Moore', '2300 N Central Expy, Richardson, TX 75080', datetime.date(2025, 10, 21), 4, 3); alias=default
[2025-09-30 22:17:20,064] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:17:20,171] DEBUG django.db.backends (0.094) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 128, '2300 N Central Expy, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(11, 128, '2300 N Central Expy, Richardson, TX 75080'); alias=default
[2025-09-30 22:17:20,290] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 128, '2300 N Central Expy, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(12, 128, '2300 N Central Expy, Richardson, TX 75080'); alias=default
[2025-09-30 22:17:20,403] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 128, '2300 N Central Expy, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(13, 128, '2300 N Central Expy, Richardson, TX 75080'); alias=default
[2025-09-30 22:17:20,507] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Johnathan Martin', '3500 Oak Lawn Ave, Dallas, TX 75219', '2025-10-22'::date, 2, 1) RETURNING "scheduling_booking"."id"; args=('Johnathan Martin', '3500 Oak Lawn Ave, Dallas, TX 75219', datetime.date(2025, 10, 22), 2, 1); alias=default
[2025-09-30 22:17:20,628] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:17:20,743] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (4, 129, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(4, 129, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 22:17:20,855] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 129, '3500 Oak Lawn Ave, Dallas, TX 75219') RETURNING "scheduling_jobassignment"."id"; args=(2, 129, '3500 Oak Lawn Ave, Dallas, TX 75219'); alias=default
[2025-09-30 22:17:20,967] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Laura Bird', '5600 Ross Ave, Dallas, TX 75206', '2025-10-22'::date, 4, 1) RETURNING "scheduling_booking"."id"; args=('Laura Bird', '5600 Ross Ave, Dallas, TX 75206', datetime.date(2025, 10, 22), 4, 1); alias=default
[2025-09-30 22:17:21,076] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:17:21,190] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (3, 130, '5600 Ross Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(3, 130, '5600 Ross Ave, Dallas, TX 75206'); alias=default
[2025-09-30 22:17:21,287] DEBUG django.db.backends (0.094) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 130, '5600 Ross Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(1, 130, '5600 Ross Ave, Dallas, TX 75206'); alias=default
[2025-09-30 22:17:21,412] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 130, '5600 Ross Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(5, 130, '5600 Ross Ave, Dallas, TX 75206'); alias=default
[2025-09-30 22:17:21,526] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Adam Gray', '6801 Gaylord Pkwy, Frisco, TX 75034', '2025-10-22'::date, 2, 2) RETURNING "scheduling_booking"."id"; args=('Adam Gray', '6801 Gaylord Pkwy, Frisco, TX 75034', datetime.date(2025, 10, 22), 2, 2); alias=default
[2025-09-30 22:17:21,632] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:17:21,755] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (6, 131, '6801 Gaylord Pkwy, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(6, 131, '6801 Gaylord Pkwy, Frisco, TX 75034'); alias=default
[2025-09-30 22:17:21,864] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Megan Sanchez', '3900 Gaston Ave, Dallas, TX 75246', '2025-10-23'::date, 2, 1) RETURNING "scheduling_booking"."id"; args=('Megan Sanchez', '3900 Gaston Ave, Dallas, TX 75246', datetime.date(2025, 10, 23), 2, 1); alias=default
[2025-09-30 22:17:21,972] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:17:22,103] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (4, 132, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(4, 132, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 22:17:22,212] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 132, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(5, 132, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 22:17:22,329] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 132, '3900 Gaston Ave, Dallas, TX 75246') RETURNING "scheduling_jobassignment"."id"; args=(2, 132, '3900 Gaston Ave, Dallas, TX 75246'); alias=default
[2025-09-30 22:17:22,428] DEBUG django.db.backends (0.094) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jeremy Nolan', '6000 Morriss Rd, Flower Mound, TX 75028', '2025-10-23'::date, 1, 2) RETURNING "scheduling_booking"."id"; args=('Jeremy Nolan', '6000 Morriss Rd, Flower Mound, TX 75028', datetime.date(2025, 10, 23), 1, 2); alias=default
[2025-09-30 22:17:22,554] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:17:22,669] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 133, '6000 Morriss Rd, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(8, 133, '6000 Morriss Rd, Flower Mound, TX 75028'); alias=default
[2025-09-30 22:17:22,790] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Debra Beltran', '500 W Hickory St, Denton, TX 76201', '2025-10-23'::date, 2, 2) RETURNING "scheduling_booking"."id"; args=('Debra Beltran', '500 W Hickory St, Denton, TX 76201', datetime.date(2025, 10, 23), 2, 2); alias=default
[2025-09-30 22:17:22,906] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:17:23,017] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (10, 134, '500 W Hickory St, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(10, 134, '500 W Hickory St, Denton, TX 76201'); alias=default
[2025-09-30 22:17:23,132] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 134, '500 W Hickory St, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(7, 134, '500 W Hickory St, Denton, TX 76201'); alias=default
[2025-09-30 22:17:23,245] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Shannon Foster', '400 W Campbell Rd, Richardson, TX 75080', '2025-10-23'::date, 3, 2) RETURNING "scheduling_booking"."id"; args=('Shannon Foster', '400 W Campbell Rd, Richardson, TX 75080', datetime.date(2025, 10, 23), 3, 2); alias=default
[2025-09-30 22:17:23,360] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:17:23,472] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 135, '400 W Campbell Rd, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(7, 135, '400 W Campbell Rd, Richardson, TX 75080'); alias=default
[2025-09-30 22:17:23,573] DEBUG django.db.backends (0.093) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jamie Wells', '1000 Ballpark Way, Arlington, TX 76011', '2025-10-23'::date, 1, 3) RETURNING "scheduling_booking"."id"; args=('Jamie Wells', '1000 Ballpark Way, Arlington, TX 76011', datetime.date(2025, 10, 23), 1, 3); alias=default
[2025-09-30 22:17:23,694] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:17:23,804] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 136, '1000 Ballpark Way, Arlington, TX 76011') RETURNING "scheduling_jobassignment"."id"; args=(11, 136, '1000 Ballpark Way, Arlington, TX 76011'); alias=default
[2025-09-30 22:17:23,920] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Wesley Moore', '4200 Broadway Blvd, Garland, TX 75043', '2025-10-23'::date, 2, 3) RETURNING "scheduling_booking"."id"; args=('Wesley Moore', '4200 Broadway Blvd, Garland, TX 75043', datetime.date(2025, 10, 23), 2, 3); alias=default
[2025-09-30 22:17:24,022] DEBUG django.db.backends (0.093) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:17:24,132] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 137, '4200 Broadway Blvd, Garland, TX 75043') RETURNING "scheduling_jobassignment"."id"; args=(13, 137, '4200 Broadway Blvd, Garland, TX 75043'); alias=default
[2025-09-30 22:17:24,254] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 137, '4200 Broadway Blvd, Garland, TX 75043') RETURNING "scheduling_jobassignment"."id"; args=(15, 137, '4200 Broadway Blvd, Garland, TX 75043'); alias=default
[2025-09-30 22:17:24,369] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Shannon Hudson', '300 W Abram St, Arlington, TX 76010', '2025-10-24'::date, 2, 1) RETURNING "scheduling_booking"."id"; args=('Shannon Hudson', '300 W Abram St, Arlington, TX 76010', datetime.date(2025, 10, 24), 2, 1); alias=default
[2025-09-30 22:17:24,482] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:17:24,594] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (3, 138, '300 W Abram St, Arlington, TX 76010') RETURNING "scheduling_jobassignment"."id"; args=(3, 138, '300 W Abram St, Arlington, TX 76010'); alias=default
[2025-09-30 22:17:24,702] DEBUG django.db.backends (0.093) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 138, '300 W Abram St, Arlington, TX 76010') RETURNING "scheduling_jobassignment"."id"; args=(2, 138, '300 W Abram St, Arlington, TX 76010'); alias=default
[2025-09-30 22:17:24,811] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 138, '300 W Abram St, Arlington, TX 76010') RETURNING "scheduling_jobassignment"."id"; args=(5, 138, '300 W Abram St, Arlington, TX 76010'); alias=default
[2025-09-30 22:17:24,929] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Justin Smith', '8000 Dallas Pkwy, Frisco, TX 75034', '2025-10-25'::date, 1, 1) RETURNING "scheduling_booking"."id"; args=('Justin Smith', '8000 Dallas Pkwy, Frisco, TX 75034', datetime.date(2025, 10, 25), 1, 1); alias=default
[2025-09-30 22:17:25,038] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:17:25,155] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 139, '8000 Dallas Pkwy, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(2, 139, '8000 Dallas Pkwy, Frisco, TX 75034'); alias=default
[2025-09-30 22:17:25,256] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (4, 139, '8000 Dallas Pkwy, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(4, 139, '8000 Dallas Pkwy, Frisco, TX 75034'); alias=default
[2025-09-30 22:17:25,373] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 139, '8000 Dallas Pkwy, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(1, 139, '8000 Dallas Pkwy, Frisco, TX 75034'); alias=default
[2025-09-30 22:17:25,486] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Alexander Meyers', '400 W Campbell Rd, Richardson, TX 75080', '2025-10-25'::date, 3, 1) RETURNING "scheduling_booking"."id"; args=('Alexander Meyers', '400 W Campbell Rd, Richardson, TX 75080', datetime.date(2025, 10, 25), 3, 1); alias=default
[2025-09-30 22:17:25,585] DEBUG django.db.backends (0.094) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:17:25,694] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 140, '400 W Campbell Rd, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(2, 140, '400 W Campbell Rd, Richardson, TX 75080'); alias=default
[2025-09-30 22:17:25,821] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Debbie Reyes', '5806 Birchbrook Dr, Plano, TX 75093', '2025-10-25'::date, 1, 3) RETURNING "scheduling_booking"."id"; args=('Debbie Reyes', '5806 Birchbrook Dr, Plano, TX 75093', datetime.date(2025, 10, 25), 1, 3); alias=default
[2025-09-30 22:17:25,920] DEBUG django.db.backends (0.094) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:17:26,038] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 141, '5806 Birchbrook Dr, Plano, TX 75093') RETURNING "scheduling_jobassignment"."id"; args=(13, 141, '5806 Birchbrook Dr, Plano, TX 75093'); alias=default
[2025-09-30 22:17:26,147] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jeremy Butler', '300 W Abram St, Arlington, TX 76010', '2025-10-25'::date, 2, 3) RETURNING "scheduling_booking"."id"; args=('Jeremy Butler', '300 W Abram St, Arlington, TX 76010', datetime.date(2025, 10, 25), 2, 3); alias=default
[2025-09-30 22:17:26,257] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:17:26,366] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 142, '300 W Abram St, Arlington, TX 76010') RETURNING "scheduling_jobassignment"."id"; args=(12, 142, '300 W Abram St, Arlington, TX 76010'); alias=default
[2025-09-30 22:17:26,485] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 142, '300 W Abram St, Arlington, TX 76010') RETURNING "scheduling_jobassignment"."id"; args=(15, 142, '300 W Abram St, Arlington, TX 76010'); alias=default
[2025-09-30 22:17:26,585] DEBUG django.db.backends (0.094) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 142, '300 W Abram St, Arlington, TX 76010') RETURNING "scheduling_jobassignment"."id"; args=(11, 142, '300 W Abram St, Arlington, TX 76010'); alias=default
[2025-09-30 22:17:26,741] DEBUG django.db.backends (0.140) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Cynthia Green', '500 W Hickory St, Denton, TX 76201', '2025-10-25'::date, 4, 3) RETURNING "scheduling_booking"."id"; args=('Cynthia Green', '500 W Hickory St, Denton, TX 76201', datetime.date(2025, 10, 25), 4, 3); alias=default
[2025-09-30 22:17:26,850] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:17:26,955] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 143, '500 W Hickory St, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(14, 143, '500 W Hickory St, Denton, TX 76201'); alias=default
[2025-09-30 22:17:27,070] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 143, '500 W Hickory St, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(15, 143, '500 W Hickory St, Denton, TX 76201'); alias=default
[2025-09-30 22:17:27,179] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (13, 143, '500 W Hickory St, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(13, 143, '500 W Hickory St, Denton, TX 76201'); alias=default
[2025-09-30 22:17:27,288] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Lisa Solis', '400 W Campbell Rd, Richardson, TX 75080', '2025-10-26'::date, 4, 1) RETURNING "scheduling_booking"."id"; args=('Lisa Solis', '400 W Campbell Rd, Richardson, TX 75080', datetime.date(2025, 10, 26), 4, 1); alias=default
[2025-09-30 22:17:27,414] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:17:27,525] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 144, '400 W Campbell Rd, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(1, 144, '400 W Campbell Rd, Richardson, TX 75080'); alias=default
[2025-09-30 22:17:27,631] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 144, '400 W Campbell Rd, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(2, 144, '400 W Campbell Rd, Richardson, TX 75080'); alias=default
[2025-09-30 22:17:27,741] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (3, 144, '400 W Campbell Rd, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(3, 144, '400 W Campbell Rd, Richardson, TX 75080'); alias=default
[2025-09-30 22:17:27,865] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Craig Swanson', '3200 W Irving Blvd, Irving, TX 75061', '2025-10-26'::date, 2, 2) RETURNING "scheduling_booking"."id"; args=('Craig Swanson', '3200 W Irving Blvd, Irving, TX 75061', datetime.date(2025, 10, 26), 2, 2); alias=default
[2025-09-30 22:17:27,960] DEBUG django.db.backends (0.094) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:17:28,085] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (6, 145, '3200 W Irving Blvd, Irving, TX 75061') RETURNING "scheduling_jobassignment"."id"; args=(6, 145, '3200 W Irving Blvd, Irving, TX 75061'); alias=default
[2025-09-30 22:17:28,198] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 145, '3200 W Irving Blvd, Irving, TX 75061') RETURNING "scheduling_jobassignment"."id"; args=(7, 145, '3200 W Irving Blvd, Irving, TX 75061'); alias=default
[2025-09-30 22:17:28,311] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Michael Gates', '1900 E Belt Line Rd, Carrollton, TX 75006', '2025-10-26'::date, 2, 3) RETURNING "scheduling_booking"."id"; args=('Michael Gates', '1900 E Belt Line Rd, Carrollton, TX 75006', datetime.date(2025, 10, 26), 2, 3); alias=default
[2025-09-30 22:17:28,413] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:17:28,537] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 146, '1900 E Belt Line Rd, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(14, 146, '1900 E Belt Line Rd, Carrollton, TX 75006'); alias=default
[2025-09-30 22:17:28,639] DEBUG django.db.backends (0.094) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 146, '1900 E Belt Line Rd, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(11, 146, '1900 E Belt Line Rd, Carrollton, TX 75006'); alias=default
[2025-09-30 22:17:28,757] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 146, '1900 E Belt Line Rd, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(15, 146, '1900 E Belt Line Rd, Carrollton, TX 75006'); alias=default
[2025-09-30 22:17:28,866] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Anna Dyer', '5600 Ross Ave, Dallas, TX 75206', '2025-10-26'::date, 3, 3) RETURNING "scheduling_booking"."id"; args=('Anna Dyer', '5600 Ross Ave, Dallas, TX 75206', datetime.date(2025, 10, 26), 3, 3); alias=default
[2025-09-30 22:17:28,975] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:17:29,087] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 147, '5600 Ross Ave, Dallas, TX 75206') RETURNING "scheduling_jobassignment"."id"; args=(12, 147, '5600 Ross Ave, Dallas, TX 75206'); alias=default
[2025-09-30 22:17:29,194] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Donna Murphy', '500 W Hickory St, Denton, TX 76201', '2025-10-26'::date, 4, 3) RETURNING "scheduling_booking"."id"; args=('Donna Murphy', '500 W Hickory St, Denton, TX 76201', datetime.date(2025, 10, 26), 4, 3); alias=default
[2025-09-30 22:17:29,319] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:17:29,428] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 148, '500 W Hickory St, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(12, 148, '500 W Hickory St, Denton, TX 76201'); alias=default
[2025-09-30 22:17:29,538] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 148, '500 W Hickory St, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(15, 148, '500 W Hickory St, Denton, TX 76201'); alias=default
[2025-09-30 22:17:29,648] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 148, '500 W Hickory St, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(14, 148, '500 W Hickory St, Denton, TX 76201'); alias=default
[2025-09-30 22:17:29,757] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Grant Martin', '2200 Cross Timbers Rd, Flower Mound, TX 75028', '2025-10-27'::date, 3, 1) RETURNING "scheduling_booking"."id"; args=('Grant Martin', '2200 Cross Timbers Rd, Flower Mound, TX 75028', datetime.date(2025, 10, 27), 3, 1); alias=default
[2025-09-30 22:17:29,866] DEBUG django.db.backends (0.094) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:17:29,991] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 149, '2200 Cross Timbers Rd, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(2, 149, '2200 Cross Timbers Rd, Flower Mound, TX 75028'); alias=default
[2025-09-30 22:17:30,107] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (4, 149, '2200 Cross Timbers Rd, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(4, 149, '2200 Cross Timbers Rd, Flower Mound, TX 75028'); alias=default
[2025-09-30 22:17:30,210] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (5, 149, '2200 Cross Timbers Rd, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(5, 149, '2200 Cross Timbers Rd, Flower Mound, TX 75028'); alias=default
[2025-09-30 22:17:30,319] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Tammy Cortez', '5806 Birchbrook Dr, Plano, TX 75093', '2025-10-27'::date, 4, 1) RETURNING "scheduling_booking"."id"; args=('Tammy Cortez', '5806 Birchbrook Dr, Plano, TX 75093', datetime.date(2025, 10, 27), 4, 1); alias=default
[2025-09-30 22:17:30,444] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 1; args=(1,); alias=default
[2025-09-30 22:17:30,554] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (2, 150, '5806 Birchbrook Dr, Plano, TX 75093') RETURNING "scheduling_jobassignment"."id"; args=(2, 150, '5806 Birchbrook Dr, Plano, TX 75093'); alias=default
[2025-09-30 22:17:30,655] DEBUG django.db.backends (0.093) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (4, 150, '5806 Birchbrook Dr, Plano, TX 75093') RETURNING "scheduling_jobassignment"."id"; args=(4, 150, '5806 Birchbrook Dr, Plano, TX 75093'); alias=default
[2025-09-30 22:17:30,764] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (1, 150, '5806 Birchbrook Dr, Plano, TX 75093') RETURNING "scheduling_jobassignment"."id"; args=(1, 150, '5806 Birchbrook Dr, Plano, TX 75093'); alias=default
[2025-09-30 22:17:30,889] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Nathan Ramos', '1010 E Trinity Mills Rd, Carrollton, TX 75006', '2025-10-27'::date, 1, 2) RETURNING "scheduling_booking"."id"; args=('Nathan Ramos', '1010 E Trinity Mills Rd, Carrollton, TX 75006', datetime.date(2025, 10, 27), 1, 2); alias=default
[2025-09-30 22:17:30,991] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:17:31,116] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (10, 151, '1010 E Trinity Mills Rd, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(10, 151, '1010 E Trinity Mills Rd, Carrollton, TX 75006'); alias=default
[2025-09-30 22:17:31,236] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 151, '1010 E Trinity Mills Rd, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(9, 151, '1010 E Trinity Mills Rd, Carrollton, TX 75006'); alias=default
[2025-09-30 22:17:31,350] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 151, '1010 E Trinity Mills Rd, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(7, 151, '1010 E Trinity Mills Rd, Carrollton, TX 75006'); alias=default
[2025-09-30 22:17:31,466] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Diana Carroll', '8100 Preston Rd, Plano, TX 75024', '2025-10-27'::date, 2, 2) RETURNING "scheduling_booking"."id"; args=('Diana Carroll', '8100 Preston Rd, Plano, TX 75024', datetime.date(2025, 10, 27), 2, 2); alias=default
[2025-09-30 22:17:31,577] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:17:31,689] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (10, 152, '8100 Preston Rd, Plano, TX 75024') RETURNING "scheduling_jobassignment"."id"; args=(10, 152, '8100 Preston Rd, Plano, TX 75024'); alias=default
[2025-09-30 22:17:31,798] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 152, '8100 Preston Rd, Plano, TX 75024') RETURNING "scheduling_jobassignment"."id"; args=(7, 152, '8100 Preston Rd, Plano, TX 75024'); alias=default
[2025-09-30 22:17:31,911] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Rebecca Blankenship', '1500 Spring Creek Pkwy, Plano, TX 75074', '2025-10-27'::date, 4, 2) RETURNING "scheduling_booking"."id"; args=('Rebecca Blankenship', '1500 Spring Creek Pkwy, Plano, TX 75074', datetime.date(2025, 10, 27), 4, 2); alias=default
[2025-09-30 22:17:32,024] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 2; args=(2,); alias=default
[2025-09-30 22:17:32,138] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (9, 153, '1500 Spring Creek Pkwy, Plano, TX 75074') RETURNING "scheduling_jobassignment"."id"; args=(9, 153, '1500 Spring Creek Pkwy, Plano, TX 75074'); alias=default
[2025-09-30 22:17:32,238] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (7, 153, '1500 Spring Creek Pkwy, Plano, TX 75074') RETURNING "scheduling_jobassignment"."id"; args=(7, 153, '1500 Spring Creek Pkwy, Plano, TX 75074'); alias=default
[2025-09-30 22:17:32,360] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (8, 153, '1500 Spring Creek Pkwy, Plano, TX 75074') RETURNING "scheduling_jobassignment"."id"; args=(8, 153, '1500 Spring Creek Pkwy, Plano, TX 75074'); alias=default
[2025-09-30 22:17:32,473] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Susan Williams', '1155 Union Cir, Denton, TX 76203', '2025-10-27'::date, 1, 3) RETURNING "scheduling_booking"."id"; args=('Susan Williams', '1155 Union Cir, Denton, TX 76203', datetime.date(2025, 10, 27), 1, 3); alias=default
[2025-09-30 22:17:32,571] DEBUG django.db.backends (0.093) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:17:32,699] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (14, 154, '1155 Union Cir, Denton, TX 76203') RETURNING "scheduling_jobassignment"."id"; args=(14, 154, '1155 Union Cir, Denton, TX 76203'); alias=default
[2025-09-30 22:17:32,806] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Erica Curry', '3000 N Belt Line Rd, Irving, TX 75062', '2025-10-27'::date, 3, 3) RETURNING "scheduling_booking"."id"; args=('Erica Curry', '3000 N Belt Line Rd, Irving, TX 75062', datetime.date(2025, 10, 27), 3, 3); alias=default
[2025-09-30 22:17:32,922] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 3; args=(3,); alias=default
[2025-09-30 22:17:33,041] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (15, 155, '3000 N Belt Line Rd, Irving, TX 75062') RETURNING "scheduling_jobassignment"."id"; args=(15, 155, '3000 N Belt Line Rd, Irving, TX 75062'); alias=default
[2025-09-30 22:17:33,154] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (12, 155, '3000 N Belt Line Rd, Irving, TX 75062') RETURNING "scheduling_jobassignment"."id"; args=(12, 155, '3000 N Belt Line Rd, Irving, TX 75062'); alias=default
[2025-09-30 22:17:33,255] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (11, 155, '3000 N Belt Line Rd, Irving, TX 75062') RETURNING "scheduling_jobassignment"."id"; args=(11, 155, '3000 N Belt Line Rd, Irving, TX 75062'); alias=default
[2025-09-30 22:36:21,350] DEBUG django.db.backends (0.157) SELECT COUNT(*) AS "__count" FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-30 22:36:21,473] DEBUG django.db.backends (0.125) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC LIMIT 5; args=(); alias=default
[2025-09-30 22:44:49,371] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 22:44:49,610] DEBUG django.db.backends (0.250) DELETE FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-30 22:44:49,710] DEBUG django.db.backends (0.094) COMMIT; args=None; alias=default
[2025-09-30 22:54:08,051] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 22:54:08,281] DEBUG django.db.backends (0.234) DELETE FROM "customers_registeredcustomer"; args=(); alias=default
[2025-09-30 22:54:08,399] DEBUG django.db.backends (0.109) COMMIT; args=None; alias=default
[2025-09-30 22:54:08,864] DEBUG django.db.backends (0.469) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('8fe4cb80-8af5-4b59-8fef-46aed3a08aab', 'Rose', 'Lewis', '485 Brooke Inlet', 'Irving', 'TX', '75039', '+1-478-355-1537x11265', 'kelseytaylor@example.com', '2025-09-30 20:54:08.400855+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('8fe4cb80-8af5-4b59-8fef-46aed3a08aab', 'Rose', 'Lewis', '485 Brooke Inlet', 'Irving', 'TX', '75039', '+1-478-355-1537x11265', 'kelseytaylor@example.com', datetime.datetime(2025, 9, 30, 20, 54, 8, 400855, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:08,983] DEBUG django.db.backends (0.125) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('7e1bfb8e-5dbc-4177-bb54-4c47aca04bf6', 'Zachary', 'Burke', '84143 Sherri Parkway', 'Richardson', 'TX', '75080', '001-581-856-9999', 'houseeddie@example.net', '2025-09-30 20:54:08.864659+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('7e1bfb8e-5dbc-4177-bb54-4c47aca04bf6', 'Zachary', 'Burke', '84143 Sherri Parkway', 'Richardson', 'TX', '75080', '001-581-856-9999', 'houseeddie@example.net', datetime.datetime(2025, 9, 30, 20, 54, 8, 864659, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:09,083] DEBUG django.db.backends (0.094) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('7af66f0d-fa45-4936-ac2c-ce3a4760c524', 'Lauren', 'Williams', '880 Brent Mountain', 'Frisco', 'TX', '75034', '+1-989-395-5681', 'yterry@example.net', '2025-09-30 20:54:08.984763+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('7af66f0d-fa45-4936-ac2c-ce3a4760c524', 'Lauren', 'Williams', '880 Brent Mountain', 'Frisco', 'TX', '75034', '+1-989-395-5681', 'yterry@example.net', datetime.datetime(2025, 9, 30, 20, 54, 8, 984763, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:09,192] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('ba92ffee-bcd2-461a-990d-7758dc65579a', 'Janet', 'Vang', '701 Christian Alley Suite 574', 'Flower Mound', 'TX', '75028', '3356771220', 'lopezlisa@example.com', '2025-09-30 20:54:09.083964+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('ba92ffee-bcd2-461a-990d-7758dc65579a', 'Janet', 'Vang', '701 Christian Alley Suite 574', 'Flower Mound', 'TX', '75028', '3356771220', 'lopezlisa@example.com', datetime.datetime(2025, 9, 30, 20, 54, 9, 83964, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:09,299] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('49859a63-ae08-4d76-a973-8559834a3fe4', 'Heather', 'Aguirre', '53569 Strong Village Apt. 087', 'Carrollton', 'TX', '75006', '001-623-382-8423x469', 'danielle59@example.net', '2025-09-30 20:54:09.192994+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('49859a63-ae08-4d76-a973-8559834a3fe4', 'Heather', 'Aguirre', '53569 Strong Village Apt. 087', 'Carrollton', 'TX', '75006', '001-623-382-8423x469', 'danielle59@example.net', datetime.datetime(2025, 9, 30, 20, 54, 9, 192994, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:09,412] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('14a9d6b8-14b5-4c99-ac34-38036868f280', 'Kristen', 'Arroyo', '5885 Janice Hill', 'Flower Mound', 'TX', '75028', '582.565.1335x772', 'bryan98@example.com', '2025-09-30 20:54:09.299939+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('14a9d6b8-14b5-4c99-ac34-38036868f280', 'Kristen', 'Arroyo', '5885 Janice Hill', 'Flower Mound', 'TX', '75028', '582.565.1335x772', 'bryan98@example.com', datetime.datetime(2025, 9, 30, 20, 54, 9, 299939, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:09,521] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('4dfcfe39-1ec3-467a-a556-9651eea7ff76', 'Jason', 'Patel', '3066 Carrie Roads', 'Denton', 'TX', '76201', '815.453.4882x41423', 'karenhall@example.org', '2025-09-30 20:54:09.412589+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('4dfcfe39-1ec3-467a-a556-9651eea7ff76', 'Jason', 'Patel', '3066 Carrie Roads', 'Denton', 'TX', '76201', '815.453.4882x41423', 'karenhall@example.org', datetime.datetime(2025, 9, 30, 20, 54, 9, 412589, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:09,630] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('159bf8d9-26d3-4983-b138-57b8fccf8081', 'Megan', 'Morgan', '9854 Thomas Squares Suite 818', 'Garland', 'TX', '75040', '(507)830-2557', 'david51@example.org', '2025-09-30 20:54:09.521200+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('159bf8d9-26d3-4983-b138-57b8fccf8081', 'Megan', 'Morgan', '9854 Thomas Squares Suite 818', 'Garland', 'TX', '75040', '(507)830-2557', 'david51@example.org', datetime.datetime(2025, 9, 30, 20, 54, 9, 521200, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:09,740] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('3a91737a-7ea3-4b88-9d2f-ae0b089315c2', 'Aaron', 'Henry', '95934 Williams Islands', 'Flower Mound', 'TX', '75028', '(510)940-9721x364', 'hannahsmith@example.net', '2025-09-30 20:54:09.630613+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('3a91737a-7ea3-4b88-9d2f-ae0b089315c2', 'Aaron', 'Henry', '95934 Williams Islands', 'Flower Mound', 'TX', '75028', '(510)940-9721x364', 'hannahsmith@example.net', datetime.datetime(2025, 9, 30, 20, 54, 9, 630613, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:09,848] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('2d915b86-3431-420d-83ce-142629cb9f3d', 'Sean', 'Garza', '452 Peter Ford Apt. 636', 'Frisco', 'TX', '75034', '+1-421-273-3614', 'lindadaniels@example.com', '2025-09-30 20:54:09.740028+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('2d915b86-3431-420d-83ce-142629cb9f3d', 'Sean', 'Garza', '452 Peter Ford Apt. 636', 'Frisco', 'TX', '75034', '+1-421-273-3614', 'lindadaniels@example.com', datetime.datetime(2025, 9, 30, 20, 54, 9, 740028, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:09,965] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('2cfdeca8-9d0f-4156-8857-53dc8895c0fa', 'Donna', 'Edwards', '62210 Sanchez Forges Apt. 275', 'Dallas', 'TX', '75201', '960.796.6048', 'adam20@example.net', '2025-09-30 20:54:09.848795+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('2cfdeca8-9d0f-4156-8857-53dc8895c0fa', 'Donna', 'Edwards', '62210 Sanchez Forges Apt. 275', 'Dallas', 'TX', '75201', '960.796.6048', 'adam20@example.net', datetime.datetime(2025, 9, 30, 20, 54, 9, 848795, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:10,068] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('8ff679dc-212c-4ebb-8f58-90cf9ff076e0', 'Joseph', 'Baldwin', '5967 Sawyer Walks', 'Arlington', 'TX', '76010', '433.933.9514', 'shane95@example.org', '2025-09-30 20:54:09.966129+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('8ff679dc-212c-4ebb-8f58-90cf9ff076e0', 'Joseph', 'Baldwin', '5967 Sawyer Walks', 'Arlington', 'TX', '76010', '433.933.9514', 'shane95@example.org', datetime.datetime(2025, 9, 30, 20, 54, 9, 966129, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:10,177] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('9bfe538f-ad26-4303-9a44-4b5e1109c0a6', 'Cynthia', 'Sanders', '8413 Leslie Underpass Suite 767', 'Flower Mound', 'TX', '75028', '480.341.1276x170', 'zduke@example.net', '2025-09-30 20:54:10.068270+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('9bfe538f-ad26-4303-9a44-4b5e1109c0a6', 'Cynthia', 'Sanders', '8413 Leslie Underpass Suite 767', 'Flower Mound', 'TX', '75028', '480.341.1276x170', 'zduke@example.net', datetime.datetime(2025, 9, 30, 20, 54, 10, 68270, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:10,287] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('6136473b-1db5-414d-afa8-7f163c3da3e4', 'Kristen', 'Mitchell', '21808 Carla Locks Suite 538', 'Garland', 'TX', '75040', '+1-822-918-0892x09019', 'awilson@example.net', '2025-09-30 20:54:10.177699+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('6136473b-1db5-414d-afa8-7f163c3da3e4', 'Kristen', 'Mitchell', '21808 Carla Locks Suite 538', 'Garland', 'TX', '75040', '+1-822-918-0892x09019', 'awilson@example.net', datetime.datetime(2025, 9, 30, 20, 54, 10, 177699, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:10,396] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('54a4a741-1490-4724-991b-73bdbd29736e', 'Justin', 'Carter', '584 Adams Forges Apt. 946', 'Richardson', 'TX', '75080', '(518)556-3250x716', 'zburnett@example.net', '2025-09-30 20:54:10.287357+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('54a4a741-1490-4724-991b-73bdbd29736e', 'Justin', 'Carter', '584 Adams Forges Apt. 946', 'Richardson', 'TX', '75080', '(518)556-3250x716', 'zburnett@example.net', datetime.datetime(2025, 9, 30, 20, 54, 10, 287357, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:10,514] DEBUG django.db.backends (0.125) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('e8252208-3aed-476a-b247-2dc6b7413ddd', 'Christopher', 'Thomas', '8930 Jennifer Fort Apt. 925', 'Irving', 'TX', '75039', '8054411072', 'mmartin@example.org', '2025-09-30 20:54:10.396326+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('e8252208-3aed-476a-b247-2dc6b7413ddd', 'Christopher', 'Thomas', '8930 Jennifer Fort Apt. 925', 'Irving', 'TX', '75039', '8054411072', 'mmartin@example.org', datetime.datetime(2025, 9, 30, 20, 54, 10, 396326, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:10,615] DEBUG django.db.backends (0.094) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('1ce75ca0-d3ed-443f-82f3-41d249445b9c', 'Gwendolyn', 'Pope', '766 Joshua Union', 'Denton', 'TX', '76201', '447-417-9020', 'gallen@example.net', '2025-09-30 20:54:10.515559+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('1ce75ca0-d3ed-443f-82f3-41d249445b9c', 'Gwendolyn', 'Pope', '766 Joshua Union', 'Denton', 'TX', '76201', '447-417-9020', 'gallen@example.net', datetime.datetime(2025, 9, 30, 20, 54, 10, 515559, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:10,724] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('a9cc474c-83f1-44d5-b98f-8be7dca71968', 'Robin', 'Haley', '24305 Angela Mount', 'Denton', 'TX', '76201', '001-994-753-3380', 'kellerpaul@example.com', '2025-09-30 20:54:10.615862+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('a9cc474c-83f1-44d5-b98f-8be7dca71968', 'Robin', 'Haley', '24305 Angela Mount', 'Denton', 'TX', '76201', '001-994-753-3380', 'kellerpaul@example.com', datetime.datetime(2025, 9, 30, 20, 54, 10, 615862, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:10,835] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('21136d4c-ed6c-4d8d-9e92-3553295a4d68', 'Brittany', 'Harris', '427 Amanda Pine', 'Garland', 'TX', '75040', '+1-666-914-7358x61851', 'ucombs@example.org', '2025-09-30 20:54:10.724935+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('21136d4c-ed6c-4d8d-9e92-3553295a4d68', 'Brittany', 'Harris', '427 Amanda Pine', 'Garland', 'TX', '75040', '+1-666-914-7358x61851', 'ucombs@example.org', datetime.datetime(2025, 9, 30, 20, 54, 10, 724935, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:10,943] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('89604c2c-917c-40f4-b299-47aa6e948e19', 'John', 'Williams', '5102 Malone Pines Suite 986', 'Plano', 'TX', '75093', '4978843785', 'isolomon@example.org', '2025-09-30 20:54:10.835168+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('89604c2c-917c-40f4-b299-47aa6e948e19', 'John', 'Williams', '5102 Malone Pines Suite 986', 'Plano', 'TX', '75093', '4978843785', 'isolomon@example.org', datetime.datetime(2025, 9, 30, 20, 54, 10, 835168, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:11,052] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('016580f9-cf26-41dc-89d3-ce512b067ef9', 'Christina', 'Santos', '182 Cynthia Fields Suite 995', 'Frisco', 'TX', '75034', '684-940-8977', 'michael44@example.net', '2025-09-30 20:54:10.943165+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('016580f9-cf26-41dc-89d3-ce512b067ef9', 'Christina', 'Santos', '182 Cynthia Fields Suite 995', 'Frisco', 'TX', '75034', '684-940-8977', 'michael44@example.net', datetime.datetime(2025, 9, 30, 20, 54, 10, 943165, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:11,161] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('dccb1481-cb89-4cd5-b4d7-d4cb70a9531f', 'Dawn', 'Kelley', '169 Brittany Neck', 'Flower Mound', 'TX', '75028', '(586)954-0310', 'vlane@example.net', '2025-09-30 20:54:11.052154+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('dccb1481-cb89-4cd5-b4d7-d4cb70a9531f', 'Dawn', 'Kelley', '169 Brittany Neck', 'Flower Mound', 'TX', '75028', '(586)954-0310', 'vlane@example.net', datetime.datetime(2025, 9, 30, 20, 54, 11, 52154, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:11,270] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('d34b403b-d968-427c-8dd7-cb624d8b863d', 'Krystal', 'Klein', '173 Green Unions', 'Denton', 'TX', '76201', '353.868.7870', 'anthony42@example.com', '2025-09-30 20:54:11.161583+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('d34b403b-d968-427c-8dd7-cb624d8b863d', 'Krystal', 'Klein', '173 Green Unions', 'Denton', 'TX', '76201', '353.868.7870', 'anthony42@example.com', datetime.datetime(2025, 9, 30, 20, 54, 11, 161583, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:11,388] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('2560dbcf-967d-459d-a478-0f1be38b93c1', 'Jennifer', 'Jones', '6831 Cameron Circles Apt. 761', 'Denton', 'TX', '76201', '883-755-3466x30179', 'andersonbonnie@example.org', '2025-09-30 20:54:11.270950+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('2560dbcf-967d-459d-a478-0f1be38b93c1', 'Jennifer', 'Jones', '6831 Cameron Circles Apt. 761', 'Denton', 'TX', '76201', '883-755-3466x30179', 'andersonbonnie@example.org', datetime.datetime(2025, 9, 30, 20, 54, 11, 270950, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:11,482] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('22cd1068-74af-4286-9e83-2c55b6f7bcc1', 'Richard', 'Flowers', '2160 James Road', 'Arlington', 'TX', '76010', '692-338-0697', 'richard36@example.net', '2025-09-30 20:54:11.388052+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('22cd1068-74af-4286-9e83-2c55b6f7bcc1', 'Richard', 'Flowers', '2160 James Road', 'Arlington', 'TX', '76010', '692-338-0697', 'richard36@example.net', datetime.datetime(2025, 9, 30, 20, 54, 11, 388052, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:11,605] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('0de7b3dc-4258-43aa-aa9b-af8e78b2d76f', 'Scott', 'Newton', '68394 Matthew Corners Suite 518', 'Denton', 'TX', '76201', '001-307-541-4657x22482', 'moorewayne@example.org', '2025-09-30 20:54:11.482963+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('0de7b3dc-4258-43aa-aa9b-af8e78b2d76f', 'Scott', 'Newton', '68394 Matthew Corners Suite 518', 'Denton', 'TX', '76201', '001-307-541-4657x22482', 'moorewayne@example.org', datetime.datetime(2025, 9, 30, 20, 54, 11, 482963, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:11,709] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('bc807d6f-33df-4338-abc0-749e643cf54d', 'David', 'Green', '88594 Hailey Meadows', 'Plano', 'TX', '75093', '431.916.2412x11838', 'james42@example.net', '2025-09-30 20:54:11.605078+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('bc807d6f-33df-4338-abc0-749e643cf54d', 'David', 'Green', '88594 Hailey Meadows', 'Plano', 'TX', '75093', '431.916.2412x11838', 'james42@example.net', datetime.datetime(2025, 9, 30, 20, 54, 11, 605078, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:11,818] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('f69ec0dd-eb14-4368-b428-8d8cfb60321d', 'Christy', 'Bell', '607 Sharon Bridge Apt. 208', 'Frisco', 'TX', '75034', '+1-751-281-9761x78888', 'tony25@example.org', '2025-09-30 20:54:11.709176+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('f69ec0dd-eb14-4368-b428-8d8cfb60321d', 'Christy', 'Bell', '607 Sharon Bridge Apt. 208', 'Frisco', 'TX', '75034', '+1-751-281-9761x78888', 'tony25@example.org', datetime.datetime(2025, 9, 30, 20, 54, 11, 709176, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:11,917] DEBUG django.db.backends (0.094) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('cc2691b9-8876-4f53-9bcb-f3a7c1feab46', 'Nicole', 'Brown', '91841 Lozano Wells Suite 579', 'Frisco', 'TX', '75034', '730-695-9142x43297', 'andrea21@example.org', '2025-09-30 20:54:11.818653+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('cc2691b9-8876-4f53-9bcb-f3a7c1feab46', 'Nicole', 'Brown', '91841 Lozano Wells Suite 579', 'Frisco', 'TX', '75034', '730-695-9142x43297', 'andrea21@example.org', datetime.datetime(2025, 9, 30, 20, 54, 11, 818653, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:12,036] DEBUG django.db.backends (0.125) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('3412af49-be81-47ef-a220-a70ffaa1810b', 'Lauren', 'Wallace', '50374 Travis Union Suite 238', 'Frisco', 'TX', '75034', '483-325-6770x790', 'cranealicia@example.net', '2025-09-30 20:54:11.917008+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('3412af49-be81-47ef-a220-a70ffaa1810b', 'Lauren', 'Wallace', '50374 Travis Union Suite 238', 'Frisco', 'TX', '75034', '483-325-6770x790', 'cranealicia@example.net', datetime.datetime(2025, 9, 30, 20, 54, 11, 917008, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:12,146] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('15b1e164-b6e5-4d41-b56e-d020bd3e90c8', 'Daniel', 'Lowery', '8024 James Plain Suite 485', 'Plano', 'TX', '75093', '001-455-358-7838x7460', 'carolgonzalez@example.com', '2025-09-30 20:54:12.036924+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('15b1e164-b6e5-4d41-b56e-d020bd3e90c8', 'Daniel', 'Lowery', '8024 James Plain Suite 485', 'Plano', 'TX', '75093', '001-455-358-7838x7460', 'carolgonzalez@example.com', datetime.datetime(2025, 9, 30, 20, 54, 12, 36924, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:12,255] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('71806653-a886-4987-bb0e-6698f9807f8d', 'Breanna', 'Summers', '58462 Thomas Knolls Apt. 742', 'Carrollton', 'TX', '75006', '901.423.5508x749', 'sandra68@example.com', '2025-09-30 20:54:12.146085+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('71806653-a886-4987-bb0e-6698f9807f8d', 'Breanna', 'Summers', '58462 Thomas Knolls Apt. 742', 'Carrollton', 'TX', '75006', '901.423.5508x749', 'sandra68@example.com', datetime.datetime(2025, 9, 30, 20, 54, 12, 146085, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:12,366] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('0f0e0a48-634f-4ff0-a3c6-b56ada37fc7c', 'Gary', 'Reynolds', '1409 Lewis Grove', 'Flower Mound', 'TX', '75028', '001-285-861-4437x8654', 'reynoldsamy@example.com', '2025-09-30 20:54:12.255448+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('0f0e0a48-634f-4ff0-a3c6-b56ada37fc7c', 'Gary', 'Reynolds', '1409 Lewis Grove', 'Flower Mound', 'TX', '75028', '001-285-861-4437x8654', 'reynoldsamy@example.com', datetime.datetime(2025, 9, 30, 20, 54, 12, 255448, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:12,474] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('103f6c86-520f-4cc2-b12f-08c74fd495bc', 'Sean', 'Brown', '11478 Jonathan Lodge Suite 463', 'Arlington', 'TX', '76010', '+1-761-377-8801x82894', 'paula24@example.org', '2025-09-30 20:54:12.366005+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('103f6c86-520f-4cc2-b12f-08c74fd495bc', 'Sean', 'Brown', '11478 Jonathan Lodge Suite 463', 'Arlington', 'TX', '76010', '+1-761-377-8801x82894', 'paula24@example.org', datetime.datetime(2025, 9, 30, 20, 54, 12, 366005, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:12,583] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('ea9e2f6c-9054-4532-a5f4-9e63103925b1', 'Amanda', 'Perkins', '6748 Cesar Gardens', 'Irving', 'TX', '75039', '(557)652-7467', 'vchambers@example.net', '2025-09-30 20:54:12.474973+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('ea9e2f6c-9054-4532-a5f4-9e63103925b1', 'Amanda', 'Perkins', '6748 Cesar Gardens', 'Irving', 'TX', '75039', '(557)652-7467', 'vchambers@example.net', datetime.datetime(2025, 9, 30, 20, 54, 12, 474973, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:12,692] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('a946cb29-5a79-4df5-8160-3d128963a2b7', 'Rachel', 'Campbell', '1779 Amber Mews', 'Irving', 'TX', '75039', '486-750-7975', 'fsimpson@example.org', '2025-09-30 20:54:12.583568+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('a946cb29-5a79-4df5-8160-3d128963a2b7', 'Rachel', 'Campbell', '1779 Amber Mews', 'Irving', 'TX', '75039', '486-750-7975', 'fsimpson@example.org', datetime.datetime(2025, 9, 30, 20, 54, 12, 583568, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:12,803] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('463be30a-10dc-4f58-b961-352a99eda880', 'Craig', 'Massey', '947 Jeffrey Stream Suite 335', 'Irving', 'TX', '75039', '401-947-8796x416', 'graydavid@example.net', '2025-09-30 20:54:12.692983+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('463be30a-10dc-4f58-b961-352a99eda880', 'Craig', 'Massey', '947 Jeffrey Stream Suite 335', 'Irving', 'TX', '75039', '401-947-8796x416', 'graydavid@example.net', datetime.datetime(2025, 9, 30, 20, 54, 12, 692983, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:12,912] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('6e422484-44ea-487f-9097-599d7f89a43d', 'Anita', 'Hubbard', '738 Brenda Islands Suite 194', 'Irving', 'TX', '75039', '299-846-8898x49056', 'sparksjames@example.net', '2025-09-30 20:54:12.803263+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('6e422484-44ea-487f-9097-599d7f89a43d', 'Anita', 'Hubbard', '738 Brenda Islands Suite 194', 'Irving', 'TX', '75039', '299-846-8898x49056', 'sparksjames@example.net', datetime.datetime(2025, 9, 30, 20, 54, 12, 803263, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:13,021] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('8c0ea443-bd58-420f-954d-a4f7203e8295', 'Dylan', 'Jones', '15747 Gregory Plaza', 'Plano', 'TX', '75093', '+1-914-823-9462x004', 'anthony40@example.com', '2025-09-30 20:54:12.912319+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('8c0ea443-bd58-420f-954d-a4f7203e8295', 'Dylan', 'Jones', '15747 Gregory Plaza', 'Plano', 'TX', '75093', '+1-914-823-9462x004', 'anthony40@example.com', datetime.datetime(2025, 9, 30, 20, 54, 12, 912319, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:13,130] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('acca7f95-3a57-47fb-a97b-071b1973ebe0', 'Patty', 'Bryant', '6889 Kimberly Bridge Apt. 643', 'Denton', 'TX', '76201', '001-714-605-3839', 'susansmith@example.net', '2025-09-30 20:54:13.022838+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('acca7f95-3a57-47fb-a97b-071b1973ebe0', 'Patty', 'Bryant', '6889 Kimberly Bridge Apt. 643', 'Denton', 'TX', '76201', '001-714-605-3839', 'susansmith@example.net', datetime.datetime(2025, 9, 30, 20, 54, 13, 22838, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:13,229] DEBUG django.db.backends (0.094) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('cb9d7acb-26da-45fb-9c0e-5280322b556c', 'Cody', 'Spencer', '532 Werner Crossing', 'Frisco', 'TX', '75034', '800.666.1703x5594', 'jpeterson@example.com', '2025-09-30 20:54:13.130832+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('cb9d7acb-26da-45fb-9c0e-5280322b556c', 'Cody', 'Spencer', '532 Werner Crossing', 'Frisco', 'TX', '75034', '800.666.1703x5594', 'jpeterson@example.com', datetime.datetime(2025, 9, 30, 20, 54, 13, 130832, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:13,334] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('ce76bb22-23cc-4ec9-a188-dee47c9f2292', 'Jennifer', 'Flynn', '12560 Elizabeth Motorway', 'Plano', 'TX', '75093', '(650)240-6232x592', 'mpham@example.net', '2025-09-30 20:54:13.229137+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('ce76bb22-23cc-4ec9-a188-dee47c9f2292', 'Jennifer', 'Flynn', '12560 Elizabeth Motorway', 'Plano', 'TX', '75093', '(650)240-6232x592', 'mpham@example.net', datetime.datetime(2025, 9, 30, 20, 54, 13, 229137, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:13,444] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('e786937f-b824-4132-9804-d10c6b3a24a0', 'Teresa', 'Mcintosh', '06866 Parks Passage', 'Irving', 'TX', '75039', '578-567-0508x7310', 'ysmith@example.com', '2025-09-30 20:54:13.334973+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('e786937f-b824-4132-9804-d10c6b3a24a0', 'Teresa', 'Mcintosh', '06866 Parks Passage', 'Irving', 'TX', '75039', '578-567-0508x7310', 'ysmith@example.com', datetime.datetime(2025, 9, 30, 20, 54, 13, 334973, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:13,563] DEBUG django.db.backends (0.125) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('36bdc994-a1b2-4575-8258-5065eab7f26a', 'Michael', 'Brooks', '22523 Kramer Turnpike Suite 912', 'Plano', 'TX', '75093', '803.216.3492', 'christopher70@example.org', '2025-09-30 20:54:13.444237+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('36bdc994-a1b2-4575-8258-5065eab7f26a', 'Michael', 'Brooks', '22523 Kramer Turnpike Suite 912', 'Plano', 'TX', '75093', '803.216.3492', 'christopher70@example.org', datetime.datetime(2025, 9, 30, 20, 54, 13, 444237, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:13,655] DEBUG django.db.backends (0.094) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('fcabbe50-8c9a-43a9-a68c-a82a85594807', 'Lisa', 'Robinson', '9735 Cox Flats Apt. 091', 'Arlington', 'TX', '76010', '435-531-4464x10650', 'trobles@example.com', '2025-09-30 20:54:13.564190+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('fcabbe50-8c9a-43a9-a68c-a82a85594807', 'Lisa', 'Robinson', '9735 Cox Flats Apt. 091', 'Arlington', 'TX', '76010', '435-531-4464x10650', 'trobles@example.com', datetime.datetime(2025, 9, 30, 20, 54, 13, 564190, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:13,771] DEBUG django.db.backends (0.093) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('8f2424c5-1ed5-4829-8792-7300a1e103b7', 'Angela', 'Lloyd', '7604 Eric Falls', 'Dallas', 'TX', '75201', '516-211-4358', 'lopezmadeline@example.net', '2025-09-30 20:54:13.671578+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('8f2424c5-1ed5-4829-8792-7300a1e103b7', 'Angela', 'Lloyd', '7604 Eric Falls', 'Dallas', 'TX', '75201', '516-211-4358', 'lopezmadeline@example.net', datetime.datetime(2025, 9, 30, 20, 54, 13, 671578, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:13,881] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('d2025e37-5576-416b-8b19-6ad8226e7033', 'Thomas', 'Robinson', '7304 Lisa Prairie Suite 452', 'Flower Mound', 'TX', '75028', '(299)811-2506', 'wrightthomas@example.com', '2025-09-30 20:54:13.771086+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('d2025e37-5576-416b-8b19-6ad8226e7033', 'Thomas', 'Robinson', '7304 Lisa Prairie Suite 452', 'Flower Mound', 'TX', '75028', '(299)811-2506', 'wrightthomas@example.com', datetime.datetime(2025, 9, 30, 20, 54, 13, 771086, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:13,990] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('9c00ae88-abeb-472d-a029-338f0cbd0096', 'Kristin', 'Barnett', '89846 Reed Cape', 'Flower Mound', 'TX', '75028', '(230)600-3988x37465', 'nshaffer@example.org', '2025-09-30 20:54:13.881531+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('9c00ae88-abeb-472d-a029-338f0cbd0096', 'Kristin', 'Barnett', '89846 Reed Cape', 'Flower Mound', 'TX', '75028', '(230)600-3988x37465', 'nshaffer@example.org', datetime.datetime(2025, 9, 30, 20, 54, 13, 881531, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:14,099] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('a35e6929-1642-42ec-b759-52b3fcbd4b1f', 'Matthew', 'Johnson', '6220 Stacey Lane Suite 946', 'Denton', 'TX', '76201', '(740)545-6472x12716', 'jennifertran@example.org', '2025-09-30 20:54:13.990564+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('a35e6929-1642-42ec-b759-52b3fcbd4b1f', 'Matthew', 'Johnson', '6220 Stacey Lane Suite 946', 'Denton', 'TX', '76201', '(740)545-6472x12716', 'jennifertran@example.org', datetime.datetime(2025, 9, 30, 20, 54, 13, 990564, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:14,224] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('c0315c7c-7cc7-4eb3-9ccd-cdd47ec31b9f', 'Thomas', 'Nunez', '1944 Foster Trafficway Apt. 098', 'Garland', 'TX', '75040', '001-628-272-3802x813', 'igamble@example.net', '2025-09-30 20:54:14.115419+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('c0315c7c-7cc7-4eb3-9ccd-cdd47ec31b9f', 'Thomas', 'Nunez', '1944 Foster Trafficway Apt. 098', 'Garland', 'TX', '75040', '001-628-272-3802x813', 'igamble@example.net', datetime.datetime(2025, 9, 30, 20, 54, 14, 115419, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:14,333] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('2f7f389f-1ece-451a-82dc-9def89dbf21e', 'Paul', 'Mccarty', '428 George Prairie Apt. 325', 'Dallas', 'TX', '75201', '205.780.6068', 'austin01@example.com', '2025-09-30 20:54:14.224491+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('2f7f389f-1ece-451a-82dc-9def89dbf21e', 'Paul', 'Mccarty', '428 George Prairie Apt. 325', 'Dallas', 'TX', '75201', '205.780.6068', 'austin01@example.com', datetime.datetime(2025, 9, 30, 20, 54, 14, 224491, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:14,428] DEBUG django.db.backends (0.094) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('2adcd699-8962-4209-a308-5fd21a372355', 'Robert', 'Crawford', '6833 Anderson Ports Suite 423', 'Carrollton', 'TX', '75006', '820.320.6825x1727', 'knightjason@example.com', '2025-09-30 20:54:14.333861+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('2adcd699-8962-4209-a308-5fd21a372355', 'Robert', 'Crawford', '6833 Anderson Ports Suite 423', 'Carrollton', 'TX', '75006', '820.320.6825x1727', 'knightjason@example.com', datetime.datetime(2025, 9, 30, 20, 54, 14, 333861, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:14,552] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('b756c8c9-c15d-409a-a7f8-753ecdfd5aa8', 'Claire', 'Smith', '472 Christopher Course Apt. 929', 'Irving', 'TX', '75039', '980-329-8611x558', 'odomamy@example.com', '2025-09-30 20:54:14.444132+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('b756c8c9-c15d-409a-a7f8-753ecdfd5aa8', 'Claire', 'Smith', '472 Christopher Course Apt. 929', 'Irving', 'TX', '75039', '980-329-8611x558', 'odomamy@example.com', datetime.datetime(2025, 9, 30, 20, 54, 14, 444132, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:14,647] DEBUG django.db.backends (0.093) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('81dd6122-6747-44cc-b2e3-3d2fbe84141d', 'Christopher', 'Nelson', '334 Baker Corner Suite 435', 'Richardson', 'TX', '75080', '2884551537', 'matthew26@example.net', '2025-09-30 20:54:14.552173+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('81dd6122-6747-44cc-b2e3-3d2fbe84141d', 'Christopher', 'Nelson', '334 Baker Corner Suite 435', 'Richardson', 'TX', '75080', '2884551537', 'matthew26@example.net', datetime.datetime(2025, 9, 30, 20, 54, 14, 552173, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:14,756] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('3253beef-edf9-412e-a9b7-b5d0a1be700e', 'Haley', 'Jacobson', '3172 Julie Ramp Suite 322', 'Irving', 'TX', '75039', '(847)808-5610x4406', 'shawn67@example.org', '2025-09-30 20:54:14.647012+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('3253beef-edf9-412e-a9b7-b5d0a1be700e', 'Haley', 'Jacobson', '3172 Julie Ramp Suite 322', 'Irving', 'TX', '75039', '(847)808-5610x4406', 'shawn67@example.org', datetime.datetime(2025, 9, 30, 20, 54, 14, 647012, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:14,865] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('92e71cd7-8f4f-42c3-a305-a8dd99e1ffc2', 'Rodney', 'Guerrero', '7275 King Stream', 'Denton', 'TX', '76201', '+1-260-812-7358', 'cynthia56@example.com', '2025-09-30 20:54:14.756018+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('92e71cd7-8f4f-42c3-a305-a8dd99e1ffc2', 'Rodney', 'Guerrero', '7275 King Stream', 'Denton', 'TX', '76201', '+1-260-812-7358', 'cynthia56@example.com', datetime.datetime(2025, 9, 30, 20, 54, 14, 756018, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:14,974] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('f2c88c8c-7ec6-4cf0-aa53-97eca55c85bb', 'William', 'Stark', '8898 Combs Hills Suite 006', 'Garland', 'TX', '75040', '931-409-0964x5291', 'pdiaz@example.net', '2025-09-30 20:54:14.865060+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('f2c88c8c-7ec6-4cf0-aa53-97eca55c85bb', 'William', 'Stark', '8898 Combs Hills Suite 006', 'Garland', 'TX', '75040', '931-409-0964x5291', 'pdiaz@example.net', datetime.datetime(2025, 9, 30, 20, 54, 14, 865060, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:15,084] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('066db8bf-244b-4be8-83ec-33b8a1d7b19e', 'Jorge', 'Watkins', '911 Adams Lake Suite 767', 'Irving', 'TX', '75039', '(508)654-3906x16910', 'deborah28@example.net', '2025-09-30 20:54:14.974467+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('066db8bf-244b-4be8-83ec-33b8a1d7b19e', 'Jorge', 'Watkins', '911 Adams Lake Suite 767', 'Irving', 'TX', '75039', '(508)654-3906x16910', 'deborah28@example.net', datetime.datetime(2025, 9, 30, 20, 54, 14, 974467, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:15,193] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('d40baa4b-1601-44a3-a344-652d6aaba3c8', 'Jennifer', 'Carter', '9721 Katherine Expressway Suite 418', 'Plano', 'TX', '75093', '+1-554-871-1482x7540', 'marcjones@example.com', '2025-09-30 20:54:15.084753+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('d40baa4b-1601-44a3-a344-652d6aaba3c8', 'Jennifer', 'Carter', '9721 Katherine Expressway Suite 418', 'Plano', 'TX', '75093', '+1-554-871-1482x7540', 'marcjones@example.com', datetime.datetime(2025, 9, 30, 20, 54, 15, 84753, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:15,302] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('b440c824-516c-451a-a633-1a87191c4495', 'Fred', 'Maddox', '987 Benjamin Estates Apt. 304', 'Arlington', 'TX', '76010', '(638)860-0137x2735', 'raysteve@example.net', '2025-09-30 20:54:15.193228+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('b440c824-516c-451a-a633-1a87191c4495', 'Fred', 'Maddox', '987 Benjamin Estates Apt. 304', 'Arlington', 'TX', '76010', '(638)860-0137x2735', 'raysteve@example.net', datetime.datetime(2025, 9, 30, 20, 54, 15, 193228, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:15,411] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('68c06f88-c423-4f7f-9855-31c99897904c', 'Ashley', 'James', '773 Stephanie Ways', 'Denton', 'TX', '76201', '+1-434-917-6400', 'lgibson@example.org', '2025-09-30 20:54:15.302597+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('68c06f88-c423-4f7f-9855-31c99897904c', 'Ashley', 'James', '773 Stephanie Ways', 'Denton', 'TX', '76201', '+1-434-917-6400', 'lgibson@example.org', datetime.datetime(2025, 9, 30, 20, 54, 15, 302597, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:15,521] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('1e79f0d0-3cf6-4aca-8393-6c987c0890e7', 'Pamela', 'Joyce', '58716 Ariana Throughway', 'Dallas', 'TX', '75201', '+1-248-253-5949x264', 'adam35@example.com', '2025-09-30 20:54:15.411963+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('1e79f0d0-3cf6-4aca-8393-6c987c0890e7', 'Pamela', 'Joyce', '58716 Ariana Throughway', 'Dallas', 'TX', '75201', '+1-248-253-5949x264', 'adam35@example.com', datetime.datetime(2025, 9, 30, 20, 54, 15, 411963, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:15,633] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('326d7a33-c879-47a7-af39-43eca86e0868', 'Richard', 'Wright', '698 Gould Garden', 'Irving', 'TX', '75039', '743-985-8849', 'xnorris@example.org', '2025-09-30 20:54:15.521726+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('326d7a33-c879-47a7-af39-43eca86e0868', 'Richard', 'Wright', '698 Gould Garden', 'Irving', 'TX', '75039', '743-985-8849', 'xnorris@example.org', datetime.datetime(2025, 9, 30, 20, 54, 15, 521726, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:15,740] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('23eb4ffb-c329-4687-884c-3b9b0b23702d', 'Lori', 'Parker', '0793 Luis Ways Suite 294', 'Garland', 'TX', '75040', '+1-345-716-3831x8334', 'williamsaustin@example.com', '2025-09-30 20:54:15.633363+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('23eb4ffb-c329-4687-884c-3b9b0b23702d', 'Lori', 'Parker', '0793 Luis Ways Suite 294', 'Garland', 'TX', '75040', '+1-345-716-3831x8334', 'williamsaustin@example.com', datetime.datetime(2025, 9, 30, 20, 54, 15, 633363, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:15,849] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('c5f58cc6-3d99-4079-a83a-e317e338b201', 'Charles', 'Smith', '2972 Laura Views Apt. 431', 'Richardson', 'TX', '75080', '4258834950', 'richardacevedo@example.com', '2025-09-30 20:54:15.740474+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('c5f58cc6-3d99-4079-a83a-e317e338b201', 'Charles', 'Smith', '2972 Laura Views Apt. 431', 'Richardson', 'TX', '75080', '4258834950', 'richardacevedo@example.com', datetime.datetime(2025, 9, 30, 20, 54, 15, 740474, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:15,991] DEBUG django.db.backends (0.140) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('52db3255-8d4a-4068-9d52-6a44a0903386', 'Michele', 'Ruiz', '943 Moore Club Apt. 160', 'Denton', 'TX', '76201', '931-858-2543', 'brandongraves@example.com', '2025-09-30 20:54:15.849587+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('52db3255-8d4a-4068-9d52-6a44a0903386', 'Michele', 'Ruiz', '943 Moore Club Apt. 160', 'Denton', 'TX', '76201', '931-858-2543', 'brandongraves@example.com', datetime.datetime(2025, 9, 30, 20, 54, 15, 849587, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:16,099] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('5bbf153d-d543-43dd-884b-814f93892244', 'Laura', 'Mcfarland', '88525 Christopher Flat', 'Dallas', 'TX', '75201', '412-735-8919x7695', 'alexandernicholas@example.net', '2025-09-30 20:54:15.991128+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('5bbf153d-d543-43dd-884b-814f93892244', 'Laura', 'Mcfarland', '88525 Christopher Flat', 'Dallas', 'TX', '75201', '412-735-8919x7695', 'alexandernicholas@example.net', datetime.datetime(2025, 9, 30, 20, 54, 15, 991128, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:16,213] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('4edccb78-3e94-44b7-b7fd-22358df8f74e', 'Renee', 'Jones', '4091 Sarah Viaduct', 'Flower Mound', 'TX', '75028', '(390)318-0042', 'zmitchell@example.net', '2025-09-30 20:54:16.099748+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('4edccb78-3e94-44b7-b7fd-22358df8f74e', 'Renee', 'Jones', '4091 Sarah Viaduct', 'Flower Mound', 'TX', '75028', '(390)318-0042', 'zmitchell@example.net', datetime.datetime(2025, 9, 30, 20, 54, 16, 99748, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:16,318] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('26b896cd-95be-4456-8b33-5e4f589635c3', 'Albert', 'Harris', '89667 Emma Path', 'Irving', 'TX', '75039', '545-331-2099', 'craighines@example.org', '2025-09-30 20:54:16.213494+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('26b896cd-95be-4456-8b33-5e4f589635c3', 'Albert', 'Harris', '89667 Emma Path', 'Irving', 'TX', '75039', '545-331-2099', 'craighines@example.org', datetime.datetime(2025, 9, 30, 20, 54, 16, 213494, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:16,447] DEBUG django.db.backends (0.125) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('dfec1cc3-40f9-41e8-8021-d6aaccf17de5', 'Victoria', 'Beck', '4290 Christopher Land Suite 945', 'Denton', 'TX', '76201', '424.264.2971x136', 'ronald90@example.org', '2025-09-30 20:54:16.318569+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('dfec1cc3-40f9-41e8-8021-d6aaccf17de5', 'Victoria', 'Beck', '4290 Christopher Land Suite 945', 'Denton', 'TX', '76201', '424.264.2971x136', 'ronald90@example.org', datetime.datetime(2025, 9, 30, 20, 54, 16, 318569, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:16,565] DEBUG django.db.backends (0.125) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('f9c49544-3a3e-4781-9bfc-86779eb1a7d9', 'Timothy', 'Ramos', '26391 Robert Path', 'Garland', 'TX', '75040', '335-788-7347x4570', 'davidmeyers@example.net', '2025-09-30 20:54:16.449749+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('f9c49544-3a3e-4781-9bfc-86779eb1a7d9', 'Timothy', 'Ramos', '26391 Robert Path', 'Garland', 'TX', '75040', '335-788-7347x4570', 'davidmeyers@example.net', datetime.datetime(2025, 9, 30, 20, 54, 16, 449749, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:16,668] DEBUG django.db.backends (0.094) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('f1c252ba-d38c-4b9c-9104-992326be996e', 'Eddie', 'Aguirre', '144 Henry Via Apt. 770', 'Richardson', 'TX', '75080', '+1-425-280-7691', 'pfisher@example.org', '2025-09-30 20:54:16.566984+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('f1c252ba-d38c-4b9c-9104-992326be996e', 'Eddie', 'Aguirre', '144 Henry Via Apt. 770', 'Richardson', 'TX', '75080', '+1-425-280-7691', 'pfisher@example.org', datetime.datetime(2025, 9, 30, 20, 54, 16, 566984, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:16,782] DEBUG django.db.backends (0.125) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('2f29d50a-699c-42a0-bfd1-561a0cc5811b', 'Jonathan', 'Garza', '2680 Peter Villages', 'Flower Mound', 'TX', '75028', '+1-511-525-1360', 'jacquelinebarton@example.net', '2025-09-30 20:54:16.668714+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('2f29d50a-699c-42a0-bfd1-561a0cc5811b', 'Jonathan', 'Garza', '2680 Peter Villages', 'Flower Mound', 'TX', '75028', '+1-511-525-1360', 'jacquelinebarton@example.net', datetime.datetime(2025, 9, 30, 20, 54, 16, 668714, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:16,883] DEBUG django.db.backends (0.094) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('7d2ade18-b4f4-4869-a92e-6ccf32ef62f2', 'Lori', 'Kelley', '4009 Julie Mountains', 'Flower Mound', 'TX', '75028', '(588)629-1966x6960', 'eric43@example.net', '2025-09-30 20:54:16.784774+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('7d2ade18-b4f4-4869-a92e-6ccf32ef62f2', 'Lori', 'Kelley', '4009 Julie Mountains', 'Flower Mound', 'TX', '75028', '(588)629-1966x6960', 'eric43@example.net', datetime.datetime(2025, 9, 30, 20, 54, 16, 784774, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:16,990] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('907a2956-090a-4403-8714-c1f14bd8a6b2', 'Brian', 'Reynolds', '29617 Susan Knoll', 'Dallas', 'TX', '75201', '389.646.8019x784', 'angela83@example.com', '2025-09-30 20:54:16.883852+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('907a2956-090a-4403-8714-c1f14bd8a6b2', 'Brian', 'Reynolds', '29617 Susan Knoll', 'Dallas', 'TX', '75201', '389.646.8019x784', 'angela83@example.com', datetime.datetime(2025, 9, 30, 20, 54, 16, 883852, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:17,110] DEBUG django.db.backends (0.125) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('fc22e193-2b97-40a8-bd9a-7ac6ad8ae1ca', 'Stephanie', 'Barnes', '90402 Fox Road Suite 103', 'Frisco', 'TX', '75034', '4763607217', 'rachel60@example.net', '2025-09-30 20:54:16.990505+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('fc22e193-2b97-40a8-bd9a-7ac6ad8ae1ca', 'Stephanie', 'Barnes', '90402 Fox Road Suite 103', 'Frisco', 'TX', '75034', '4763607217', 'rachel60@example.net', datetime.datetime(2025, 9, 30, 20, 54, 16, 990505, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:17,216] DEBUG django.db.backends (0.094) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('947ed463-8a51-48c2-915a-db798c2b9c77', 'Zoe', 'Carroll', '585 Patterson Place Suite 748', 'Plano', 'TX', '75093', '648-527-2117', 'fergusonjoy@example.org', '2025-09-30 20:54:17.111781+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('947ed463-8a51-48c2-915a-db798c2b9c77', 'Zoe', 'Carroll', '585 Patterson Place Suite 748', 'Plano', 'TX', '75093', '648-527-2117', 'fergusonjoy@example.org', datetime.datetime(2025, 9, 30, 20, 54, 17, 111781, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:17,325] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('e9d6d09b-9111-42d3-b3bc-e3e913ddeefb', 'Amy', 'Camacho', '2906 Janet Path Suite 694', 'Frisco', 'TX', '75034', '561.971.8634', 'thomasamy@example.org', '2025-09-30 20:54:17.216479+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('e9d6d09b-9111-42d3-b3bc-e3e913ddeefb', 'Amy', 'Camacho', '2906 Janet Path Suite 694', 'Frisco', 'TX', '75034', '561.971.8634', 'thomasamy@example.org', datetime.datetime(2025, 9, 30, 20, 54, 17, 216479, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:17,427] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('fa73b263-f112-42a7-9c2f-a905d1b2b891', 'George', 'Clark', '63770 Smith Spurs Suite 904', 'Richardson', 'TX', '75080', '620-739-5264', 'michael91@example.org', '2025-09-30 20:54:17.325906+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('fa73b263-f112-42a7-9c2f-a905d1b2b891', 'George', 'Clark', '63770 Smith Spurs Suite 904', 'Richardson', 'TX', '75080', '620-739-5264', 'michael91@example.org', datetime.datetime(2025, 9, 30, 20, 54, 17, 325906, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:17,536] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('aa106ef6-8cf6-409e-b491-ac111754d1a1', 'Roger', 'Sullivan', '64319 Steven Port', 'Arlington', 'TX', '76010', '4615872941', 'rbaker@example.net', '2025-09-30 20:54:17.427918+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('aa106ef6-8cf6-409e-b491-ac111754d1a1', 'Roger', 'Sullivan', '64319 Steven Port', 'Arlington', 'TX', '76010', '4615872941', 'rbaker@example.net', datetime.datetime(2025, 9, 30, 20, 54, 17, 427918, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:17,651] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('778ead1c-ba23-447a-8182-f9b13d78a6ce', 'Aaron', 'Williams', '641 Stewart Junction', 'Frisco', 'TX', '75034', '(370)743-7717x7895', 'yrobinson@example.org', '2025-09-30 20:54:17.536956+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('778ead1c-ba23-447a-8182-f9b13d78a6ce', 'Aaron', 'Williams', '641 Stewart Junction', 'Frisco', 'TX', '75034', '(370)743-7717x7895', 'yrobinson@example.org', datetime.datetime(2025, 9, 30, 20, 54, 17, 536956, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:17,749] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('feec98d8-f279-4a7c-8f6c-0ba539b0abc1', 'Michael', 'Schroeder', '606 Ramirez Lodge', 'Carrollton', 'TX', '75006', '201.663.3137x1392', 'joseph70@example.com', '2025-09-30 20:54:17.652334+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('feec98d8-f279-4a7c-8f6c-0ba539b0abc1', 'Michael', 'Schroeder', '606 Ramirez Lodge', 'Carrollton', 'TX', '75006', '201.663.3137x1392', 'joseph70@example.com', datetime.datetime(2025, 9, 30, 20, 54, 17, 652334, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:17,892] DEBUG django.db.backends (0.140) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('d67a0b81-04c7-4937-9b1d-756ad7d93467', 'Scott', 'Cox', '771 Herrera Mills', 'Frisco', 'TX', '75034', '001-843-728-2527x496', 'igarcia@example.org', '2025-09-30 20:54:17.749775+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('d67a0b81-04c7-4937-9b1d-756ad7d93467', 'Scott', 'Cox', '771 Herrera Mills', 'Frisco', 'TX', '75034', '001-843-728-2527x496', 'igarcia@example.org', datetime.datetime(2025, 9, 30, 20, 54, 17, 749775, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:18,001] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('54eee875-5b8a-43bf-88b3-5299165afd00', 'Jennifer', 'Robinson', '01959 Kayla Ford Apt. 237', 'Flower Mound', 'TX', '75028', '(681)518-5475x145', 'richardsonlindsay@example.net', '2025-09-30 20:54:17.893138+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('54eee875-5b8a-43bf-88b3-5299165afd00', 'Jennifer', 'Robinson', '01959 Kayla Ford Apt. 237', 'Flower Mound', 'TX', '75028', '(681)518-5475x145', 'richardsonlindsay@example.net', datetime.datetime(2025, 9, 30, 20, 54, 17, 893138, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:18,112] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('dd20fd4e-6357-479a-93ed-565761dabd63', 'Valerie', 'Mejia', '602 Zavala Mountains Suite 489', 'Dallas', 'TX', '75201', '469-918-0529x246', 'rodgersjoseph@example.org', '2025-09-30 20:54:18.002082+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('dd20fd4e-6357-479a-93ed-565761dabd63', 'Valerie', 'Mejia', '602 Zavala Mountains Suite 489', 'Dallas', 'TX', '75201', '469-918-0529x246', 'rodgersjoseph@example.org', datetime.datetime(2025, 9, 30, 20, 54, 18, 2082, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:18,222] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('eb561196-7bcb-4adb-a2a4-04e54d412fb6', 'Luis', 'Bernard', '2590 Dustin Corner', 'Plano', 'TX', '75093', '(678)246-4171', 'annamason@example.net', '2025-09-30 20:54:18.113050+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('eb561196-7bcb-4adb-a2a4-04e54d412fb6', 'Luis', 'Bernard', '2590 Dustin Corner', 'Plano', 'TX', '75093', '(678)246-4171', 'annamason@example.net', datetime.datetime(2025, 9, 30, 20, 54, 18, 113050, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:18,329] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('d8e8375e-2748-40d7-a1ce-2064ca99f33f', 'Ashley', 'Romero', '536 Jill Passage Suite 697', 'Garland', 'TX', '75040', '545.744.6252x2719', 'rebekahgraves@example.org', '2025-09-30 20:54:18.223975+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('d8e8375e-2748-40d7-a1ce-2064ca99f33f', 'Ashley', 'Romero', '536 Jill Passage Suite 697', 'Garland', 'TX', '75040', '545.744.6252x2719', 'rebekahgraves@example.org', datetime.datetime(2025, 9, 30, 20, 54, 18, 223975, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:18,438] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('de480731-c0f3-4e1d-b131-4caa6ff455e1', 'Carol', 'Weaver', '9099 Pennington Islands Suite 067', 'Garland', 'TX', '75040', '530-853-6678', 'melissa46@example.org', '2025-09-30 20:54:18.329542+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('de480731-c0f3-4e1d-b131-4caa6ff455e1', 'Carol', 'Weaver', '9099 Pennington Islands Suite 067', 'Garland', 'TX', '75040', '530-853-6678', 'melissa46@example.org', datetime.datetime(2025, 9, 30, 20, 54, 18, 329542, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:18,548] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('3e3191fb-a5fc-4cc7-bacc-ef627f6ccacd', 'Elizabeth', 'Page', '427 Jessica Street', 'Denton', 'TX', '76201', '001-888-350-3329', 'msalinas@example.net', '2025-09-30 20:54:18.439766+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('3e3191fb-a5fc-4cc7-bacc-ef627f6ccacd', 'Elizabeth', 'Page', '427 Jessica Street', 'Denton', 'TX', '76201', '001-888-350-3329', 'msalinas@example.net', datetime.datetime(2025, 9, 30, 20, 54, 18, 439766, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:18,662] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('1f0cca3b-b699-43b2-a4f7-053f94e98d6e', 'Gina', 'Figueroa', '14360 Smith Radial Apt. 195', 'Frisco', 'TX', '75034', '725-335-2599x366', 'lindacummings@example.net', '2025-09-30 20:54:18.549117+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('1f0cca3b-b699-43b2-a4f7-053f94e98d6e', 'Gina', 'Figueroa', '14360 Smith Radial Apt. 195', 'Frisco', 'TX', '75034', '725-335-2599x366', 'lindacummings@example.net', datetime.datetime(2025, 9, 30, 20, 54, 18, 549117, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:18,771] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('c51b1ad1-441d-4bd8-880f-a71f75457e36', 'Sierra', 'Green', '9257 Pena Parkways Suite 995', 'Plano', 'TX', '75093', '001-558-655-6747', 'tuckersamantha@example.com', '2025-09-30 20:54:18.662424+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('c51b1ad1-441d-4bd8-880f-a71f75457e36', 'Sierra', 'Green', '9257 Pena Parkways Suite 995', 'Plano', 'TX', '75093', '001-558-655-6747', 'tuckersamantha@example.com', datetime.datetime(2025, 9, 30, 20, 54, 18, 662424, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:18,894] DEBUG django.db.backends (0.125) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('7d66f604-b8c4-4d73-b4d7-3c3a2327a56e', 'Matthew', 'Gaines', '2978 Edward Trace', 'Flower Mound', 'TX', '75028', '393-834-3525', 'wolfnatalie@example.net', '2025-09-30 20:54:18.771449+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('7d66f604-b8c4-4d73-b4d7-3c3a2327a56e', 'Matthew', 'Gaines', '2978 Edward Trace', 'Flower Mound', 'TX', '75028', '393-834-3525', 'wolfnatalie@example.net', datetime.datetime(2025, 9, 30, 20, 54, 18, 771449, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:18,989] DEBUG django.db.backends (0.094) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('570568ad-efcd-4b2e-bf7c-6946efe70d5f', 'Elizabeth', 'Rush', '9152 Carpenter Rest', 'Irving', 'TX', '75039', '+1-572-716-9502x36463', 'cfisher@example.org', '2025-09-30 20:54:18.894453+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('570568ad-efcd-4b2e-bf7c-6946efe70d5f', 'Elizabeth', 'Rush', '9152 Carpenter Rest', 'Irving', 'TX', '75039', '+1-572-716-9502x36463', 'cfisher@example.org', datetime.datetime(2025, 9, 30, 20, 54, 18, 894453, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:19,113] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('18391be4-91de-40fa-8db4-c861cbf6c81b', 'Diane', 'Brown', '39662 Grant Plain Apt. 893', 'Flower Mound', 'TX', '75028', '3358987322', 'rodriguezgregory@example.net', '2025-09-30 20:54:19.005604+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('18391be4-91de-40fa-8db4-c861cbf6c81b', 'Diane', 'Brown', '39662 Grant Plain Apt. 893', 'Flower Mound', 'TX', '75028', '3358987322', 'rodriguezgregory@example.net', datetime.datetime(2025, 9, 30, 20, 54, 19, 5604, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:19,209] DEBUG django.db.backends (0.094) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('0353561c-91f6-4d7c-a776-4cabe8ea3625', 'Steven', 'Moss', '0306 Brewer Road Apt. 344', 'Plano', 'TX', '75093', '001-702-212-5387', 'kthompson@example.com', '2025-09-30 20:54:19.114678+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('0353561c-91f6-4d7c-a776-4cabe8ea3625', 'Steven', 'Moss', '0306 Brewer Road Apt. 344', 'Plano', 'TX', '75093', '001-702-212-5387', 'kthompson@example.com', datetime.datetime(2025, 9, 30, 20, 54, 19, 114678, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:19,319] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('9a5fa3eb-85a3-4d5f-a092-1e1c5bcabf36', 'Cynthia', 'Walker', '5885 Sandra Mews Suite 142', 'Dallas', 'TX', '75201', '305.956.8421x0008', 'odonnellsabrina@example.com', '2025-09-30 20:54:19.209257+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('9a5fa3eb-85a3-4d5f-a092-1e1c5bcabf36', 'Cynthia', 'Walker', '5885 Sandra Mews Suite 142', 'Dallas', 'TX', '75201', '305.956.8421x0008', 'odonnellsabrina@example.com', datetime.datetime(2025, 9, 30, 20, 54, 19, 209257, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:19,427] DEBUG django.db.backends (0.094) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('bb7ea5a8-1f4b-40e2-a4ac-8dd6898b2404', 'Ronald', 'Mitchell', '28724 Williams Rest', 'Dallas', 'TX', '75201', '778-586-7930', 'oortega@example.com', '2025-09-30 20:54:19.332780+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('bb7ea5a8-1f4b-40e2-a4ac-8dd6898b2404', 'Ronald', 'Mitchell', '28724 Williams Rest', 'Dallas', 'TX', '75201', '778-586-7930', 'oortega@example.com', datetime.datetime(2025, 9, 30, 20, 54, 19, 332780, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:19,537] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('716e198c-709e-49f4-88c7-e9a7d5c8b552', 'Anna', 'Watson', '943 Gibson Mountain Suite 131', 'Richardson', 'TX', '75080', '+1-660-971-3958x71653', 'jenniferwade@example.net', '2025-09-30 20:54:19.427693+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('716e198c-709e-49f4-88c7-e9a7d5c8b552', 'Anna', 'Watson', '943 Gibson Mountain Suite 131', 'Richardson', 'TX', '75080', '+1-660-971-3958x71653', 'jenniferwade@example.net', datetime.datetime(2025, 9, 30, 20, 54, 19, 427693, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:19,647] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('beb1199c-069d-4bc9-bee7-e8cd63e5acae', 'Dawn', 'Good', '205 Brian Summit Apt. 603', 'Dallas', 'TX', '75201', '510-455-2253x822', 'mariafreeman@example.net', '2025-09-30 20:54:19.537060+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('beb1199c-069d-4bc9-bee7-e8cd63e5acae', 'Dawn', 'Good', '205 Brian Summit Apt. 603', 'Dallas', 'TX', '75201', '510-455-2253x822', 'mariafreeman@example.net', datetime.datetime(2025, 9, 30, 20, 54, 19, 537060, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:20,102] DEBUG django.db.backends (0.454) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('947f1e9c-94d1-4c05-a6ab-f77d6c13f3a2', 'Cynthia', 'Stone', '4122 Lisa Meadow Suite 396', 'Richardson', 'TX', '75080', '947-557-6173x725', 'silvamatthew@example.com', '2025-09-30 20:54:19.647191+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('947f1e9c-94d1-4c05-a6ab-f77d6c13f3a2', 'Cynthia', 'Stone', '4122 Lisa Meadow Suite 396', 'Richardson', 'TX', '75080', '947-557-6173x725', 'silvamatthew@example.com', datetime.datetime(2025, 9, 30, 20, 54, 19, 647191, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:20,209] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('d603b5b1-c1f4-46b1-a759-037f82ed09f8', 'Howard', 'Gay', '094 Hernandez Points', 'Irving', 'TX', '75039', '(229)885-4660x3342', 'lawrence57@example.com', '2025-09-30 20:54:20.103269+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('d603b5b1-c1f4-46b1-a759-037f82ed09f8', 'Howard', 'Gay', '094 Hernandez Points', 'Irving', 'TX', '75039', '(229)885-4660x3342', 'lawrence57@example.com', datetime.datetime(2025, 9, 30, 20, 54, 20, 103269, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:20,318] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('223153bf-1677-461e-ab76-ae0846defaf4', 'John', 'Gonzales', '8984 Mcconnell Grove', 'Flower Mound', 'TX', '75028', '+1-691-390-3671x343', 'millercatherine@example.org', '2025-09-30 20:54:20.209151+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('223153bf-1677-461e-ab76-ae0846defaf4', 'John', 'Gonzales', '8984 Mcconnell Grove', 'Flower Mound', 'TX', '75028', '+1-691-390-3671x343', 'millercatherine@example.org', datetime.datetime(2025, 9, 30, 20, 54, 20, 209151, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:20,430] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('0c01e0e7-72bd-4e23-aefe-8be1b86cd8e7', 'Stacey', 'Bryant', '98535 Kennedy Pines Suite 345', 'Plano', 'TX', '75093', '+1-271-647-1415x1155', 'hillalyssa@example.com', '2025-09-30 20:54:20.318253+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('0c01e0e7-72bd-4e23-aefe-8be1b86cd8e7', 'Stacey', 'Bryant', '98535 Kennedy Pines Suite 345', 'Plano', 'TX', '75093', '+1-271-647-1415x1155', 'hillalyssa@example.com', datetime.datetime(2025, 9, 30, 20, 54, 20, 318253, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:20,530] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('7d236cee-e120-43d3-bc67-8e5869f6717e', 'Michelle', 'Fitzpatrick', '59290 Kathleen Summit', 'Garland', 'TX', '75040', '365.497.2446', 'jerryroberts@example.com', '2025-09-30 20:54:20.432194+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('7d236cee-e120-43d3-bc67-8e5869f6717e', 'Michelle', 'Fitzpatrick', '59290 Kathleen Summit', 'Garland', 'TX', '75040', '365.497.2446', 'jerryroberts@example.com', datetime.datetime(2025, 9, 30, 20, 54, 20, 432194, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:20,636] DEBUG django.db.backends (0.094) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('0f9d3e6d-f7b7-4693-80c9-dd853a4dce13', 'Ashley', 'Garcia', '2142 Kaiser Hills', 'Frisco', 'TX', '75034', '001-691-837-0240', 'ecampbell@example.net', '2025-09-30 20:54:20.530165+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('0f9d3e6d-f7b7-4693-80c9-dd853a4dce13', 'Ashley', 'Garcia', '2142 Kaiser Hills', 'Frisco', 'TX', '75034', '001-691-837-0240', 'ecampbell@example.net', datetime.datetime(2025, 9, 30, 20, 54, 20, 530165, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:20,758] DEBUG django.db.backends (0.125) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('b1ba4b0d-b7e4-4374-aa6b-b9d2cdb55454', 'Lisa', 'Hughes', '387 Gonzalez Wall', 'Richardson', 'TX', '75080', '(553)295-7249', 'christopher34@example.net', '2025-09-30 20:54:20.636126+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('b1ba4b0d-b7e4-4374-aa6b-b9d2cdb55454', 'Lisa', 'Hughes', '387 Gonzalez Wall', 'Richardson', 'TX', '75080', '(553)295-7249', 'christopher34@example.net', datetime.datetime(2025, 9, 30, 20, 54, 20, 636126, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:20,861] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('61977ef1-41db-4512-b66c-7224e17eff1a', 'Gail', 'Smith', '716 Austin Mountain Apt. 678', 'Carrollton', 'TX', '75006', '445-544-2150x686', 'carrie27@example.com', '2025-09-30 20:54:20.758087+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('61977ef1-41db-4512-b66c-7224e17eff1a', 'Gail', 'Smith', '716 Austin Mountain Apt. 678', 'Carrollton', 'TX', '75006', '445-544-2150x686', 'carrie27@example.com', datetime.datetime(2025, 9, 30, 20, 54, 20, 758087, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:20,963] DEBUG django.db.backends (0.094) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('1c5676ba-497d-452c-b841-21be31d356db', 'Kathleen', 'Wood', '3296 Jake Street Suite 977', 'Garland', 'TX', '75040', '+1-731-231-3580x707', 'perryglenn@example.net', '2025-09-30 20:54:20.861955+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('1c5676ba-497d-452c-b841-21be31d356db', 'Kathleen', 'Wood', '3296 Jake Street Suite 977', 'Garland', 'TX', '75040', '+1-731-231-3580x707', 'perryglenn@example.net', datetime.datetime(2025, 9, 30, 20, 54, 20, 861955, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:21,083] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('d49e00f2-f89e-4807-9935-8ad0c642e25c', 'Dorothy', 'Marsh', '4294 Shawn Plains Suite 543', 'Frisco', 'TX', '75034', '+1-452-412-7918x931', 'michael88@example.net', '2025-09-30 20:54:20.979469+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('d49e00f2-f89e-4807-9935-8ad0c642e25c', 'Dorothy', 'Marsh', '4294 Shawn Plains Suite 543', 'Frisco', 'TX', '75034', '+1-452-412-7918x931', 'michael88@example.net', datetime.datetime(2025, 9, 30, 20, 54, 20, 979469, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:21,194] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('1b90b80b-bbe9-4d58-8002-5f457036c112', 'Sean', 'Francis', '0884 Jeffery Ville Suite 656', 'Irving', 'TX', '75039', '+1-800-886-2036', 'zmassey@example.net', '2025-09-30 20:54:21.083561+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('1b90b80b-bbe9-4d58-8002-5f457036c112', 'Sean', 'Francis', '0884 Jeffery Ville Suite 656', 'Irving', 'TX', '75039', '+1-800-886-2036', 'zmassey@example.net', datetime.datetime(2025, 9, 30, 20, 54, 21, 83561, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:21,302] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('7dfe316b-f1b9-4b8b-a16f-a5f206bf62e8', 'Michelle', 'Quinn', '931 Christina Extension', 'Flower Mound', 'TX', '75028', '001-327-247-5469x1121', 'mwelch@example.net', '2025-09-30 20:54:21.194103+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('7dfe316b-f1b9-4b8b-a16f-a5f206bf62e8', 'Michelle', 'Quinn', '931 Christina Extension', 'Flower Mound', 'TX', '75028', '001-327-247-5469x1121', 'mwelch@example.net', datetime.datetime(2025, 9, 30, 20, 54, 21, 194103, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:21,427] DEBUG django.db.backends (0.125) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('5e332680-c22e-4f93-b446-9af855e9f91e', 'Christopher', 'Jackson', '4989 Smith Avenue Apt. 925', 'Frisco', 'TX', '75034', '389-326-8082x93370', 'fieldsgary@example.org', '2025-09-30 20:54:21.302757+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('5e332680-c22e-4f93-b446-9af855e9f91e', 'Christopher', 'Jackson', '4989 Smith Avenue Apt. 925', 'Frisco', 'TX', '75034', '389-326-8082x93370', 'fieldsgary@example.org', datetime.datetime(2025, 9, 30, 20, 54, 21, 302757, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:21,528] DEBUG django.db.backends (0.093) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('a67972fc-4742-45fa-9e28-37068e5e7351', 'John', 'Lopez', '39584 Smith Port', 'Plano', 'TX', '75093', '+1-978-936-5242x99541', 'farrellamanda@example.org', '2025-09-30 20:54:21.427436+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('a67972fc-4742-45fa-9e28-37068e5e7351', 'John', 'Lopez', '39584 Smith Port', 'Plano', 'TX', '75093', '+1-978-936-5242x99541', 'farrellamanda@example.org', datetime.datetime(2025, 9, 30, 20, 54, 21, 427436, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:21,652] DEBUG django.db.backends (0.125) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('d7d24f4e-fad9-4556-acff-b4d83a2d971d', 'Christopher', 'Kim', '12097 Trevor Fort', 'Dallas', 'TX', '75201', '275-735-4617', 'jessicaduncan@example.net', '2025-09-30 20:54:21.528448+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('d7d24f4e-fad9-4556-acff-b4d83a2d971d', 'Christopher', 'Kim', '12097 Trevor Fort', 'Dallas', 'TX', '75201', '275-735-4617', 'jessicaduncan@example.net', datetime.datetime(2025, 9, 30, 20, 54, 21, 528448, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:21,761] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('463f6c5c-e6ba-44b3-a61b-e47533c1c1fa', 'Adrian', 'Moore', '6979 Simpson Isle Apt. 778', 'Carrollton', 'TX', '75006', '2347425576', 'jlopez@example.org', '2025-09-30 20:54:21.653799+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('463f6c5c-e6ba-44b3-a61b-e47533c1c1fa', 'Adrian', 'Moore', '6979 Simpson Isle Apt. 778', 'Carrollton', 'TX', '75006', '2347425576', 'jlopez@example.org', datetime.datetime(2025, 9, 30, 20, 54, 21, 653799, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:21,865] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('ab49747b-3a22-4e8a-9802-6dad32a56e4f', 'Daniel', 'Gilmore', '3919 Gray Lodge', 'Irving', 'TX', '75039', '+1-676-668-7325x218', 'stephaniehunt@example.net', '2025-09-30 20:54:21.762607+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('ab49747b-3a22-4e8a-9802-6dad32a56e4f', 'Daniel', 'Gilmore', '3919 Gray Lodge', 'Irving', 'TX', '75039', '+1-676-668-7325x218', 'stephaniehunt@example.net', datetime.datetime(2025, 9, 30, 20, 54, 21, 762607, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:21,975] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('7758f66a-4891-4f01-8458-f2fb610e8492', 'Tony', 'Wood', '33746 Brooks Hills Apt. 792', 'Carrollton', 'TX', '75006', '3379203225', 'huffmelissa@example.net', '2025-09-30 20:54:21.865423+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('7758f66a-4891-4f01-8458-f2fb610e8492', 'Tony', 'Wood', '33746 Brooks Hills Apt. 792', 'Carrollton', 'TX', '75006', '3379203225', 'huffmelissa@example.net', datetime.datetime(2025, 9, 30, 20, 54, 21, 865423, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:22,083] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('de543f87-7d12-44f2-a803-8693bf88f36d', 'Edward', 'Randall', '5346 Powell Bypass', 'Garland', 'TX', '75040', '215.748.8090x38670', 'sara91@example.com', '2025-09-30 20:54:21.975404+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('de543f87-7d12-44f2-a803-8693bf88f36d', 'Edward', 'Randall', '5346 Powell Bypass', 'Garland', 'TX', '75040', '215.748.8090x38670', 'sara91@example.com', datetime.datetime(2025, 9, 30, 20, 54, 21, 975404, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:22,194] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('7dc8ed7a-6060-4e64-8e8c-c189bd65260a', 'Jill', 'Lambert', '4925 Jennifer Lake Suite 021', 'Plano', 'TX', '75093', '001-378-948-1893', 'jmoreno@example.net', '2025-09-30 20:54:22.083914+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('7dc8ed7a-6060-4e64-8e8c-c189bd65260a', 'Jill', 'Lambert', '4925 Jennifer Lake Suite 021', 'Plano', 'TX', '75093', '001-378-948-1893', 'jmoreno@example.net', datetime.datetime(2025, 9, 30, 20, 54, 22, 83914, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:22,302] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('c23d3c8f-f5b5-4368-a077-2ed4659d89c2', 'Julie', 'Anderson', '5127 Davis Pine Apt. 424', 'Plano', 'TX', '75093', '001-260-391-0676x0963', 'lkent@example.org', '2025-09-30 20:54:22.194106+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('c23d3c8f-f5b5-4368-a077-2ed4659d89c2', 'Julie', 'Anderson', '5127 Davis Pine Apt. 424', 'Plano', 'TX', '75093', '001-260-391-0676x0963', 'lkent@example.org', datetime.datetime(2025, 9, 30, 20, 54, 22, 194106, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:22,417] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('fbff3fc8-a81a-430c-a770-27957d5e8d39', 'Jonathan', 'Robinson', '0364 Murray Forge Suite 675', 'Irving', 'TX', '75039', '001-368-272-4725x09084', 'jenkinsoscar@example.org', '2025-09-30 20:54:22.302232+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('fbff3fc8-a81a-430c-a770-27957d5e8d39', 'Jonathan', 'Robinson', '0364 Murray Forge Suite 675', 'Irving', 'TX', '75039', '001-368-272-4725x09084', 'jenkinsoscar@example.org', datetime.datetime(2025, 9, 30, 20, 54, 22, 302232, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:22,525] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('2bdb011e-a4fa-4f8a-84e5-1d972984ad2f', 'Edward', 'Cook', '2557 White Prairie Suite 895', 'Dallas', 'TX', '75201', '7494597170', 'knightteresa@example.com', '2025-09-30 20:54:22.418227+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('2bdb011e-a4fa-4f8a-84e5-1d972984ad2f', 'Edward', 'Cook', '2557 White Prairie Suite 895', 'Dallas', 'TX', '75201', '7494597170', 'knightteresa@example.com', datetime.datetime(2025, 9, 30, 20, 54, 22, 418227, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:22,626] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('39516da8-4f8c-430a-9de6-1a8997d76848', 'Heather', 'Walker', '5057 Hamilton Fork Suite 237', 'Arlington', 'TX', '76010', '+1-408-412-5969x66451', 'jasmine38@example.net', '2025-09-30 20:54:22.526982+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('39516da8-4f8c-430a-9de6-1a8997d76848', 'Heather', 'Walker', '5057 Hamilton Fork Suite 237', 'Arlington', 'TX', '76010', '+1-408-412-5969x66451', 'jasmine38@example.net', datetime.datetime(2025, 9, 30, 20, 54, 22, 526982, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:22,748] DEBUG django.db.backends (0.125) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('0629d45b-f145-4f49-a263-8410e8d31061', 'Paige', 'Jennings', '80464 Harding Station', 'Garland', 'TX', '75040', '(263)330-9260x335', 'ashleyking@example.com', '2025-09-30 20:54:22.626214+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('0629d45b-f145-4f49-a263-8410e8d31061', 'Paige', 'Jennings', '80464 Harding Station', 'Garland', 'TX', '75040', '(263)330-9260x335', 'ashleyking@example.com', datetime.datetime(2025, 9, 30, 20, 54, 22, 626214, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:22,850] DEBUG django.db.backends (0.094) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('ae99141a-886c-46b0-98e8-6c7b3f32a43f', 'Angela', 'Carlson', '53241 Jefferson Radial Suite 572', 'Irving', 'TX', '75039', '353.258.1758', 'danieldougherty@example.com', '2025-09-30 20:54:22.749814+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('ae99141a-886c-46b0-98e8-6c7b3f32a43f', 'Angela', 'Carlson', '53241 Jefferson Radial Suite 572', 'Irving', 'TX', '75039', '353.258.1758', 'danieldougherty@example.com', datetime.datetime(2025, 9, 30, 20, 54, 22, 749814, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:22,959] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('15329fc8-2a8a-495e-aa99-7d7b0d52dd38', 'Joshua', 'Foster', '018 Vincent Knolls', 'Denton', 'TX', '76201', '001-748-290-5566x2395', 'zhanson@example.org', '2025-09-30 20:54:22.850010+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('15329fc8-2a8a-495e-aa99-7d7b0d52dd38', 'Joshua', 'Foster', '018 Vincent Knolls', 'Denton', 'TX', '76201', '001-748-290-5566x2395', 'zhanson@example.org', datetime.datetime(2025, 9, 30, 20, 54, 22, 850010, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:23,065] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('a2593daa-a526-46db-9cc6-f79681827b9c', 'Cynthia', 'Sullivan', '9205 Beverly Court Apt. 167', 'Dallas', 'TX', '75201', '686.688.9590x521', 'estradacatherine@example.net', '2025-09-30 20:54:22.959039+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('a2593daa-a526-46db-9cc6-f79681827b9c', 'Cynthia', 'Sullivan', '9205 Beverly Court Apt. 167', 'Dallas', 'TX', '75201', '686.688.9590x521', 'estradacatherine@example.net', datetime.datetime(2025, 9, 30, 20, 54, 22, 959039, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:23,186] DEBUG django.db.backends (0.125) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('e3291049-e1b9-4ef6-b812-579a8380f270', 'Makayla', 'Watson', '11453 Jeremy Spurs Apt. 265', 'Arlington', 'TX', '76010', '311.647.1540x587', 'xnewman@example.net', '2025-09-30 20:54:23.065727+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('e3291049-e1b9-4ef6-b812-579a8380f270', 'Makayla', 'Watson', '11453 Jeremy Spurs Apt. 265', 'Arlington', 'TX', '76010', '311.647.1540x587', 'xnewman@example.net', datetime.datetime(2025, 9, 30, 20, 54, 23, 65727, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:23,287] DEBUG django.db.backends (0.094) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('0ded5987-74ec-481d-bef3-708eb098584f', 'Rachael', 'Lee', '6732 Lopez Inlet', 'Richardson', 'TX', '75080', '(435)268-8020', 'kingdakota@example.com', '2025-09-30 20:54:23.187209+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('0ded5987-74ec-481d-bef3-708eb098584f', 'Rachael', 'Lee', '6732 Lopez Inlet', 'Richardson', 'TX', '75080', '(435)268-8020', 'kingdakota@example.com', datetime.datetime(2025, 9, 30, 20, 54, 23, 187209, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:23,396] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('477d82ce-04be-466d-b708-26fe8de5977c', 'Jesse', 'Martin', '2315 Wilson Common', 'Irving', 'TX', '75039', '(285)984-4319', 'williamvalentine@example.net', '2025-09-30 20:54:23.287352+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('477d82ce-04be-466d-b708-26fe8de5977c', 'Jesse', 'Martin', '2315 Wilson Common', 'Irving', 'TX', '75039', '(285)984-4319', 'williamvalentine@example.net', datetime.datetime(2025, 9, 30, 20, 54, 23, 287352, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:23,503] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('6ca27730-60e2-49c6-9d76-9cb134e286a4', 'Randy', 'Sanchez', '46102 Tamara Roads', 'Irving', 'TX', '75039', '(233)536-9064x1040', 'michaelsmith@example.com', '2025-09-30 20:54:23.396719+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('6ca27730-60e2-49c6-9d76-9cb134e286a4', 'Randy', 'Sanchez', '46102 Tamara Roads', 'Irving', 'TX', '75039', '(233)536-9064x1040', 'michaelsmith@example.com', datetime.datetime(2025, 9, 30, 20, 54, 23, 396719, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:23,614] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('1692bd96-36bf-42a5-86bb-8bd620bf00bb', 'Erin', 'Turner', '8376 Carrie Locks', 'Garland', 'TX', '75040', '690-709-1814', 'raymondkennedy@example.net', '2025-09-30 20:54:23.503918+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('1692bd96-36bf-42a5-86bb-8bd620bf00bb', 'Erin', 'Turner', '8376 Carrie Locks', 'Garland', 'TX', '75040', '690-709-1814', 'raymondkennedy@example.net', datetime.datetime(2025, 9, 30, 20, 54, 23, 503918, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:23,741] DEBUG django.db.backends (0.125) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('b9eb5b53-6961-4b7c-972a-9d79754b4481', 'Tonya', 'Hawkins', '280 Oliver Point', 'Irving', 'TX', '75039', '855.313.5957', 'sharonarellano@example.com', '2025-09-30 20:54:23.614358+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('b9eb5b53-6961-4b7c-972a-9d79754b4481', 'Tonya', 'Hawkins', '280 Oliver Point', 'Irving', 'TX', '75039', '855.313.5957', 'sharonarellano@example.com', datetime.datetime(2025, 9, 30, 20, 54, 23, 614358, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:23,849] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('c7bcf88d-8f1e-4e56-acc8-e14422d5d64b', 'William', 'Jensen', '86641 Sharon Squares Suite 644', 'Plano', 'TX', '75093', '959.917.1602x6985', 'poliver@example.org', '2025-09-30 20:54:23.741212+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('c7bcf88d-8f1e-4e56-acc8-e14422d5d64b', 'William', 'Jensen', '86641 Sharon Squares Suite 644', 'Plano', 'TX', '75093', '959.917.1602x6985', 'poliver@example.org', datetime.datetime(2025, 9, 30, 20, 54, 23, 741212, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:23,958] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('320afa53-8855-4a47-bf44-df0e6f79aa70', 'Thomas', 'Thomas', '107 Brandy Knolls', 'Richardson', 'TX', '75080', '+1-521-801-1891x42906', 'xtaylor@example.net', '2025-09-30 20:54:23.849284+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('320afa53-8855-4a47-bf44-df0e6f79aa70', 'Thomas', 'Thomas', '107 Brandy Knolls', 'Richardson', 'TX', '75080', '+1-521-801-1891x42906', 'xtaylor@example.net', datetime.datetime(2025, 9, 30, 20, 54, 23, 849284, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:24,068] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('08a9dac9-a6e5-4c68-9d84-03374d00be5f', 'Annette', 'Evans', '858 Kenneth Crest', 'Frisco', 'TX', '75034', '8757984062', 'dana99@example.net', '2025-09-30 20:54:23.958707+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('08a9dac9-a6e5-4c68-9d84-03374d00be5f', 'Annette', 'Evans', '858 Kenneth Crest', 'Frisco', 'TX', '75034', '8757984062', 'dana99@example.net', datetime.datetime(2025, 9, 30, 20, 54, 23, 958707, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:24,178] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('a3c30999-f119-49e3-b6d5-358dad0e9191', 'Wendy', 'Wilson', '882 Joshua Crossing Suite 627', 'Flower Mound', 'TX', '75028', '001-330-296-2661x180', 'vhull@example.com', '2025-09-30 20:54:24.068849+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('a3c30999-f119-49e3-b6d5-358dad0e9191', 'Wendy', 'Wilson', '882 Joshua Crossing Suite 627', 'Flower Mound', 'TX', '75028', '001-330-296-2661x180', 'vhull@example.com', datetime.datetime(2025, 9, 30, 20, 54, 24, 68849, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:24,318] DEBUG django.db.backends (0.140) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('69a9bcab-1878-4f59-a4bd-2b52e98ca48f', 'Jonathan', 'Decker', '05191 Michael Parkways Suite 031', 'Plano', 'TX', '75093', '701.916.7290', 'garyporter@example.org', '2025-09-30 20:54:24.179895+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('69a9bcab-1878-4f59-a4bd-2b52e98ca48f', 'Jonathan', 'Decker', '05191 Michael Parkways Suite 031', 'Plano', 'TX', '75093', '701.916.7290', 'garyporter@example.org', datetime.datetime(2025, 9, 30, 20, 54, 24, 179895, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:24,427] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('ad4b21d1-b440-4306-b22f-7c77af7e7e19', 'Jason', 'Brooks', '06296 Robert Burgs Suite 853', 'Dallas', 'TX', '75201', '751-673-1876', 'ofinley@example.com', '2025-09-30 20:54:24.318855+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('ad4b21d1-b440-4306-b22f-7c77af7e7e19', 'Jason', 'Brooks', '06296 Robert Burgs Suite 853', 'Dallas', 'TX', '75201', '751-673-1876', 'ofinley@example.com', datetime.datetime(2025, 9, 30, 20, 54, 24, 318855, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:24,536] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('3413dd3c-71cb-4153-8b64-9e9c6d7e0385', 'Diane', 'Romero', '31706 Angela Field', 'Plano', 'TX', '75093', '268.770.3335x235', 'courtneylane@example.net', '2025-09-30 20:54:24.427455+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('3413dd3c-71cb-4153-8b64-9e9c6d7e0385', 'Diane', 'Romero', '31706 Angela Field', 'Plano', 'TX', '75093', '268.770.3335x235', 'courtneylane@example.net', datetime.datetime(2025, 9, 30, 20, 54, 24, 427455, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:24,647] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('341fddb4-fb9e-46b2-ad16-32a0e838151a', 'Lynn', 'Wong', '597 Elliott Port', 'Denton', 'TX', '76201', '613-409-2391x34041', 'bradley88@example.net', '2025-09-30 20:54:24.536823+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('341fddb4-fb9e-46b2-ad16-32a0e838151a', 'Lynn', 'Wong', '597 Elliott Port', 'Denton', 'TX', '76201', '613-409-2391x34041', 'bradley88@example.net', datetime.datetime(2025, 9, 30, 20, 54, 24, 536823, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:24,755] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('9e2f4481-22d8-42eb-bd03-e0a7183db1ef', 'Guy', 'Cameron', '478 Thompson Motorway', 'Frisco', 'TX', '75034', '+1-999-678-3440x5800', 'nicole19@example.org', '2025-09-30 20:54:24.647796+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('9e2f4481-22d8-42eb-bd03-e0a7183db1ef', 'Guy', 'Cameron', '478 Thompson Motorway', 'Frisco', 'TX', '75034', '+1-999-678-3440x5800', 'nicole19@example.org', datetime.datetime(2025, 9, 30, 20, 54, 24, 647796, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:24,880] DEBUG django.db.backends (0.125) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('a101fc1a-2b39-4867-9100-f1604e6d6ccb', 'Jesus', 'Diaz', '6345 Joshua Well', 'Garland', 'TX', '75040', '001-910-795-8456', 'oliviahowell@example.org', '2025-09-30 20:54:24.755447+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('a101fc1a-2b39-4867-9100-f1604e6d6ccb', 'Jesus', 'Diaz', '6345 Joshua Well', 'Garland', 'TX', '75040', '001-910-795-8456', 'oliviahowell@example.org', datetime.datetime(2025, 9, 30, 20, 54, 24, 755447, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:24,989] DEBUG django.db.backends (0.094) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('f2db805d-e71f-4476-8ebd-136055b88cb2', 'Nathan', 'Frazier', '3838 David Drives', 'Denton', 'TX', '76201', '001-288-357-8716', 'sarahburton@example.org', '2025-09-30 20:54:24.896016+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('f2db805d-e71f-4476-8ebd-136055b88cb2', 'Nathan', 'Frazier', '3838 David Drives', 'Denton', 'TX', '76201', '001-288-357-8716', 'sarahburton@example.org', datetime.datetime(2025, 9, 30, 20, 54, 24, 896016, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:25,114] DEBUG django.db.backends (0.125) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('441d7172-cd02-4159-8c62-878b3f65cc70', 'Diana', 'Waters', '496 Jerome Glen', 'Dallas', 'TX', '75201', '865-443-9153x29118', 'tracey66@example.net', '2025-09-30 20:54:24.989871+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('441d7172-cd02-4159-8c62-878b3f65cc70', 'Diana', 'Waters', '496 Jerome Glen', 'Dallas', 'TX', '75201', '865-443-9153x29118', 'tracey66@example.net', datetime.datetime(2025, 9, 30, 20, 54, 24, 989871, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:25,224] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('b064e4c2-4a85-4a3f-a123-e63c5e310663', 'Daniel', 'Farrell', '9677 Elaine Points Suite 454', 'Plano', 'TX', '75093', '(338)307-9583x637', 'timothyclements@example.net', '2025-09-30 20:54:25.114865+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('b064e4c2-4a85-4a3f-a123-e63c5e310663', 'Daniel', 'Farrell', '9677 Elaine Points Suite 454', 'Plano', 'TX', '75093', '(338)307-9583x637', 'timothyclements@example.net', datetime.datetime(2025, 9, 30, 20, 54, 25, 114865, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:25,333] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('4b086b6b-8ab1-4142-83cc-448af1ecc9f1', 'Courtney', 'Ballard', '48134 Perkins Via Suite 417', 'Richardson', 'TX', '75080', '(535)497-2388', 'nwall@example.org', '2025-09-30 20:54:25.224036+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('4b086b6b-8ab1-4142-83cc-448af1ecc9f1', 'Courtney', 'Ballard', '48134 Perkins Via Suite 417', 'Richardson', 'TX', '75080', '(535)497-2388', 'nwall@example.org', datetime.datetime(2025, 9, 30, 20, 54, 25, 224036, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:25,444] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('dacd03e7-860f-4081-9071-e6617abbcf1c', 'Robert', 'Garcia', '23242 Sharp Stream Apt. 705', 'Flower Mound', 'TX', '75028', '+1-857-627-1759x3747', 'pughgeorge@example.com', '2025-09-30 20:54:25.333405+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('dacd03e7-860f-4081-9071-e6617abbcf1c', 'Robert', 'Garcia', '23242 Sharp Stream Apt. 705', 'Flower Mound', 'TX', '75028', '+1-857-627-1759x3747', 'pughgeorge@example.com', datetime.datetime(2025, 9, 30, 20, 54, 25, 333405, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:25,546] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('66808dd3-d40a-4350-9cd2-d5354cbf4483', 'Kimberly', 'Livingston', '4097 Alexander Cliff', 'Carrollton', 'TX', '75006', '476.956.6968x132', 'martineznicole@example.net', '2025-09-30 20:54:25.444092+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('66808dd3-d40a-4350-9cd2-d5354cbf4483', 'Kimberly', 'Livingston', '4097 Alexander Cliff', 'Carrollton', 'TX', '75006', '476.956.6968x132', 'martineznicole@example.net', datetime.datetime(2025, 9, 30, 20, 54, 25, 444092, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:25,655] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('b8de0dd0-5aa8-47e1-85d7-cb5fd35297aa', 'John', 'Bradley', '68744 Karen Junctions Apt. 999', 'Flower Mound', 'TX', '75028', '732-441-6157', 'sellersgina@example.org', '2025-09-30 20:54:25.546013+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('b8de0dd0-5aa8-47e1-85d7-cb5fd35297aa', 'John', 'Bradley', '68744 Karen Junctions Apt. 999', 'Flower Mound', 'TX', '75028', '732-441-6157', 'sellersgina@example.org', datetime.datetime(2025, 9, 30, 20, 54, 25, 546013, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:25,762] DEBUG django.db.backends (0.094) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('22bcd933-7e44-4e4a-b249-7052ee4a947c', 'Jamie', 'Navarro', '06585 Tran Route Suite 355', 'Arlington', 'TX', '76010', '514-261-4584', 'shane17@example.org', '2025-09-30 20:54:25.655441+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('22bcd933-7e44-4e4a-b249-7052ee4a947c', 'Jamie', 'Navarro', '06585 Tran Route Suite 355', 'Arlington', 'TX', '76010', '514-261-4584', 'shane17@example.org', datetime.datetime(2025, 9, 30, 20, 54, 25, 655441, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:25,883] DEBUG django.db.backends (0.125) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('a2bec44d-03d0-413a-9245-a4e47411fe21', 'Rachel', 'Johnson', '431 Gill Streets Apt. 200', 'Richardson', 'TX', '75080', '206.588.4893x833', 'stephaniehunter@example.org', '2025-09-30 20:54:25.762238+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('a2bec44d-03d0-413a-9245-a4e47411fe21', 'Rachel', 'Johnson', '431 Gill Streets Apt. 200', 'Richardson', 'TX', '75080', '206.588.4893x833', 'stephaniehunter@example.org', datetime.datetime(2025, 9, 30, 20, 54, 25, 762238, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:25,989] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('92e45f25-ac34-4d76-9271-876158e7b678', 'Raven', 'Archer', '47378 Frank Ridge Apt. 355', 'Frisco', 'TX', '75034', '8198245027', 'jcobb@example.org', '2025-09-30 20:54:25.884761+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('92e45f25-ac34-4d76-9271-876158e7b678', 'Raven', 'Archer', '47378 Frank Ridge Apt. 355', 'Frisco', 'TX', '75034', '8198245027', 'jcobb@example.org', datetime.datetime(2025, 9, 30, 20, 54, 25, 884761, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:26,099] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('0e29c364-4d56-4876-b1dc-e73ea725f471', 'Christina', 'Haynes', '5075 Curtis Wall', 'Frisco', 'TX', '75034', '001-516-588-6255', 'martinbruce@example.org', '2025-09-30 20:54:25.989673+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('0e29c364-4d56-4876-b1dc-e73ea725f471', 'Christina', 'Haynes', '5075 Curtis Wall', 'Frisco', 'TX', '75034', '001-516-588-6255', 'martinbruce@example.org', datetime.datetime(2025, 9, 30, 20, 54, 25, 989673, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:26,216] DEBUG django.db.backends (0.125) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('a2fddb44-8788-4982-a35f-5fcb168c8725', 'Leslie', 'Guerra', '9075 Kelly Mountain Suite 226', 'Carrollton', 'TX', '75006', '2027535231', 'kimquinn@example.org', '2025-09-30 20:54:26.099039+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('a2fddb44-8788-4982-a35f-5fcb168c8725', 'Leslie', 'Guerra', '9075 Kelly Mountain Suite 226', 'Carrollton', 'TX', '75006', '2027535231', 'kimquinn@example.org', datetime.datetime(2025, 9, 30, 20, 54, 26, 99039, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:26,325] DEBUG django.db.backends (0.093) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('8a083d1d-f01c-45f8-b0d2-79d17c1d1dd1', 'Beverly', 'Rodriguez', '9789 Simpson Station', 'Denton', 'TX', '76201', '(725)602-4269', 'maria73@example.org', '2025-09-30 20:54:26.217925+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('8a083d1d-f01c-45f8-b0d2-79d17c1d1dd1', 'Beverly', 'Rodriguez', '9789 Simpson Station', 'Denton', 'TX', '76201', '(725)602-4269', 'maria73@example.org', datetime.datetime(2025, 9, 30, 20, 54, 26, 217925, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:26,427] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('384e8749-5c7e-466d-8a5a-3bff6c57106d', 'Jacob', 'Ramirez', '982 Richard Way', 'Richardson', 'TX', '75080', '001-611-451-2809x59385', 'mcross@example.org', '2025-09-30 20:54:26.325681+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('384e8749-5c7e-466d-8a5a-3bff6c57106d', 'Jacob', 'Ramirez', '982 Richard Way', 'Richardson', 'TX', '75080', '001-611-451-2809x59385', 'mcross@example.org', datetime.datetime(2025, 9, 30, 20, 54, 26, 325681, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:26,536] DEBUG django.db.backends (0.094) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('c1cdc14e-c561-464b-b1da-f9a63eb75b59', 'Tyler', 'Houston', '3920 Lisa Greens Suite 876', 'Plano', 'TX', '75093', '+1-731-441-3531', 'larsenjeffrey@example.org', '2025-09-30 20:54:26.443399+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('c1cdc14e-c561-464b-b1da-f9a63eb75b59', 'Tyler', 'Houston', '3920 Lisa Greens Suite 876', 'Plano', 'TX', '75093', '+1-731-441-3531', 'larsenjeffrey@example.org', datetime.datetime(2025, 9, 30, 20, 54, 26, 443399, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:26,661] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('50f77020-350c-4fbd-a012-79e368c28e80', 'Chad', 'Garza', '32773 Jackson Oval Suite 321', 'Flower Mound', 'TX', '75028', '896.904.9369', 'kadams@example.net', '2025-09-30 20:54:26.552449+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('50f77020-350c-4fbd-a012-79e368c28e80', 'Chad', 'Garza', '32773 Jackson Oval Suite 321', 'Flower Mound', 'TX', '75028', '896.904.9369', 'kadams@example.net', datetime.datetime(2025, 9, 30, 20, 54, 26, 552449, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:26,765] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('0ee1fd97-74f3-46b1-9840-921477af1d25', 'Nathaniel', 'Mooney', '861 Lopez Islands Apt. 070', 'Garland', 'TX', '75040', '001-473-943-2839x3326', 'debraprice@example.org', '2025-09-30 20:54:26.661859+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('0ee1fd97-74f3-46b1-9840-921477af1d25', 'Nathaniel', 'Mooney', '861 Lopez Islands Apt. 070', 'Garland', 'TX', '75040', '001-473-943-2839x3326', 'debraprice@example.org', datetime.datetime(2025, 9, 30, 20, 54, 26, 661859, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:26,865] DEBUG django.db.backends (0.094) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('a4ddc5a7-8ff5-4119-b8de-4d4be644607d', 'John', 'Lopez', '871 Amanda Ford Apt. 047', 'Flower Mound', 'TX', '75028', '(958)798-0300', 'brandon36@example.org', '2025-09-30 20:54:26.765204+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('a4ddc5a7-8ff5-4119-b8de-4d4be644607d', 'John', 'Lopez', '871 Amanda Ford Apt. 047', 'Flower Mound', 'TX', '75028', '(958)798-0300', 'brandon36@example.org', datetime.datetime(2025, 9, 30, 20, 54, 26, 765204, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:26,974] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('ece303b8-6e3f-46e3-9b22-e25f56ff689c', 'Brian', 'Butler', '256 Davis Cliff Apt. 306', 'Carrollton', 'TX', '75006', '673-596-3864x4132', 'marylarson@example.net', '2025-09-30 20:54:26.865168+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('ece303b8-6e3f-46e3-9b22-e25f56ff689c', 'Brian', 'Butler', '256 Davis Cliff Apt. 306', 'Carrollton', 'TX', '75006', '673-596-3864x4132', 'marylarson@example.net', datetime.datetime(2025, 9, 30, 20, 54, 26, 865168, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:27,084] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('280b1526-e5aa-40e8-8a8d-11fda57a24dd', 'Roy', 'Hall', '5918 Andersen Heights', 'Garland', 'TX', '75040', '322-947-1916x422', 'elliskevin@example.org', '2025-09-30 20:54:26.974961+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('280b1526-e5aa-40e8-8a8d-11fda57a24dd', 'Roy', 'Hall', '5918 Andersen Heights', 'Garland', 'TX', '75040', '322-947-1916x422', 'elliskevin@example.org', datetime.datetime(2025, 9, 30, 20, 54, 26, 974961, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:27,205] DEBUG django.db.backends (0.125) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('1574d576-ec61-4942-972e-3782804bb394', 'Catherine', 'Faulkner', '644 Grant Circle Suite 363', 'Garland', 'TX', '75040', '001-250-796-3917', 'amber71@example.com', '2025-09-30 20:54:27.084037+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('1574d576-ec61-4942-972e-3782804bb394', 'Catherine', 'Faulkner', '644 Grant Circle Suite 363', 'Garland', 'TX', '75040', '001-250-796-3917', 'amber71@example.com', datetime.datetime(2025, 9, 30, 20, 54, 27, 84037, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:27,314] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('7dbd22c8-7183-44df-b5f9-7172437a574d', 'Eric', 'Vargas', '101 Davis Rue Apt. 833', 'Dallas', 'TX', '75201', '408-215-2497x45698', 'ashley62@example.com', '2025-09-30 20:54:27.206124+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('7dbd22c8-7183-44df-b5f9-7172437a574d', 'Eric', 'Vargas', '101 Davis Rue Apt. 833', 'Dallas', 'TX', '75201', '408-215-2497x45698', 'ashley62@example.com', datetime.datetime(2025, 9, 30, 20, 54, 27, 206124, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:27,421] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('75d360cb-a1fa-4040-876c-bb56454e0931', 'Suzanne', 'Smith', '3595 Jessica Isle', 'Irving', 'TX', '75039', '+1-806-515-1256x42422', 'cochrancharles@example.com', '2025-09-30 20:54:27.314115+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('75d360cb-a1fa-4040-876c-bb56454e0931', 'Suzanne', 'Smith', '3595 Jessica Isle', 'Irving', 'TX', '75039', '+1-806-515-1256x42422', 'cochrancharles@example.com', datetime.datetime(2025, 9, 30, 20, 54, 27, 314115, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:27,532] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('593f1aff-ebc2-4c41-8597-3ea2e2ee6576', 'Matthew', 'Lewis', '331 Mckee Land Apt. 938', 'Irving', 'TX', '75039', '850.332.2480x5530', 'rebeccabrown@example.org', '2025-09-30 20:54:27.422854+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('593f1aff-ebc2-4c41-8597-3ea2e2ee6576', 'Matthew', 'Lewis', '331 Mckee Land Apt. 938', 'Irving', 'TX', '75039', '850.332.2480x5530', 'rebeccabrown@example.org', datetime.datetime(2025, 9, 30, 20, 54, 27, 422854, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:27,639] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('6d011a9e-d13b-43bb-a115-7eebd37b16b9', 'Laurie', 'Singh', '576 Anna Circles', 'Dallas', 'TX', '75201', '+1-204-631-8341x3777', 'tammygomez@example.org', '2025-09-30 20:54:27.533662+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('6d011a9e-d13b-43bb-a115-7eebd37b16b9', 'Laurie', 'Singh', '576 Anna Circles', 'Dallas', 'TX', '75201', '+1-204-631-8341x3777', 'tammygomez@example.org', datetime.datetime(2025, 9, 30, 20, 54, 27, 533662, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:27,747] DEBUG django.db.backends (0.094) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('d14709cb-5bb1-46a5-8d72-14d830cf4177', 'Melissa', 'Estrada', '23145 Andrew Curve Apt. 060', 'Garland', 'TX', '75040', '930-644-2707', 'ramirezcrystal@example.org', '2025-09-30 20:54:27.640175+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('d14709cb-5bb1-46a5-8d72-14d830cf4177', 'Melissa', 'Estrada', '23145 Andrew Curve Apt. 060', 'Garland', 'TX', '75040', '930-644-2707', 'ramirezcrystal@example.org', datetime.datetime(2025, 9, 30, 20, 54, 27, 640175, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:27,847] DEBUG django.db.backends (0.094) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('bbb5cfdc-9504-4870-bc0e-71a16dfb1525', 'Jennifer', 'Whitaker', '497 Owen Walk', 'Dallas', 'TX', '75201', '(977)785-2075x168', 'yvettehernandez@example.net', '2025-09-30 20:54:27.748443+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('bbb5cfdc-9504-4870-bc0e-71a16dfb1525', 'Jennifer', 'Whitaker', '497 Owen Walk', 'Dallas', 'TX', '75201', '(977)785-2075x168', 'yvettehernandez@example.net', datetime.datetime(2025, 9, 30, 20, 54, 27, 748443, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:27,965] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('4c2bca4d-3fe0-4c9d-af02-8cd85cb5b3c0', 'Perry', 'Clarke', '740 Evans Crossing', 'Denton', 'TX', '76201', '535-866-0104x1511', 'lisacarter@example.com', '2025-09-30 20:54:27.847394+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('4c2bca4d-3fe0-4c9d-af02-8cd85cb5b3c0', 'Perry', 'Clarke', '740 Evans Crossing', 'Denton', 'TX', '76201', '535-866-0104x1511', 'lisacarter@example.com', datetime.datetime(2025, 9, 30, 20, 54, 27, 847394, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:28,073] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('446f1b45-741a-4b95-9c98-e06fd12b68f6', 'Sharon', 'Fuentes', '7276 Harris Groves Suite 283', 'Arlington', 'TX', '76010', '+1-347-448-7314', 'johnmiller@example.net', '2025-09-30 20:54:27.966765+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('446f1b45-741a-4b95-9c98-e06fd12b68f6', 'Sharon', 'Fuentes', '7276 Harris Groves Suite 283', 'Arlington', 'TX', '76010', '+1-347-448-7314', 'johnmiller@example.net', datetime.datetime(2025, 9, 30, 20, 54, 27, 966765, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:28,177] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('3e65ef51-69a8-4d56-9b8a-aa5f59cb36d9', 'William', 'Stewart', '243 David Lights', 'Garland', 'TX', '75040', '477.997.9815x3047', 'sharon76@example.com', '2025-09-30 20:54:28.075019+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('3e65ef51-69a8-4d56-9b8a-aa5f59cb36d9', 'William', 'Stewart', '243 David Lights', 'Garland', 'TX', '75040', '477.997.9815x3047', 'sharon76@example.com', datetime.datetime(2025, 9, 30, 20, 54, 28, 75019, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:28,294] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('86e6523b-516f-4600-8b40-2333dd9d20ea', 'John', 'Grimes', '6646 George Turnpike', 'Frisco', 'TX', '75034', '642-879-6548', 'qwilson@example.com', '2025-09-30 20:54:28.177544+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('86e6523b-516f-4600-8b40-2333dd9d20ea', 'John', 'Grimes', '6646 George Turnpike', 'Frisco', 'TX', '75034', '642-879-6548', 'qwilson@example.com', datetime.datetime(2025, 9, 30, 20, 54, 28, 177544, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:28,740] DEBUG django.db.backends (0.437) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('2e38eb9c-4e9b-42cd-845b-fa2c195aa8b9', 'Jamie', 'Ramos', '0867 Laura Avenue Apt. 715', 'Dallas', 'TX', '75201', '311.644.7581x0030', 'coltonpeters@example.net', '2025-09-30 20:54:28.295058+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('2e38eb9c-4e9b-42cd-845b-fa2c195aa8b9', 'Jamie', 'Ramos', '0867 Laura Avenue Apt. 715', 'Dallas', 'TX', '75201', '311.644.7581x0030', 'coltonpeters@example.net', datetime.datetime(2025, 9, 30, 20, 54, 28, 295058, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:28,849] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('849a16d2-3cb6-4778-8400-35cc4cc5e51d', 'William', 'Santiago', '3407 Melinda Plain', 'Frisco', 'TX', '75034', '(728)308-0547x136', 'terrellkelly@example.net', '2025-09-30 20:54:28.740177+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('849a16d2-3cb6-4778-8400-35cc4cc5e51d', 'William', 'Santiago', '3407 Melinda Plain', 'Frisco', 'TX', '75034', '(728)308-0547x136', 'terrellkelly@example.net', datetime.datetime(2025, 9, 30, 20, 54, 28, 740177, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:28,958] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('c5fff059-f21f-4da1-9cca-b9441b0546d1', 'Bradley', 'Higgins', '0965 Carter Crescent Suite 046', 'Denton', 'TX', '76201', '+1-204-773-2224', 'henrybarry@example.org', '2025-09-30 20:54:28.849245+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('c5fff059-f21f-4da1-9cca-b9441b0546d1', 'Bradley', 'Higgins', '0965 Carter Crescent Suite 046', 'Denton', 'TX', '76201', '+1-204-773-2224', 'henrybarry@example.org', datetime.datetime(2025, 9, 30, 20, 54, 28, 849245, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:29,067] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('bc9faba5-bbcb-42f6-92e3-425e4e0d76d0', 'Kristi', 'Caldwell', '110 Leslie Street Apt. 194', 'Carrollton', 'TX', '75006', '702.238.6578', 'brendasmith@example.org', '2025-09-30 20:54:28.958343+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('bc9faba5-bbcb-42f6-92e3-425e4e0d76d0', 'Kristi', 'Caldwell', '110 Leslie Street Apt. 194', 'Carrollton', 'TX', '75006', '702.238.6578', 'brendasmith@example.org', datetime.datetime(2025, 9, 30, 20, 54, 28, 958343, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:29,177] DEBUG django.db.backends (0.110) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('9ac0554e-5e33-4f6f-882b-7a15818e14ac', 'Daniel', 'Ellison', '63833 Christopher Lodge Apt. 931', 'Denton', 'TX', '76201', '(227)483-4000x2116', 'kayla86@example.com', '2025-09-30 20:54:29.067765+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('9ac0554e-5e33-4f6f-882b-7a15818e14ac', 'Daniel', 'Ellison', '63833 Christopher Lodge Apt. 931', 'Denton', 'TX', '76201', '(227)483-4000x2116', 'kayla86@example.com', datetime.datetime(2025, 9, 30, 20, 54, 29, 67765, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 22:54:29,286] DEBUG django.db.backends (0.109) INSERT INTO "customers_registeredcustomer" ("unique_customer_id", "first_name", "last_name", "street_address", "city", "state", "zipcode", "phone", "email", "created_at") VALUES ('7cefab2f-1d0e-4f9e-b67d-15d5674d54f1', 'Nina', 'Edwards', '52781 Hudson Plaza Apt. 636', 'Arlington', 'TX', '76010', '+1-926-649-4603', 'nancy95@example.org', '2025-09-30 20:54:29.177924+00:00'::timestamptz) RETURNING "customers_registeredcustomer"."id"; args=('7cefab2f-1d0e-4f9e-b67d-15d5674d54f1', 'Nina', 'Edwards', '52781 Hudson Plaza Apt. 636', 'Arlington', 'TX', '76010', '+1-926-649-4603', 'nancy95@example.org', datetime.datetime(2025, 9, 30, 20, 54, 29, 177924, tzinfo=datetime.timezone.utc)); alias=default
[2025-09-30 23:05:03,531] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 23:05:03,759] DEBUG django.db.backends (0.219) DELETE FROM "scheduling_jobassignment"; args=(); alias=default
[2025-09-30 23:05:03,878] DEBUG django.db.backends (0.125) COMMIT; args=None; alias=default
[2025-09-30 23:05:04,115] DEBUG django.db.backends (0.234) SELECT "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id" FROM "scheduling_booking"; args=(); alias=default
[2025-09-30 23:05:04,117] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 23:05:04,345] DEBUG django.db.backends (0.235) DELETE FROM "scheduling_jobassignment" WHERE "scheduling_jobassignment"."booking_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155); args=(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155); alias=default
[2025-09-30 23:05:04,470] DEBUG django.db.backends (0.125) DELETE FROM "scheduling_booking" WHERE "scheduling_booking"."id" IN (155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56); args=(155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56); alias=default
[2025-09-30 23:05:04,579] DEBUG django.db.backends (0.109) DELETE FROM "scheduling_booking" WHERE "scheduling_booking"."id" IN (55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1); args=(55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1); alias=default
[2025-09-30 23:05:04,689] DEBUG django.db.backends (0.109) COMMIT; args=None; alias=default
[2025-09-30 23:05:04,814] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee"; args=(); alias=default
[2025-09-30 23:05:04,814] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 23:05:05,033] DEBUG django.db.backends (0.219) DELETE FROM "scheduling_jobassignment" WHERE "scheduling_jobassignment"."employee_id" IN (1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15); args=(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15); alias=default
[2025-09-30 23:05:05,142] DEBUG django.db.backends (0.109) DELETE FROM "scheduling_employee" WHERE "scheduling_employee"."id" IN (15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1); args=(15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1); alias=default
[2025-09-30 23:05:05,252] DEBUG django.db.backends (0.110) COMMIT; args=None; alias=default
[2025-09-30 23:05:05,376] DEBUG django.db.backends (0.125) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot"; args=(); alias=default
[2025-09-30 23:05:05,478] DEBUG django.db.backends (0.094) SELECT "scheduling_booking"."id" FROM "scheduling_booking" WHERE "scheduling_booking"."time_slot_id" IN (1, 2, 3, 4); args=(1, 2, 3, 4); alias=default
[2025-09-30 23:05:05,478] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 23:05:05,689] DEBUG django.db.backends (0.218) DELETE FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" IN (4, 3, 2, 1); args=(4, 3, 2, 1); alias=default
[2025-09-30 23:05:05,813] DEBUG django.db.backends (0.125) COMMIT; args=None; alias=default
[2025-09-30 23:05:05,923] DEBUG django.db.backends (0.110) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory"; args=(); alias=default
[2025-09-30 23:05:06,042] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" IN (1, 2, 3); args=(1, 2, 3); alias=default
[2025-09-30 23:05:06,142] DEBUG django.db.backends (0.093) SELECT "scheduling_booking"."id" FROM "scheduling_booking" WHERE "scheduling_booking"."service_category_id" IN (1, 2, 3); args=(1, 2, 3); alias=default
[2025-09-30 23:05:06,142] DEBUG django.db.backends (0.000) BEGIN; args=None; alias=default
[2025-09-30 23:05:06,361] DEBUG django.db.backends (0.219) DELETE FROM "scheduling_servicecategory" WHERE "scheduling_servicecategory"."id" IN (3, 2, 1); args=(3, 2, 1); alias=default
[2025-09-30 23:05:06,470] DEBUG django.db.backends (0.110) COMMIT; args=None; alias=default
[2025-09-30 23:05:06,609] DEBUG django.db.backends (0.140) INSERT INTO "scheduling_servicecategory" ("name") VALUES ('Garage/Basement') RETURNING "scheduling_servicecategory"."id"; args=('Garage/Basement',); alias=default
[2025-09-30 23:05:06,710] DEBUG django.db.backends (0.094) INSERT INTO "scheduling_servicecategory" ("name") VALUES ('Lawncare') RETURNING "scheduling_servicecategory"."id"; args=('Lawncare',); alias=default
[2025-09-30 23:05:06,829] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_servicecategory" ("name") VALUES ('House Cleaning') RETURNING "scheduling_servicecategory"."id"; args=('House Cleaning',); alias=default
[2025-09-30 23:05:06,950] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_timeslot" ("label") VALUES ('7:30-9:30') RETURNING "scheduling_timeslot"."id"; args=('7:30-9:30',); alias=default
[2025-09-30 23:05:07,064] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_timeslot" ("label") VALUES ('10:00-12:00') RETURNING "scheduling_timeslot"."id"; args=('10:00-12:00',); alias=default
[2025-09-30 23:05:07,173] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_timeslot" ("label") VALUES ('12:30-2:30') RETURNING "scheduling_timeslot"."id"; args=('12:30-2:30',); alias=default
[2025-09-30 23:05:07,282] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_timeslot" ("label") VALUES ('3:00-5:00') RETURNING "scheduling_timeslot"."id"; args=('3:00-5:00',); alias=default
[2025-09-30 23:05:07,392] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Tiffany Kim', '1000 Ballpark Way, Arlington, TX 76011', 4) RETURNING "scheduling_employee"."id"; args=('Tiffany Kim', '1000 Ballpark Way, Arlington, TX 76011', 4); alias=default
[2025-09-30 23:05:07,509] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Tammy Moore', '1155 Union Cir, Denton, TX 76203', 4) RETURNING "scheduling_employee"."id"; args=('Tammy Moore', '1155 Union Cir, Denton, TX 76203', 4); alias=default
[2025-09-30 23:05:07,627] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Robert Kidd', '3000 N Belt Line Rd, Irving, TX 75062', 4) RETURNING "scheduling_employee"."id"; args=('Robert Kidd', '3000 N Belt Line Rd, Irving, TX 75062', 4); alias=default
[2025-09-30 23:05:07,735] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Nicholas Kelly', '1100 Long Prairie Rd, Flower Mound, TX 75028', 4) RETURNING "scheduling_employee"."id"; args=('Nicholas Kelly', '1100 Long Prairie Rd, Flower Mound, TX 75028', 4); alias=default
[2025-09-30 23:05:08,174] DEBUG django.db.backends (0.438) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Mr. Joseph Brown MD', '1000 Ballpark Way, Arlington, TX 76011', 4) RETURNING "scheduling_employee"."id"; args=('Mr. Joseph Brown MD', '1000 Ballpark Way, Arlington, TX 76011', 4); alias=default
[2025-09-30 23:05:08,283] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Shawn Perez', '3900 Gaston Ave, Dallas, TX 75246', 5) RETURNING "scheduling_employee"."id"; args=('Shawn Perez', '3900 Gaston Ave, Dallas, TX 75246', 5); alias=default
[2025-09-30 23:05:08,392] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Jennifer Austin', '3500 Oak Lawn Ave, Dallas, TX 75219', 5) RETURNING "scheduling_employee"."id"; args=('Jennifer Austin', '3500 Oak Lawn Ave, Dallas, TX 75219', 5); alias=default
[2025-09-30 23:05:08,514] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Edward Franklin', '1100 Long Prairie Rd, Flower Mound, TX 75028', 5) RETURNING "scheduling_employee"."id"; args=('Edward Franklin', '1100 Long Prairie Rd, Flower Mound, TX 75028', 5); alias=default
[2025-09-30 23:05:08,621] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Andrew Rodriguez', '2601 Preston Rd, Frisco, TX 75034', 5) RETURNING "scheduling_employee"."id"; args=('Andrew Rodriguez', '2601 Preston Rd, Frisco, TX 75034', 5); alias=default
[2025-09-30 23:05:08,726] DEBUG django.db.backends (0.094) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Tyler Harper', '3500 Oak Lawn Ave, Dallas, TX 75219', 5) RETURNING "scheduling_employee"."id"; args=('Tyler Harper', '3500 Oak Lawn Ave, Dallas, TX 75219', 5); alias=default
[2025-09-30 23:05:08,846] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Gloria Thomas', '3900 Gaston Ave, Dallas, TX 75246', 6) RETURNING "scheduling_employee"."id"; args=('Gloria Thomas', '3900 Gaston Ave, Dallas, TX 75246', 6); alias=default
[2025-09-30 23:05:08,955] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Michael Drake', '123 Greenville Ave, Dallas, TX 75206', 6) RETURNING "scheduling_employee"."id"; args=('Michael Drake', '123 Greenville Ave, Dallas, TX 75206', 6); alias=default
[2025-09-30 23:05:09,064] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Anna Frazier', '1400 Pacific Ave, Dallas, TX 75202', 6) RETURNING "scheduling_employee"."id"; args=('Anna Frazier', '1400 Pacific Ave, Dallas, TX 75202', 6); alias=default
[2025-09-30 23:05:09,177] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Crystal Logan', '3500 Oak Lawn Ave, Dallas, TX 75219', 6) RETURNING "scheduling_employee"."id"; args=('Crystal Logan', '3500 Oak Lawn Ave, Dallas, TX 75219', 6); alias=default
[2025-09-30 23:05:09,298] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_employee" ("name", "home_address", "service_category_id") VALUES ('Kristin Valencia', '5600 Ross Ave, Dallas, TX 75206', 6) RETURNING "scheduling_employee"."id"; args=('Kristin Valencia', '5600 Ross Ave, Dallas, TX 75206', 6); alias=default
[2025-09-30 23:05:09,651] DEBUG django.db.backends (0.359) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY "customers_registeredcustomer"."last_name" ASC, "customers_registeredcustomer"."first_name" ASC; args=(); alias=default
[2025-09-30 23:05:09,774] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Lisa Robinson', '9735 Cox Flats Apt. 091, Arlington, TX 76010', '2025-09-30'::date, 6, 4) RETURNING "scheduling_booking"."id"; args=('Lisa Robinson', '9735 Cox Flats Apt. 091, Arlington, TX 76010', datetime.date(2025, 9, 30), 6, 4); alias=default
[2025-09-30 23:05:09,876] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:10,001] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 156, '9735 Cox Flats Apt. 091, Arlington, TX 76010') RETURNING "scheduling_jobassignment"."id"; args=(17, 156, '9735 Cox Flats Apt. 091, Arlington, TX 76010'); alias=default
[2025-09-30 23:05:10,110] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Gwendolyn Pope', '766 Joshua Union, Denton, TX 76201', '2025-09-30'::date, 8, 5) RETURNING "scheduling_booking"."id"; args=('Gwendolyn Pope', '766 Joshua Union, Denton, TX 76201', datetime.date(2025, 9, 30), 8, 5); alias=default
[2025-09-30 23:05:10,228] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:05:10,330] DEBUG django.db.backends (0.094) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (25, 157, '766 Joshua Union, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(25, 157, '766 Joshua Union, Denton, TX 76201'); alias=default
[2025-09-30 23:05:10,439] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 157, '766 Joshua Union, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(24, 157, '766 Joshua Union, Denton, TX 76201'); alias=default
[2025-09-30 23:05:10,548] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (22, 157, '766 Joshua Union, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(22, 157, '766 Joshua Union, Denton, TX 76201'); alias=default
[2025-09-30 23:05:10,657] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Timothy Ramos', '26391 Robert Path, Garland, TX 75040', '2025-09-30'::date, 7, 6) RETURNING "scheduling_booking"."id"; args=('Timothy Ramos', '26391 Robert Path, Garland, TX 75040', datetime.date(2025, 9, 30), 7, 6); alias=default
[2025-09-30 23:05:10,777] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:05:10,892] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 158, '26391 Robert Path, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(26, 158, '26391 Robert Path, Garland, TX 75040'); alias=default
[2025-09-30 23:05:11,003] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (29, 158, '26391 Robert Path, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(29, 158, '26391 Robert Path, Garland, TX 75040'); alias=default
[2025-09-30 23:05:11,111] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Christopher Kim', '12097 Trevor Fort, Dallas, TX 75201', '2025-10-01'::date, 7, 4) RETURNING "scheduling_booking"."id"; args=('Christopher Kim', '12097 Trevor Fort, Dallas, TX 75201', datetime.date(2025, 10, 1), 7, 4); alias=default
[2025-09-30 23:05:11,220] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:11,341] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 159, '12097 Trevor Fort, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(18, 159, '12097 Trevor Fort, Dallas, TX 75201'); alias=default
[2025-09-30 23:05:11,451] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 159, '12097 Trevor Fort, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(19, 159, '12097 Trevor Fort, Dallas, TX 75201'); alias=default
[2025-09-30 23:05:11,565] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (20, 159, '12097 Trevor Fort, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(20, 159, '12097 Trevor Fort, Dallas, TX 75201'); alias=default
[2025-09-30 23:05:11,689] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Matthew Johnson', '6220 Stacey Lane Suite 946, Denton, TX 76201', '2025-10-01'::date, 5, 5) RETURNING "scheduling_booking"."id"; args=('Matthew Johnson', '6220 Stacey Lane Suite 946, Denton, TX 76201', datetime.date(2025, 10, 1), 5, 5); alias=default
[2025-09-30 23:05:11,799] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:05:11,907] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (22, 160, '6220 Stacey Lane Suite 946, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(22, 160, '6220 Stacey Lane Suite 946, Denton, TX 76201'); alias=default
[2025-09-30 23:05:12,017] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Kathleen Wood', '3296 Jake Street Suite 977, Garland, TX 75040', '2025-10-01'::date, 8, 6) RETURNING "scheduling_booking"."id"; args=('Kathleen Wood', '3296 Jake Street Suite 977, Garland, TX 75040', datetime.date(2025, 10, 1), 8, 6); alias=default
[2025-09-30 23:05:12,126] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:05:12,236] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (30, 161, '3296 Jake Street Suite 977, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(30, 161, '3296 Jake Street Suite 977, Garland, TX 75040'); alias=default
[2025-09-30 23:05:12,346] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (27, 161, '3296 Jake Street Suite 977, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(27, 161, '3296 Jake Street Suite 977, Garland, TX 75040'); alias=default
[2025-09-30 23:05:12,454] DEBUG django.db.backends (0.094) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Renee Jones', '4091 Sarah Viaduct, Flower Mound, TX 75028', '2025-10-02'::date, 5, 4) RETURNING "scheduling_booking"."id"; args=('Renee Jones', '4091 Sarah Viaduct, Flower Mound, TX 75028', datetime.date(2025, 10, 2), 5, 4); alias=default
[2025-09-30 23:05:12,563] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:12,674] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 162, '4091 Sarah Viaduct, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(16, 162, '4091 Sarah Viaduct, Flower Mound, TX 75028'); alias=default
[2025-09-30 23:05:12,783] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 162, '4091 Sarah Viaduct, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(17, 162, '4091 Sarah Viaduct, Flower Mound, TX 75028'); alias=default
[2025-09-30 23:05:12,910] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Joseph Baldwin', '5967 Sawyer Walks, Arlington, TX 76010', '2025-10-02'::date, 7, 4) RETURNING "scheduling_booking"."id"; args=('Joseph Baldwin', '5967 Sawyer Walks, Arlington, TX 76010', datetime.date(2025, 10, 2), 7, 4); alias=default
[2025-09-30 23:05:13,017] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:13,458] DEBUG django.db.backends (0.438) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 163, '5967 Sawyer Walks, Arlington, TX 76010') RETURNING "scheduling_jobassignment"."id"; args=(18, 163, '5967 Sawyer Walks, Arlington, TX 76010'); alias=default
[2025-09-30 23:05:13,560] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Christopher Jackson', '4989 Smith Avenue Apt. 925, Frisco, TX 75034', '2025-10-02'::date, 7, 5) RETURNING "scheduling_booking"."id"; args=('Christopher Jackson', '4989 Smith Avenue Apt. 925, Frisco, TX 75034', datetime.date(2025, 10, 2), 7, 5); alias=default
[2025-09-30 23:05:13,672] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:05:13,799] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (25, 164, '4989 Smith Avenue Apt. 925, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(25, 164, '4989 Smith Avenue Apt. 925, Frisco, TX 75034'); alias=default
[2025-09-30 23:05:13,910] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 164, '4989 Smith Avenue Apt. 925, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(24, 164, '4989 Smith Avenue Apt. 925, Frisco, TX 75034'); alias=default
[2025-09-30 23:05:14,007] DEBUG django.db.backends (0.094) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (21, 164, '4989 Smith Avenue Apt. 925, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(21, 164, '4989 Smith Avenue Apt. 925, Frisco, TX 75034'); alias=default
[2025-09-30 23:05:14,134] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Cynthia Walker', '5885 Sandra Mews Suite 142, Dallas, TX 75201', '2025-10-02'::date, 6, 6) RETURNING "scheduling_booking"."id"; args=('Cynthia Walker', '5885 Sandra Mews Suite 142, Dallas, TX 75201', datetime.date(2025, 10, 2), 6, 6); alias=default
[2025-09-30 23:05:14,245] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:05:14,354] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (28, 165, '5885 Sandra Mews Suite 142, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(28, 165, '5885 Sandra Mews Suite 142, Dallas, TX 75201'); alias=default
[2025-09-30 23:05:14,462] DEBUG django.db.backends (0.094) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (27, 165, '5885 Sandra Mews Suite 142, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(27, 165, '5885 Sandra Mews Suite 142, Dallas, TX 75201'); alias=default
[2025-09-30 23:05:14,571] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Joshua Foster', '018 Vincent Knolls, Denton, TX 76201', '2025-10-03'::date, 5, 4) RETURNING "scheduling_booking"."id"; args=('Joshua Foster', '018 Vincent Knolls, Denton, TX 76201', datetime.date(2025, 10, 3), 5, 4); alias=default
[2025-09-30 23:05:14,674] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:14,783] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 166, '018 Vincent Knolls, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(19, 166, '018 Vincent Knolls, Denton, TX 76201'); alias=default
[2025-09-30 23:05:14,908] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 166, '018 Vincent Knolls, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(16, 166, '018 Vincent Knolls, Denton, TX 76201'); alias=default
[2025-09-30 23:05:15,020] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Brian Butler', '256 Davis Cliff Apt. 306, Carrollton, TX 75006', '2025-10-03'::date, 7, 5) RETURNING "scheduling_booking"."id"; args=('Brian Butler', '256 Davis Cliff Apt. 306, Carrollton, TX 75006', datetime.date(2025, 10, 3), 7, 5); alias=default
[2025-09-30 23:05:15,120] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:05:15,238] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (22, 167, '256 Davis Cliff Apt. 306, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(22, 167, '256 Davis Cliff Apt. 306, Carrollton, TX 75006'); alias=default
[2025-09-30 23:05:15,345] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 167, '256 Davis Cliff Apt. 306, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(24, 167, '256 Davis Cliff Apt. 306, Carrollton, TX 75006'); alias=default
[2025-09-30 23:05:15,454] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Gail Smith', '716 Austin Mountain Apt. 678, Carrollton, TX 75006', '2025-10-03'::date, 8, 6) RETURNING "scheduling_booking"."id"; args=('Gail Smith', '716 Austin Mountain Apt. 678, Carrollton, TX 75006', datetime.date(2025, 10, 3), 8, 6); alias=default
[2025-09-30 23:05:15,564] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:05:15,689] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 168, '716 Austin Mountain Apt. 678, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(26, 168, '716 Austin Mountain Apt. 678, Carrollton, TX 75006'); alias=default
[2025-09-30 23:05:15,798] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (27, 168, '716 Austin Mountain Apt. 678, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(27, 168, '716 Austin Mountain Apt. 678, Carrollton, TX 75006'); alias=default
[2025-09-30 23:05:15,907] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('William Stewart', '243 David Lights, Garland, TX 75040', '2025-10-04'::date, 5, 4) RETURNING "scheduling_booking"."id"; args=('William Stewart', '243 David Lights, Garland, TX 75040', datetime.date(2025, 10, 4), 5, 4); alias=default
[2025-09-30 23:05:16,017] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:16,126] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 169, '243 David Lights, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(16, 169, '243 David Lights, Garland, TX 75040'); alias=default
[2025-09-30 23:05:16,252] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 169, '243 David Lights, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(18, 169, '243 David Lights, Garland, TX 75040'); alias=default
[2025-09-30 23:05:16,360] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 169, '243 David Lights, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(17, 169, '243 David Lights, Garland, TX 75040'); alias=default
[2025-09-30 23:05:16,485] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Scott Newton', '68394 Matthew Corners Suite 518, Denton, TX 76201', '2025-10-04'::date, 7, 4) RETURNING "scheduling_booking"."id"; args=('Scott Newton', '68394 Matthew Corners Suite 518, Denton, TX 76201', datetime.date(2025, 10, 4), 7, 4); alias=default
[2025-09-30 23:05:16,598] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:16,703] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (20, 170, '68394 Matthew Corners Suite 518, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(20, 170, '68394 Matthew Corners Suite 518, Denton, TX 76201'); alias=default
[2025-09-30 23:05:16,814] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 170, '68394 Matthew Corners Suite 518, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(17, 170, '68394 Matthew Corners Suite 518, Denton, TX 76201'); alias=default
[2025-09-30 23:05:16,924] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Sean Garza', '452 Peter Ford Apt. 636, Frisco, TX 75034', '2025-10-04'::date, 5, 5) RETURNING "scheduling_booking"."id"; args=('Sean Garza', '452 Peter Ford Apt. 636, Frisco, TX 75034', datetime.date(2025, 10, 4), 5, 5); alias=default
[2025-09-30 23:05:17,033] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:05:17,143] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (23, 171, '452 Peter Ford Apt. 636, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(23, 171, '452 Peter Ford Apt. 636, Frisco, TX 75034'); alias=default
[2025-09-30 23:05:17,264] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 171, '452 Peter Ford Apt. 636, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(24, 171, '452 Peter Ford Apt. 636, Frisco, TX 75034'); alias=default
[2025-09-30 23:05:17,361] DEBUG django.db.backends (0.094) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (22, 171, '452 Peter Ford Apt. 636, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(22, 171, '452 Peter Ford Apt. 636, Frisco, TX 75034'); alias=default
[2025-09-30 23:05:17,474] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jacob Ramirez', '982 Richard Way, Richardson, TX 75080', '2025-10-04'::date, 5, 6) RETURNING "scheduling_booking"."id"; args=('Jacob Ramirez', '982 Richard Way, Richardson, TX 75080', datetime.date(2025, 10, 4), 5, 6); alias=default
[2025-09-30 23:05:17,595] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:05:17,711] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 172, '982 Richard Way, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(26, 172, '982 Richard Way, Richardson, TX 75080'); alias=default
[2025-09-30 23:05:17,814] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Thomas Nunez', '1944 Foster Trafficway Apt. 098, Garland, TX 75040', '2025-10-04'::date, 7, 6) RETURNING "scheduling_booking"."id"; args=('Thomas Nunez', '1944 Foster Trafficway Apt. 098, Garland, TX 75040', datetime.date(2025, 10, 4), 7, 6); alias=default
[2025-09-30 23:05:17,923] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:05:18,032] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (27, 173, '1944 Foster Trafficway Apt. 098, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(27, 173, '1944 Foster Trafficway Apt. 098, Garland, TX 75040'); alias=default
[2025-09-30 23:05:18,159] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (29, 173, '1944 Foster Trafficway Apt. 098, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(29, 173, '1944 Foster Trafficway Apt. 098, Garland, TX 75040'); alias=default
[2025-09-30 23:05:18,255] DEBUG django.db.backends (0.094) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Aaron Williams', '641 Stewart Junction, Frisco, TX 75034', '2025-10-04'::date, 8, 6) RETURNING "scheduling_booking"."id"; args=('Aaron Williams', '641 Stewart Junction, Frisco, TX 75034', datetime.date(2025, 10, 4), 8, 6); alias=default
[2025-09-30 23:05:18,379] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:05:18,490] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (28, 174, '641 Stewart Junction, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(28, 174, '641 Stewart Junction, Frisco, TX 75034'); alias=default
[2025-09-30 23:05:18,601] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Victoria Beck', '4290 Christopher Land Suite 945, Denton, TX 76201', '2025-10-05'::date, 5, 4) RETURNING "scheduling_booking"."id"; args=('Victoria Beck', '4290 Christopher Land Suite 945, Denton, TX 76201', datetime.date(2025, 10, 5), 5, 4); alias=default
[2025-09-30 23:05:18,714] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:18,823] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (20, 175, '4290 Christopher Land Suite 945, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(20, 175, '4290 Christopher Land Suite 945, Denton, TX 76201'); alias=default
[2025-09-30 23:05:18,932] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Roger Sullivan', '64319 Steven Port, Arlington, TX 76010', '2025-10-05'::date, 6, 5) RETURNING "scheduling_booking"."id"; args=('Roger Sullivan', '64319 Steven Port, Arlington, TX 76010', datetime.date(2025, 10, 5), 6, 5); alias=default
[2025-09-30 23:05:19,032] DEBUG django.db.backends (0.094) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:05:19,154] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (25, 176, '64319 Steven Port, Arlington, TX 76010') RETURNING "scheduling_jobassignment"."id"; args=(25, 176, '64319 Steven Port, Arlington, TX 76010'); alias=default
[2025-09-30 23:05:19,263] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jonathan Robinson', '0364 Murray Forge Suite 675, Irving, TX 75039', '2025-10-05'::date, 7, 5) RETURNING "scheduling_booking"."id"; args=('Jonathan Robinson', '0364 Murray Forge Suite 675, Irving, TX 75039', datetime.date(2025, 10, 5), 7, 5); alias=default
[2025-09-30 23:05:19,374] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:05:19,486] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (23, 177, '0364 Murray Forge Suite 675, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(23, 177, '0364 Murray Forge Suite 675, Irving, TX 75039'); alias=default
[2025-09-30 23:05:19,589] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Nathaniel Mooney', '861 Lopez Islands Apt. 070, Garland, TX 75040', '2025-10-05'::date, 8, 6) RETURNING "scheduling_booking"."id"; args=('Nathaniel Mooney', '861 Lopez Islands Apt. 070, Garland, TX 75040', datetime.date(2025, 10, 5), 8, 6); alias=default
[2025-09-30 23:05:19,710] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:05:19,819] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (29, 178, '861 Lopez Islands Apt. 070, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(29, 178, '861 Lopez Islands Apt. 070, Garland, TX 75040'); alias=default
[2025-09-30 23:05:19,923] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (27, 178, '861 Lopez Islands Apt. 070, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(27, 178, '861 Lopez Islands Apt. 070, Garland, TX 75040'); alias=default
[2025-09-30 23:05:20,032] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 178, '861 Lopez Islands Apt. 070, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(26, 178, '861 Lopez Islands Apt. 070, Garland, TX 75040'); alias=default
[2025-09-30 23:05:20,142] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Nathan Frazier', '3838 David Drives, Denton, TX 76201', '2025-10-06'::date, 6, 4) RETURNING "scheduling_booking"."id"; args=('Nathan Frazier', '3838 David Drives, Denton, TX 76201', datetime.date(2025, 10, 6), 6, 4); alias=default
[2025-09-30 23:05:20,252] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:20,361] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 179, '3838 David Drives, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(19, 179, '3838 David Drives, Denton, TX 76201'); alias=default
[2025-09-30 23:05:20,471] DEBUG django.db.backends (0.094) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Diane Romero', '31706 Angela Field, Plano, TX 75093', '2025-10-06'::date, 7, 5) RETURNING "scheduling_booking"."id"; args=('Diane Romero', '31706 Angela Field, Plano, TX 75093', datetime.date(2025, 10, 6), 7, 5); alias=default
[2025-09-30 23:05:20,580] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:05:20,704] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (23, 180, '31706 Angela Field, Plano, TX 75093') RETURNING "scheduling_jobassignment"."id"; args=(23, 180, '31706 Angela Field, Plano, TX 75093'); alias=default
[2025-09-30 23:05:20,814] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 180, '31706 Angela Field, Plano, TX 75093') RETURNING "scheduling_jobassignment"."id"; args=(24, 180, '31706 Angela Field, Plano, TX 75093'); alias=default
[2025-09-30 23:05:20,921] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (22, 180, '31706 Angela Field, Plano, TX 75093') RETURNING "scheduling_jobassignment"."id"; args=(22, 180, '31706 Angela Field, Plano, TX 75093'); alias=default
[2025-09-30 23:05:21,031] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Albert Harris', '89667 Emma Path, Irving, TX 75039', '2025-10-06'::date, 5, 6) RETURNING "scheduling_booking"."id"; args=('Albert Harris', '89667 Emma Path, Irving, TX 75039', datetime.date(2025, 10, 6), 5, 6); alias=default
[2025-09-30 23:05:21,142] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:05:21,252] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (27, 181, '89667 Emma Path, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(27, 181, '89667 Emma Path, Irving, TX 75039'); alias=default
[2025-09-30 23:05:21,375] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Tony Wood', '33746 Brooks Hills Apt. 792, Carrollton, TX 75006', '2025-10-07'::date, 8, 5) RETURNING "scheduling_booking"."id"; args=('Tony Wood', '33746 Brooks Hills Apt. 792, Carrollton, TX 75006', datetime.date(2025, 10, 7), 8, 5); alias=default
[2025-09-30 23:05:21,486] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:05:21,595] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (21, 182, '33746 Brooks Hills Apt. 792, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(21, 182, '33746 Brooks Hills Apt. 792, Carrollton, TX 75006'); alias=default
[2025-09-30 23:05:21,704] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (25, 182, '33746 Brooks Hills Apt. 792, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(25, 182, '33746 Brooks Hills Apt. 792, Carrollton, TX 75006'); alias=default
[2025-09-30 23:05:21,824] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Makayla Watson', '11453 Jeremy Spurs Apt. 265, Arlington, TX 76010', '2025-10-07'::date, 5, 6) RETURNING "scheduling_booking"."id"; args=('Makayla Watson', '11453 Jeremy Spurs Apt. 265, Arlington, TX 76010', datetime.date(2025, 10, 7), 5, 6); alias=default
[2025-09-30 23:05:21,937] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:05:22,048] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 183, '11453 Jeremy Spurs Apt. 265, Arlington, TX 76010') RETURNING "scheduling_jobassignment"."id"; args=(26, 183, '11453 Jeremy Spurs Apt. 265, Arlington, TX 76010'); alias=default
[2025-09-30 23:05:22,158] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (28, 183, '11453 Jeremy Spurs Apt. 265, Arlington, TX 76010') RETURNING "scheduling_jobassignment"."id"; args=(28, 183, '11453 Jeremy Spurs Apt. 265, Arlington, TX 76010'); alias=default
[2025-09-30 23:05:22,268] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (30, 183, '11453 Jeremy Spurs Apt. 265, Arlington, TX 76010') RETURNING "scheduling_jobassignment"."id"; args=(30, 183, '11453 Jeremy Spurs Apt. 265, Arlington, TX 76010'); alias=default
[2025-09-30 23:05:22,376] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Nathaniel Mooney', '861 Lopez Islands Apt. 070, Garland, TX 75040', '2025-10-07'::date, 8, 6) RETURNING "scheduling_booking"."id"; args=('Nathaniel Mooney', '861 Lopez Islands Apt. 070, Garland, TX 75040', datetime.date(2025, 10, 7), 8, 6); alias=default
[2025-09-30 23:05:22,490] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:05:22,595] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 184, '861 Lopez Islands Apt. 070, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(26, 184, '861 Lopez Islands Apt. 070, Garland, TX 75040'); alias=default
[2025-09-30 23:05:22,720] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (29, 184, '861 Lopez Islands Apt. 070, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(29, 184, '861 Lopez Islands Apt. 070, Garland, TX 75040'); alias=default
[2025-09-30 23:05:22,832] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Justin Carter', '584 Adams Forges Apt. 946, Richardson, TX 75080', '2025-10-08'::date, 5, 4) RETURNING "scheduling_booking"."id"; args=('Justin Carter', '584 Adams Forges Apt. 946, Richardson, TX 75080', datetime.date(2025, 10, 8), 5, 4); alias=default
[2025-09-30 23:05:22,939] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:23,048] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 185, '584 Adams Forges Apt. 946, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(16, 185, '584 Adams Forges Apt. 946, Richardson, TX 75080'); alias=default
[2025-09-30 23:05:23,157] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Anita Hubbard', '738 Brenda Islands Suite 194, Irving, TX 75039', '2025-10-08'::date, 8, 5) RETURNING "scheduling_booking"."id"; args=('Anita Hubbard', '738 Brenda Islands Suite 194, Irving, TX 75039', datetime.date(2025, 10, 8), 8, 5); alias=default
[2025-09-30 23:05:23,272] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:05:23,377] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (25, 186, '738 Brenda Islands Suite 194, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(25, 186, '738 Brenda Islands Suite 194, Irving, TX 75039'); alias=default
[2025-09-30 23:05:23,489] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Rachel Johnson', '431 Gill Streets Apt. 200, Richardson, TX 75080', '2025-10-08'::date, 5, 6) RETURNING "scheduling_booking"."id"; args=('Rachel Johnson', '431 Gill Streets Apt. 200, Richardson, TX 75080', datetime.date(2025, 10, 8), 5, 6); alias=default
[2025-09-30 23:05:23,601] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:05:23,705] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (30, 187, '431 Gill Streets Apt. 200, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(30, 187, '431 Gill Streets Apt. 200, Richardson, TX 75080'); alias=default
[2025-09-30 23:05:23,825] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Christopher Kim', '12097 Trevor Fort, Dallas, TX 75201', '2025-10-08'::date, 6, 6) RETURNING "scheduling_booking"."id"; args=('Christopher Kim', '12097 Trevor Fort, Dallas, TX 75201', datetime.date(2025, 10, 8), 6, 6); alias=default
[2025-09-30 23:05:23,924] DEBUG django.db.backends (0.094) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:05:24,041] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (29, 188, '12097 Trevor Fort, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(29, 188, '12097 Trevor Fort, Dallas, TX 75201'); alias=default
[2025-09-30 23:05:24,157] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (28, 188, '12097 Trevor Fort, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(28, 188, '12097 Trevor Fort, Dallas, TX 75201'); alias=default
[2025-09-30 23:05:24,439] DEBUG django.db.backends (0.281) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Lynn Wong', '597 Elliott Port, Denton, TX 76201', '2025-10-08'::date, 7, 6) RETURNING "scheduling_booking"."id"; args=('Lynn Wong', '597 Elliott Port, Denton, TX 76201', datetime.date(2025, 10, 8), 7, 6); alias=default
[2025-09-30 23:05:24,746] DEBUG django.db.backends (0.313) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:05:25,085] DEBUG django.db.backends (0.328) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (27, 189, '597 Elliott Port, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(27, 189, '597 Elliott Port, Denton, TX 76201'); alias=default
[2025-09-30 23:05:25,361] DEBUG django.db.backends (0.281) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (28, 189, '597 Elliott Port, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(28, 189, '597 Elliott Port, Denton, TX 76201'); alias=default
[2025-09-30 23:05:25,703] DEBUG django.db.backends (0.344) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Courtney Ballard', '48134 Perkins Via Suite 417, Richardson, TX 75080', '2025-10-08'::date, 8, 6) RETURNING "scheduling_booking"."id"; args=('Courtney Ballard', '48134 Perkins Via Suite 417, Richardson, TX 75080', datetime.date(2025, 10, 8), 8, 6); alias=default
[2025-09-30 23:05:25,954] DEBUG django.db.backends (0.250) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:05:26,158] DEBUG django.db.backends (0.203) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (27, 190, '48134 Perkins Via Suite 417, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(27, 190, '48134 Perkins Via Suite 417, Richardson, TX 75080'); alias=default
[2025-09-30 23:05:26,486] DEBUG django.db.backends (0.328) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 190, '48134 Perkins Via Suite 417, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(26, 190, '48134 Perkins Via Suite 417, Richardson, TX 75080'); alias=default
[2025-09-30 23:05:26,783] DEBUG django.db.backends (0.297) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Heather Aguirre', '53569 Strong Village Apt. 087, Carrollton, TX 75006', '2025-10-09'::date, 7, 4) RETURNING "scheduling_booking"."id"; args=('Heather Aguirre', '53569 Strong Village Apt. 087, Carrollton, TX 75006', datetime.date(2025, 10, 9), 7, 4); alias=default
[2025-09-30 23:05:27,110] DEBUG django.db.backends (0.328) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:27,392] DEBUG django.db.backends (0.281) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 191, '53569 Strong Village Apt. 087, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(18, 191, '53569 Strong Village Apt. 087, Carrollton, TX 75006'); alias=default
[2025-09-30 23:05:27,729] DEBUG django.db.backends (0.344) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Kimberly Livingston', '4097 Alexander Cliff, Carrollton, TX 75006', '2025-10-09'::date, 6, 5) RETURNING "scheduling_booking"."id"; args=('Kimberly Livingston', '4097 Alexander Cliff, Carrollton, TX 75006', datetime.date(2025, 10, 9), 6, 5); alias=default
[2025-09-30 23:05:28,001] DEBUG django.db.backends (0.266) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:05:28,341] DEBUG django.db.backends (0.344) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (21, 192, '4097 Alexander Cliff, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(21, 192, '4097 Alexander Cliff, Carrollton, TX 75006'); alias=default
[2025-09-30 23:05:29,048] DEBUG django.db.backends (0.703) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (25, 192, '4097 Alexander Cliff, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(25, 192, '4097 Alexander Cliff, Carrollton, TX 75006'); alias=default
[2025-09-30 23:05:29,157] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (22, 192, '4097 Alexander Cliff, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(22, 192, '4097 Alexander Cliff, Carrollton, TX 75006'); alias=default
[2025-09-30 23:05:29,268] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Robin Haley', '24305 Angela Mount, Denton, TX 76201', '2025-10-10'::date, 6, 4) RETURNING "scheduling_booking"."id"; args=('Robin Haley', '24305 Angela Mount, Denton, TX 76201', datetime.date(2025, 10, 10), 6, 4); alias=default
[2025-09-30 23:05:29,371] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:29,491] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 193, '24305 Angela Mount, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(19, 193, '24305 Angela Mount, Denton, TX 76201'); alias=default
[2025-09-30 23:05:29,604] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 193, '24305 Angela Mount, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(18, 193, '24305 Angela Mount, Denton, TX 76201'); alias=default
[2025-09-30 23:05:29,717] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 193, '24305 Angela Mount, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(17, 193, '24305 Angela Mount, Denton, TX 76201'); alias=default
[2025-09-30 23:05:29,813] DEBUG django.db.backends (0.093) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jorge Watkins', '911 Adams Lake Suite 767, Irving, TX 75039', '2025-10-10'::date, 7, 4) RETURNING "scheduling_booking"."id"; args=('Jorge Watkins', '911 Adams Lake Suite 767, Irving, TX 75039', datetime.date(2025, 10, 10), 7, 4); alias=default
[2025-09-30 23:05:29,937] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:30,048] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 194, '911 Adams Lake Suite 767, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(18, 194, '911 Adams Lake Suite 767, Irving, TX 75039'); alias=default
[2025-09-30 23:05:30,158] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Renee Jones', '4091 Sarah Viaduct, Flower Mound, TX 75028', '2025-10-10'::date, 5, 6) RETURNING "scheduling_booking"."id"; args=('Renee Jones', '4091 Sarah Viaduct, Flower Mound, TX 75028', datetime.date(2025, 10, 10), 5, 6); alias=default
[2025-09-30 23:05:30,267] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:05:30,376] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 195, '4091 Sarah Viaduct, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(26, 195, '4091 Sarah Viaduct, Flower Mound, TX 75028'); alias=default
[2025-09-30 23:05:30,485] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (27, 195, '4091 Sarah Viaduct, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(27, 195, '4091 Sarah Viaduct, Flower Mound, TX 75028'); alias=default
[2025-09-30 23:05:30,594] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('William Stark', '8898 Combs Hills Suite 006, Garland, TX 75040', '2025-10-11'::date, 6, 4) RETURNING "scheduling_booking"."id"; args=('William Stark', '8898 Combs Hills Suite 006, Garland, TX 75040', datetime.date(2025, 10, 11), 6, 4); alias=default
[2025-09-30 23:05:30,704] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:30,814] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 196, '8898 Combs Hills Suite 006, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(18, 196, '8898 Combs Hills Suite 006, Garland, TX 75040'); alias=default
[2025-09-30 23:05:30,924] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 196, '8898 Combs Hills Suite 006, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(16, 196, '8898 Combs Hills Suite 006, Garland, TX 75040'); alias=default
[2025-09-30 23:05:31,032] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 196, '8898 Combs Hills Suite 006, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(19, 196, '8898 Combs Hills Suite 006, Garland, TX 75040'); alias=default
[2025-09-30 23:05:31,142] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Edward Randall', '5346 Powell Bypass, Garland, TX 75040', '2025-10-11'::date, 8, 5) RETURNING "scheduling_booking"."id"; args=('Edward Randall', '5346 Powell Bypass, Garland, TX 75040', datetime.date(2025, 10, 11), 8, 5); alias=default
[2025-09-30 23:05:31,252] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:05:31,372] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (25, 197, '5346 Powell Bypass, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(25, 197, '5346 Powell Bypass, Garland, TX 75040'); alias=default
[2025-09-30 23:05:31,474] DEBUG django.db.backends (0.094) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 197, '5346 Powell Bypass, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(24, 197, '5346 Powell Bypass, Garland, TX 75040'); alias=default
[2025-09-30 23:05:31,595] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (22, 197, '5346 Powell Bypass, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(22, 197, '5346 Powell Bypass, Garland, TX 75040'); alias=default
[2025-09-30 23:05:31,705] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Nathaniel Mooney', '861 Lopez Islands Apt. 070, Garland, TX 75040', '2025-10-11'::date, 5, 6) RETURNING "scheduling_booking"."id"; args=('Nathaniel Mooney', '861 Lopez Islands Apt. 070, Garland, TX 75040', datetime.date(2025, 10, 11), 5, 6); alias=default
[2025-09-30 23:05:31,819] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:05:31,927] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (27, 198, '861 Lopez Islands Apt. 070, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(27, 198, '861 Lopez Islands Apt. 070, Garland, TX 75040'); alias=default
[2025-09-30 23:05:32,042] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jennifer Flynn', '12560 Elizabeth Motorway, Plano, TX 75093', '2025-10-11'::date, 7, 6) RETURNING "scheduling_booking"."id"; args=('Jennifer Flynn', '12560 Elizabeth Motorway, Plano, TX 75093', datetime.date(2025, 10, 11), 7, 6); alias=default
[2025-09-30 23:05:32,142] DEBUG django.db.backends (0.093) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:05:32,267] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (28, 199, '12560 Elizabeth Motorway, Plano, TX 75093') RETURNING "scheduling_jobassignment"."id"; args=(28, 199, '12560 Elizabeth Motorway, Plano, TX 75093'); alias=default
[2025-09-30 23:05:32,379] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (29, 199, '12560 Elizabeth Motorway, Plano, TX 75093') RETURNING "scheduling_jobassignment"."id"; args=(29, 199, '12560 Elizabeth Motorway, Plano, TX 75093'); alias=default
[2025-09-30 23:05:32,490] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (30, 199, '12560 Elizabeth Motorway, Plano, TX 75093') RETURNING "scheduling_jobassignment"."id"; args=(30, 199, '12560 Elizabeth Motorway, Plano, TX 75093'); alias=default
[2025-09-30 23:05:32,596] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Michelle Fitzpatrick', '59290 Kathleen Summit, Garland, TX 75040', '2025-10-11'::date, 8, 6) RETURNING "scheduling_booking"."id"; args=('Michelle Fitzpatrick', '59290 Kathleen Summit, Garland, TX 75040', datetime.date(2025, 10, 11), 8, 6); alias=default
[2025-09-30 23:05:32,705] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:05:32,814] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (28, 200, '59290 Kathleen Summit, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(28, 200, '59290 Kathleen Summit, Garland, TX 75040'); alias=default
[2025-09-30 23:05:32,924] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 200, '59290 Kathleen Summit, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(26, 200, '59290 Kathleen Summit, Garland, TX 75040'); alias=default
[2025-09-30 23:05:33,040] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (29, 200, '59290 Kathleen Summit, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(29, 200, '59290 Kathleen Summit, Garland, TX 75040'); alias=default
[2025-09-30 23:05:33,150] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Matthew Lewis', '331 Mckee Land Apt. 938, Irving, TX 75039', '2025-10-12'::date, 7, 4) RETURNING "scheduling_booking"."id"; args=('Matthew Lewis', '331 Mckee Land Apt. 938, Irving, TX 75039', datetime.date(2025, 10, 12), 7, 4); alias=default
[2025-09-30 23:05:33,259] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:33,377] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 201, '331 Mckee Land Apt. 938, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(17, 201, '331 Mckee Land Apt. 938, Irving, TX 75039'); alias=default
[2025-09-30 23:05:33,485] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 201, '331 Mckee Land Apt. 938, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(19, 201, '331 Mckee Land Apt. 938, Irving, TX 75039'); alias=default
[2025-09-30 23:05:33,607] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 201, '331 Mckee Land Apt. 938, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(18, 201, '331 Mckee Land Apt. 938, Irving, TX 75039'); alias=default
[2025-09-30 23:05:33,720] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Victoria Beck', '4290 Christopher Land Suite 945, Denton, TX 76201', '2025-10-12'::date, 8, 4) RETURNING "scheduling_booking"."id"; args=('Victoria Beck', '4290 Christopher Land Suite 945, Denton, TX 76201', datetime.date(2025, 10, 12), 8, 4); alias=default
[2025-09-30 23:05:33,831] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:33,940] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 202, '4290 Christopher Land Suite 945, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(19, 202, '4290 Christopher Land Suite 945, Denton, TX 76201'); alias=default
[2025-09-30 23:05:34,053] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 202, '4290 Christopher Land Suite 945, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(17, 202, '4290 Christopher Land Suite 945, Denton, TX 76201'); alias=default
[2025-09-30 23:05:34,154] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 202, '4290 Christopher Land Suite 945, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(16, 202, '4290 Christopher Land Suite 945, Denton, TX 76201'); alias=default
[2025-09-30 23:05:34,273] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Gail Smith', '716 Austin Mountain Apt. 678, Carrollton, TX 75006', '2025-10-12'::date, 5, 5) RETURNING "scheduling_booking"."id"; args=('Gail Smith', '716 Austin Mountain Apt. 678, Carrollton, TX 75006', datetime.date(2025, 10, 12), 5, 5); alias=default
[2025-09-30 23:05:34,385] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:05:34,493] DEBUG django.db.backends (0.094) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (25, 203, '716 Austin Mountain Apt. 678, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(25, 203, '716 Austin Mountain Apt. 678, Carrollton, TX 75006'); alias=default
[2025-09-30 23:05:34,607] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (22, 203, '716 Austin Mountain Apt. 678, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(22, 203, '716 Austin Mountain Apt. 678, Carrollton, TX 75006'); alias=default
[2025-09-30 23:05:34,718] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Lauren Wallace', '50374 Travis Union Suite 238, Frisco, TX 75034', '2025-10-12'::date, 8, 5) RETURNING "scheduling_booking"."id"; args=('Lauren Wallace', '50374 Travis Union Suite 238, Frisco, TX 75034', datetime.date(2025, 10, 12), 8, 5); alias=default
[2025-09-30 23:05:34,826] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:05:34,938] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (25, 204, '50374 Travis Union Suite 238, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(25, 204, '50374 Travis Union Suite 238, Frisco, TX 75034'); alias=default
[2025-09-30 23:05:35,048] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (22, 204, '50374 Travis Union Suite 238, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(22, 204, '50374 Travis Union Suite 238, Frisco, TX 75034'); alias=default
[2025-09-30 23:05:35,158] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Zoe Carroll', '585 Patterson Place Suite 748, Plano, TX 75093', '2025-10-12'::date, 5, 6) RETURNING "scheduling_booking"."id"; args=('Zoe Carroll', '585 Patterson Place Suite 748, Plano, TX 75093', datetime.date(2025, 10, 12), 5, 6); alias=default
[2025-09-30 23:05:35,266] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:05:35,376] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (28, 205, '585 Patterson Place Suite 748, Plano, TX 75093') RETURNING "scheduling_jobassignment"."id"; args=(28, 205, '585 Patterson Place Suite 748, Plano, TX 75093'); alias=default
[2025-09-30 23:05:35,486] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (29, 205, '585 Patterson Place Suite 748, Plano, TX 75093') RETURNING "scheduling_jobassignment"."id"; args=(29, 205, '585 Patterson Place Suite 748, Plano, TX 75093'); alias=default
[2025-09-30 23:05:35,611] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Julie Anderson', '5127 Davis Pine Apt. 424, Plano, TX 75093', '2025-10-13'::date, 8, 4) RETURNING "scheduling_booking"."id"; args=('Julie Anderson', '5127 Davis Pine Apt. 424, Plano, TX 75093', datetime.date(2025, 10, 13), 8, 4); alias=default
[2025-09-30 23:05:35,719] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:35,829] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (20, 206, '5127 Davis Pine Apt. 424, Plano, TX 75093') RETURNING "scheduling_jobassignment"."id"; args=(20, 206, '5127 Davis Pine Apt. 424, Plano, TX 75093'); alias=default
[2025-09-30 23:05:35,940] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 206, '5127 Davis Pine Apt. 424, Plano, TX 75093') RETURNING "scheduling_jobassignment"."id"; args=(17, 206, '5127 Davis Pine Apt. 424, Plano, TX 75093'); alias=default
[2025-09-30 23:05:36,079] DEBUG django.db.backends (0.141) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 206, '5127 Davis Pine Apt. 424, Plano, TX 75093') RETURNING "scheduling_jobassignment"."id"; args=(19, 206, '5127 Davis Pine Apt. 424, Plano, TX 75093'); alias=default
[2025-09-30 23:05:36,193] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jennifer Carter', '9721 Katherine Expressway Suite 418, Plano, TX 75093', '2025-10-13'::date, 7, 5) RETURNING "scheduling_booking"."id"; args=('Jennifer Carter', '9721 Katherine Expressway Suite 418, Plano, TX 75093', datetime.date(2025, 10, 13), 7, 5); alias=default
[2025-09-30 23:05:36,298] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:05:36,407] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 207, '9721 Katherine Expressway Suite 418, Plano, TX 75093') RETURNING "scheduling_jobassignment"."id"; args=(24, 207, '9721 Katherine Expressway Suite 418, Plano, TX 75093'); alias=default
[2025-09-30 23:05:36,517] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (23, 207, '9721 Katherine Expressway Suite 418, Plano, TX 75093') RETURNING "scheduling_jobassignment"."id"; args=(23, 207, '9721 Katherine Expressway Suite 418, Plano, TX 75093'); alias=default
[2025-09-30 23:05:36,627] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Michele Ruiz', '943 Moore Club Apt. 160, Denton, TX 76201', '2025-10-13'::date, 8, 5) RETURNING "scheduling_booking"."id"; args=('Michele Ruiz', '943 Moore Club Apt. 160, Denton, TX 76201', datetime.date(2025, 10, 13), 8, 5); alias=default
[2025-09-30 23:05:36,740] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:05:36,845] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (23, 208, '943 Moore Club Apt. 160, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(23, 208, '943 Moore Club Apt. 160, Denton, TX 76201'); alias=default
[2025-09-30 23:05:36,973] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (22, 208, '943 Moore Club Apt. 160, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(22, 208, '943 Moore Club Apt. 160, Denton, TX 76201'); alias=default
[2025-09-30 23:05:37,080] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Robert Garcia', '23242 Sharp Stream Apt. 705, Flower Mound, TX 75028', '2025-10-13'::date, 5, 6) RETURNING "scheduling_booking"."id"; args=('Robert Garcia', '23242 Sharp Stream Apt. 705, Flower Mound, TX 75028', datetime.date(2025, 10, 13), 5, 6); alias=default
[2025-09-30 23:05:37,189] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:05:37,305] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (28, 209, '23242 Sharp Stream Apt. 705, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(28, 209, '23242 Sharp Stream Apt. 705, Flower Mound, TX 75028'); alias=default
[2025-09-30 23:05:37,407] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (29, 209, '23242 Sharp Stream Apt. 705, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(29, 209, '23242 Sharp Stream Apt. 705, Flower Mound, TX 75028'); alias=default
[2025-09-30 23:05:37,517] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (30, 209, '23242 Sharp Stream Apt. 705, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(30, 209, '23242 Sharp Stream Apt. 705, Flower Mound, TX 75028'); alias=default
[2025-09-30 23:05:37,642] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Kristi Caldwell', '110 Leslie Street Apt. 194, Carrollton, TX 75006', '2025-10-13'::date, 6, 6) RETURNING "scheduling_booking"."id"; args=('Kristi Caldwell', '110 Leslie Street Apt. 194, Carrollton, TX 75006', datetime.date(2025, 10, 13), 6, 6); alias=default
[2025-09-30 23:05:37,752] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:05:37,853] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (28, 210, '110 Leslie Street Apt. 194, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(28, 210, '110 Leslie Street Apt. 194, Carrollton, TX 75006'); alias=default
[2025-09-30 23:05:37,973] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 210, '110 Leslie Street Apt. 194, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(26, 210, '110 Leslie Street Apt. 194, Carrollton, TX 75006'); alias=default
[2025-09-30 23:05:38,079] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Laurie Singh', '576 Anna Circles, Dallas, TX 75201', '2025-10-14'::date, 5, 4) RETURNING "scheduling_booking"."id"; args=('Laurie Singh', '576 Anna Circles, Dallas, TX 75201', datetime.date(2025, 10, 14), 5, 4); alias=default
[2025-09-30 23:05:38,201] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:38,298] DEBUG django.db.backends (0.094) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (20, 211, '576 Anna Circles, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(20, 211, '576 Anna Circles, Dallas, TX 75201'); alias=default
[2025-09-30 23:05:38,423] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Lisa Hughes', '387 Gonzalez Wall, Richardson, TX 75080', '2025-10-14'::date, 6, 4) RETURNING "scheduling_booking"."id"; args=('Lisa Hughes', '387 Gonzalez Wall, Richardson, TX 75080', datetime.date(2025, 10, 14), 6, 4); alias=default
[2025-09-30 23:05:38,532] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:38,642] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 212, '387 Gonzalez Wall, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(18, 212, '387 Gonzalez Wall, Richardson, TX 75080'); alias=default
[2025-09-30 23:05:38,751] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 212, '387 Gonzalez Wall, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(16, 212, '387 Gonzalez Wall, Richardson, TX 75080'); alias=default
[2025-09-30 23:05:38,869] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 212, '387 Gonzalez Wall, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(17, 212, '387 Gonzalez Wall, Richardson, TX 75080'); alias=default
[2025-09-30 23:05:38,970] DEBUG django.db.backends (0.094) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Stephanie Barnes', '90402 Fox Road Suite 103, Frisco, TX 75034', '2025-10-14'::date, 8, 4) RETURNING "scheduling_booking"."id"; args=('Stephanie Barnes', '90402 Fox Road Suite 103, Frisco, TX 75034', datetime.date(2025, 10, 14), 8, 4); alias=default
[2025-09-30 23:05:39,079] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:39,189] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 213, '90402 Fox Road Suite 103, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(18, 213, '90402 Fox Road Suite 103, Frisco, TX 75034'); alias=default
[2025-09-30 23:05:39,298] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 213, '90402 Fox Road Suite 103, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(17, 213, '90402 Fox Road Suite 103, Frisco, TX 75034'); alias=default
[2025-09-30 23:05:39,406] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 213, '90402 Fox Road Suite 103, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(16, 213, '90402 Fox Road Suite 103, Frisco, TX 75034'); alias=default
[2025-09-30 23:05:39,517] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Kristi Caldwell', '110 Leslie Street Apt. 194, Carrollton, TX 75006', '2025-10-14'::date, 6, 5) RETURNING "scheduling_booking"."id"; args=('Kristi Caldwell', '110 Leslie Street Apt. 194, Carrollton, TX 75006', datetime.date(2025, 10, 14), 6, 5); alias=default
[2025-09-30 23:05:39,626] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:05:39,751] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (21, 214, '110 Leslie Street Apt. 194, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(21, 214, '110 Leslie Street Apt. 194, Carrollton, TX 75006'); alias=default
[2025-09-30 23:05:39,861] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Renee Jones', '4091 Sarah Viaduct, Flower Mound, TX 75028', '2025-10-14'::date, 6, 6) RETURNING "scheduling_booking"."id"; args=('Renee Jones', '4091 Sarah Viaduct, Flower Mound, TX 75028', datetime.date(2025, 10, 14), 6, 6); alias=default
[2025-09-30 23:05:39,970] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:05:40,080] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (30, 215, '4091 Sarah Viaduct, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(30, 215, '4091 Sarah Viaduct, Flower Mound, TX 75028'); alias=default
[2025-09-30 23:05:40,189] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (27, 215, '4091 Sarah Viaduct, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(27, 215, '4091 Sarah Viaduct, Flower Mound, TX 75028'); alias=default
[2025-09-30 23:05:40,298] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (29, 215, '4091 Sarah Viaduct, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(29, 215, '4091 Sarah Viaduct, Flower Mound, TX 75028'); alias=default
[2025-09-30 23:05:40,408] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Angela Lloyd', '7604 Eric Falls, Dallas, TX 75201', '2025-10-14'::date, 8, 6) RETURNING "scheduling_booking"."id"; args=('Angela Lloyd', '7604 Eric Falls, Dallas, TX 75201', datetime.date(2025, 10, 14), 8, 6); alias=default
[2025-09-30 23:05:40,517] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:05:40,642] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (27, 216, '7604 Eric Falls, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(27, 216, '7604 Eric Falls, Dallas, TX 75201'); alias=default
[2025-09-30 23:05:41,079] DEBUG django.db.backends (0.438) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Renee Jones', '4091 Sarah Viaduct, Flower Mound, TX 75028', '2025-10-15'::date, 5, 4) RETURNING "scheduling_booking"."id"; args=('Renee Jones', '4091 Sarah Viaduct, Flower Mound, TX 75028', datetime.date(2025, 10, 15), 5, 4); alias=default
[2025-09-30 23:05:41,189] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:41,298] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 217, '4091 Sarah Viaduct, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(18, 217, '4091 Sarah Viaduct, Flower Mound, TX 75028'); alias=default
[2025-09-30 23:05:41,439] DEBUG django.db.backends (0.140) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 217, '4091 Sarah Viaduct, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(19, 217, '4091 Sarah Viaduct, Flower Mound, TX 75028'); alias=default
[2025-09-30 23:05:41,554] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Richard Flowers', '2160 James Road, Arlington, TX 76010', '2025-10-15'::date, 5, 5) RETURNING "scheduling_booking"."id"; args=('Richard Flowers', '2160 James Road, Arlington, TX 76010', datetime.date(2025, 10, 15), 5, 5); alias=default
[2025-09-30 23:05:41,673] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:05:41,795] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 218, '2160 James Road, Arlington, TX 76010') RETURNING "scheduling_jobassignment"."id"; args=(24, 218, '2160 James Road, Arlington, TX 76010'); alias=default
[2025-09-30 23:05:41,908] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (21, 218, '2160 James Road, Arlington, TX 76010') RETURNING "scheduling_jobassignment"."id"; args=(21, 218, '2160 James Road, Arlington, TX 76010'); alias=default
[2025-09-30 23:05:42,024] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (25, 218, '2160 James Road, Arlington, TX 76010') RETURNING "scheduling_jobassignment"."id"; args=(25, 218, '2160 James Road, Arlington, TX 76010'); alias=default
[2025-09-30 23:05:42,133] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Rose Lewis', '485 Brooke Inlet, Irving, TX 75039', '2025-10-15'::date, 6, 5) RETURNING "scheduling_booking"."id"; args=('Rose Lewis', '485 Brooke Inlet, Irving, TX 75039', datetime.date(2025, 10, 15), 6, 5); alias=default
[2025-09-30 23:05:42,235] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:05:42,345] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (22, 219, '485 Brooke Inlet, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(22, 219, '485 Brooke Inlet, Irving, TX 75039'); alias=default
[2025-09-30 23:05:42,468] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (25, 219, '485 Brooke Inlet, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(25, 219, '485 Brooke Inlet, Irving, TX 75039'); alias=default
[2025-09-30 23:05:42,573] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('John Lopez', '39584 Smith Port, Plano, TX 75093', '2025-10-16'::date, 5, 4) RETURNING "scheduling_booking"."id"; args=('John Lopez', '39584 Smith Port, Plano, TX 75093', datetime.date(2025, 10, 16), 5, 4); alias=default
[2025-09-30 23:05:42,682] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:42,798] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 220, '39584 Smith Port, Plano, TX 75093') RETURNING "scheduling_jobassignment"."id"; args=(18, 220, '39584 Smith Port, Plano, TX 75093'); alias=default
[2025-09-30 23:05:42,908] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 220, '39584 Smith Port, Plano, TX 75093') RETURNING "scheduling_jobassignment"."id"; args=(19, 220, '39584 Smith Port, Plano, TX 75093'); alias=default
[2025-09-30 23:05:43,017] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 220, '39584 Smith Port, Plano, TX 75093') RETURNING "scheduling_jobassignment"."id"; args=(16, 220, '39584 Smith Port, Plano, TX 75093'); alias=default
[2025-09-30 23:05:43,128] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Krystal Klein', '173 Green Unions, Denton, TX 76201', '2025-10-16'::date, 6, 4) RETURNING "scheduling_booking"."id"; args=('Krystal Klein', '173 Green Unions, Denton, TX 76201', datetime.date(2025, 10, 16), 6, 4); alias=default
[2025-09-30 23:05:43,251] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:43,360] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 221, '173 Green Unions, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(19, 221, '173 Green Unions, Denton, TX 76201'); alias=default
[2025-09-30 23:05:43,470] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Kristi Caldwell', '110 Leslie Street Apt. 194, Carrollton, TX 75006', '2025-10-16'::date, 7, 4) RETURNING "scheduling_booking"."id"; args=('Kristi Caldwell', '110 Leslie Street Apt. 194, Carrollton, TX 75006', datetime.date(2025, 10, 16), 7, 4); alias=default
[2025-09-30 23:05:43,582] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:43,686] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 222, '110 Leslie Street Apt. 194, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(19, 222, '110 Leslie Street Apt. 194, Carrollton, TX 75006'); alias=default
[2025-09-30 23:05:43,798] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (20, 222, '110 Leslie Street Apt. 194, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(20, 222, '110 Leslie Street Apt. 194, Carrollton, TX 75006'); alias=default
[2025-09-30 23:05:43,908] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 222, '110 Leslie Street Apt. 194, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(17, 222, '110 Leslie Street Apt. 194, Carrollton, TX 75006'); alias=default
[2025-09-30 23:05:44,017] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Heather Walker', '5057 Hamilton Fork Suite 237, Arlington, TX 76010', '2025-10-16'::date, 6, 5) RETURNING "scheduling_booking"."id"; args=('Heather Walker', '5057 Hamilton Fork Suite 237, Arlington, TX 76010', datetime.date(2025, 10, 16), 6, 5); alias=default
[2025-09-30 23:05:44,126] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:05:44,250] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (23, 223, '5057 Hamilton Fork Suite 237, Arlington, TX 76010') RETURNING "scheduling_jobassignment"."id"; args=(23, 223, '5057 Hamilton Fork Suite 237, Arlington, TX 76010'); alias=default
[2025-09-30 23:05:44,362] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Rose Lewis', '485 Brooke Inlet, Irving, TX 75039', '2025-10-16'::date, 5, 6) RETURNING "scheduling_booking"."id"; args=('Rose Lewis', '485 Brooke Inlet, Irving, TX 75039', datetime.date(2025, 10, 16), 5, 6); alias=default
[2025-09-30 23:05:44,470] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:05:44,579] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (28, 224, '485 Brooke Inlet, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(28, 224, '485 Brooke Inlet, Irving, TX 75039'); alias=default
[2025-09-30 23:05:44,706] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Michelle Fitzpatrick', '59290 Kathleen Summit, Garland, TX 75040', '2025-10-17'::date, 5, 4) RETURNING "scheduling_booking"."id"; args=('Michelle Fitzpatrick', '59290 Kathleen Summit, Garland, TX 75040', datetime.date(2025, 10, 17), 5, 4); alias=default
[2025-09-30 23:05:44,814] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:44,924] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 225, '59290 Kathleen Summit, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(19, 225, '59290 Kathleen Summit, Garland, TX 75040'); alias=default
[2025-09-30 23:05:45,033] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (20, 225, '59290 Kathleen Summit, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(20, 225, '59290 Kathleen Summit, Garland, TX 75040'); alias=default
[2025-09-30 23:05:45,141] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 225, '59290 Kathleen Summit, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(16, 225, '59290 Kathleen Summit, Garland, TX 75040'); alias=default
[2025-09-30 23:05:45,255] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Gary Reynolds', '1409 Lewis Grove, Flower Mound, TX 75028', '2025-10-17'::date, 7, 4) RETURNING "scheduling_booking"."id"; args=('Gary Reynolds', '1409 Lewis Grove, Flower Mound, TX 75028', datetime.date(2025, 10, 17), 7, 4); alias=default
[2025-09-30 23:05:45,361] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:45,470] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (20, 226, '1409 Lewis Grove, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(20, 226, '1409 Lewis Grove, Flower Mound, TX 75028'); alias=default
[2025-09-30 23:05:45,580] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 226, '1409 Lewis Grove, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(19, 226, '1409 Lewis Grove, Flower Mound, TX 75028'); alias=default
[2025-09-30 23:05:45,689] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 226, '1409 Lewis Grove, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(17, 226, '1409 Lewis Grove, Flower Mound, TX 75028'); alias=default
[2025-09-30 23:05:45,803] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Teresa Mcintosh', '06866 Parks Passage, Irving, TX 75039', '2025-10-17'::date, 7, 5) RETURNING "scheduling_booking"."id"; args=('Teresa Mcintosh', '06866 Parks Passage, Irving, TX 75039', datetime.date(2025, 10, 17), 7, 5); alias=default
[2025-09-30 23:05:45,908] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:05:46,036] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 227, '06866 Parks Passage, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(24, 227, '06866 Parks Passage, Irving, TX 75039'); alias=default
[2025-09-30 23:05:46,142] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (23, 227, '06866 Parks Passage, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(23, 227, '06866 Parks Passage, Irving, TX 75039'); alias=default
[2025-09-30 23:05:46,260] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Paige Jennings', '80464 Harding Station, Garland, TX 75040', '2025-10-17'::date, 8, 5) RETURNING "scheduling_booking"."id"; args=('Paige Jennings', '80464 Harding Station, Garland, TX 75040', datetime.date(2025, 10, 17), 8, 5); alias=default
[2025-09-30 23:05:46,367] DEBUG django.db.backends (0.094) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:05:46,485] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (25, 228, '80464 Harding Station, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(25, 228, '80464 Harding Station, Garland, TX 75040'); alias=default
[2025-09-30 23:05:46,610] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Edward Randall', '5346 Powell Bypass, Garland, TX 75040', '2025-10-17'::date, 6, 6) RETURNING "scheduling_booking"."id"; args=('Edward Randall', '5346 Powell Bypass, Garland, TX 75040', datetime.date(2025, 10, 17), 6, 6); alias=default
[2025-09-30 23:05:46,719] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:05:46,829] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (30, 229, '5346 Powell Bypass, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(30, 229, '5346 Powell Bypass, Garland, TX 75040'); alias=default
[2025-09-30 23:05:46,938] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 229, '5346 Powell Bypass, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(26, 229, '5346 Powell Bypass, Garland, TX 75040'); alias=default
[2025-09-30 23:05:47,048] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Anna Watson', '943 Gibson Mountain Suite 131, Richardson, TX 75080', '2025-10-18'::date, 5, 4) RETURNING "scheduling_booking"."id"; args=('Anna Watson', '943 Gibson Mountain Suite 131, Richardson, TX 75080', datetime.date(2025, 10, 18), 5, 4); alias=default
[2025-09-30 23:05:47,157] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:47,267] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 230, '943 Gibson Mountain Suite 131, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(18, 230, '943 Gibson Mountain Suite 131, Richardson, TX 75080'); alias=default
[2025-09-30 23:05:47,386] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 230, '943 Gibson Mountain Suite 131, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(16, 230, '943 Gibson Mountain Suite 131, Richardson, TX 75080'); alias=default
[2025-09-30 23:05:47,503] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 230, '943 Gibson Mountain Suite 131, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(17, 230, '943 Gibson Mountain Suite 131, Richardson, TX 75080'); alias=default
[2025-09-30 23:05:47,610] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Christy Bell', '607 Sharon Bridge Apt. 208, Frisco, TX 75034', '2025-10-18'::date, 8, 4) RETURNING "scheduling_booking"."id"; args=('Christy Bell', '607 Sharon Bridge Apt. 208, Frisco, TX 75034', datetime.date(2025, 10, 18), 8, 4); alias=default
[2025-09-30 23:05:47,720] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:47,830] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 231, '607 Sharon Bridge Apt. 208, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(18, 231, '607 Sharon Bridge Apt. 208, Frisco, TX 75034'); alias=default
[2025-09-30 23:05:47,935] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 231, '607 Sharon Bridge Apt. 208, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(19, 231, '607 Sharon Bridge Apt. 208, Frisco, TX 75034'); alias=default
[2025-09-30 23:05:48,048] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 231, '607 Sharon Bridge Apt. 208, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(16, 231, '607 Sharon Bridge Apt. 208, Frisco, TX 75034'); alias=default
[2025-09-30 23:05:48,158] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jennifer Jones', '6831 Cameron Circles Apt. 761, Denton, TX 76201', '2025-10-18'::date, 7, 5) RETURNING "scheduling_booking"."id"; args=('Jennifer Jones', '6831 Cameron Circles Apt. 761, Denton, TX 76201', datetime.date(2025, 10, 18), 7, 5); alias=default
[2025-09-30 23:05:48,267] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:05:48,393] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (25, 232, '6831 Cameron Circles Apt. 761, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(25, 232, '6831 Cameron Circles Apt. 761, Denton, TX 76201'); alias=default
[2025-09-30 23:05:48,499] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Anita Hubbard', '738 Brenda Islands Suite 194, Irving, TX 75039', '2025-10-18'::date, 7, 6) RETURNING "scheduling_booking"."id"; args=('Anita Hubbard', '738 Brenda Islands Suite 194, Irving, TX 75039', datetime.date(2025, 10, 18), 7, 6); alias=default
[2025-09-30 23:05:48,611] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:05:48,721] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (28, 233, '738 Brenda Islands Suite 194, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(28, 233, '738 Brenda Islands Suite 194, Irving, TX 75039'); alias=default
[2025-09-30 23:05:48,830] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (29, 233, '738 Brenda Islands Suite 194, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(29, 233, '738 Brenda Islands Suite 194, Irving, TX 75039'); alias=default
[2025-09-30 23:05:48,938] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Michael Brooks', '22523 Kramer Turnpike Suite 912, Plano, TX 75093', '2025-10-19'::date, 7, 4) RETURNING "scheduling_booking"."id"; args=('Michael Brooks', '22523 Kramer Turnpike Suite 912, Plano, TX 75093', datetime.date(2025, 10, 19), 7, 4); alias=default
[2025-09-30 23:05:49,048] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:49,158] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 234, '22523 Kramer Turnpike Suite 912, Plano, TX 75093') RETURNING "scheduling_jobassignment"."id"; args=(18, 234, '22523 Kramer Turnpike Suite 912, Plano, TX 75093'); alias=default
[2025-09-30 23:05:49,267] DEBUG django.db.backends (0.093) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Leslie Guerra', '9075 Kelly Mountain Suite 226, Carrollton, TX 75006', '2025-10-19'::date, 8, 4) RETURNING "scheduling_booking"."id"; args=('Leslie Guerra', '9075 Kelly Mountain Suite 226, Carrollton, TX 75006', datetime.date(2025, 10, 19), 8, 4); alias=default
[2025-09-30 23:05:49,392] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:49,503] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 235, '9075 Kelly Mountain Suite 226, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(18, 235, '9075 Kelly Mountain Suite 226, Carrollton, TX 75006'); alias=default
[2025-09-30 23:05:49,611] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 235, '9075 Kelly Mountain Suite 226, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(19, 235, '9075 Kelly Mountain Suite 226, Carrollton, TX 75006'); alias=default
[2025-09-30 23:05:49,720] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (20, 235, '9075 Kelly Mountain Suite 226, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(20, 235, '9075 Kelly Mountain Suite 226, Carrollton, TX 75006'); alias=default
[2025-09-30 23:05:49,830] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Matthew Lewis', '331 Mckee Land Apt. 938, Irving, TX 75039', '2025-10-19'::date, 7, 5) RETURNING "scheduling_booking"."id"; args=('Matthew Lewis', '331 Mckee Land Apt. 938, Irving, TX 75039', datetime.date(2025, 10, 19), 7, 5); alias=default
[2025-09-30 23:05:49,939] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:05:50,059] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 236, '331 Mckee Land Apt. 938, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(24, 236, '331 Mckee Land Apt. 938, Irving, TX 75039'); alias=default
[2025-09-30 23:05:50,157] DEBUG django.db.backends (0.094) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (25, 236, '331 Mckee Land Apt. 938, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(25, 236, '331 Mckee Land Apt. 938, Irving, TX 75039'); alias=default
[2025-09-30 23:05:50,267] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (21, 236, '331 Mckee Land Apt. 938, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(21, 236, '331 Mckee Land Apt. 938, Irving, TX 75039'); alias=default
[2025-09-30 23:05:50,376] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Brian Reynolds', '29617 Susan Knoll, Dallas, TX 75201', '2025-10-19'::date, 5, 6) RETURNING "scheduling_booking"."id"; args=('Brian Reynolds', '29617 Susan Knoll, Dallas, TX 75201', datetime.date(2025, 10, 19), 5, 6); alias=default
[2025-09-30 23:05:50,486] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:05:50,595] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (27, 237, '29617 Susan Knoll, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(27, 237, '29617 Susan Knoll, Dallas, TX 75201'); alias=default
[2025-09-30 23:05:50,720] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (30, 237, '29617 Susan Knoll, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(30, 237, '29617 Susan Knoll, Dallas, TX 75201'); alias=default
[2025-09-30 23:05:50,829] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Heather Walker', '5057 Hamilton Fork Suite 237, Arlington, TX 76010', '2025-10-19'::date, 7, 6) RETURNING "scheduling_booking"."id"; args=('Heather Walker', '5057 Hamilton Fork Suite 237, Arlington, TX 76010', datetime.date(2025, 10, 19), 7, 6); alias=default
[2025-09-30 23:05:50,939] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:05:51,059] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (28, 238, '5057 Hamilton Fork Suite 237, Arlington, TX 76010') RETURNING "scheduling_jobassignment"."id"; args=(28, 238, '5057 Hamilton Fork Suite 237, Arlington, TX 76010'); alias=default
[2025-09-30 23:05:51,157] DEBUG django.db.backends (0.094) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (30, 238, '5057 Hamilton Fork Suite 237, Arlington, TX 76010') RETURNING "scheduling_jobassignment"."id"; args=(30, 238, '5057 Hamilton Fork Suite 237, Arlington, TX 76010'); alias=default
[2025-09-30 23:05:51,283] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Michele Ruiz', '943 Moore Club Apt. 160, Denton, TX 76201', '2025-10-20'::date, 7, 4) RETURNING "scheduling_booking"."id"; args=('Michele Ruiz', '943 Moore Club Apt. 160, Denton, TX 76201', datetime.date(2025, 10, 20), 7, 4); alias=default
[2025-09-30 23:05:51,395] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:51,524] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 239, '943 Moore Club Apt. 160, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(17, 239, '943 Moore Club Apt. 160, Denton, TX 76201'); alias=default
[2025-09-30 23:05:51,638] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 239, '943 Moore Club Apt. 160, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(19, 239, '943 Moore Club Apt. 160, Denton, TX 76201'); alias=default
[2025-09-30 23:05:51,764] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Teresa Mcintosh', '06866 Parks Passage, Irving, TX 75039', '2025-10-20'::date, 8, 4) RETURNING "scheduling_booking"."id"; args=('Teresa Mcintosh', '06866 Parks Passage, Irving, TX 75039', datetime.date(2025, 10, 20), 8, 4); alias=default
[2025-09-30 23:05:51,876] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:51,985] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 240, '06866 Parks Passage, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(16, 240, '06866 Parks Passage, Irving, TX 75039'); alias=default
[2025-09-30 23:05:52,095] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Lisa Hughes', '387 Gonzalez Wall, Richardson, TX 75080', '2025-10-20'::date, 6, 5) RETURNING "scheduling_booking"."id"; args=('Lisa Hughes', '387 Gonzalez Wall, Richardson, TX 75080', datetime.date(2025, 10, 20), 6, 5); alias=default
[2025-09-30 23:05:52,204] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:05:52,314] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 241, '387 Gonzalez Wall, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(24, 241, '387 Gonzalez Wall, Richardson, TX 75080'); alias=default
[2025-09-30 23:05:52,424] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Catherine Faulkner', '644 Grant Circle Suite 363, Garland, TX 75040', '2025-10-20'::date, 8, 5) RETURNING "scheduling_booking"."id"; args=('Catherine Faulkner', '644 Grant Circle Suite 363, Garland, TX 75040', datetime.date(2025, 10, 20), 8, 5); alias=default
[2025-09-30 23:05:52,549] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:05:52,655] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (21, 242, '644 Grant Circle Suite 363, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(21, 242, '644 Grant Circle Suite 363, Garland, TX 75040'); alias=default
[2025-09-30 23:05:52,765] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Cynthia Stone', '4122 Lisa Meadow Suite 396, Richardson, TX 75080', '2025-10-21'::date, 6, 4) RETURNING "scheduling_booking"."id"; args=('Cynthia Stone', '4122 Lisa Meadow Suite 396, Richardson, TX 75080', datetime.date(2025, 10, 21), 6, 4); alias=default
[2025-09-30 23:05:52,876] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:52,986] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 243, '4122 Lisa Meadow Suite 396, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(16, 243, '4122 Lisa Meadow Suite 396, Richardson, TX 75080'); alias=default
[2025-09-30 23:05:53,094] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 243, '4122 Lisa Meadow Suite 396, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(17, 243, '4122 Lisa Meadow Suite 396, Richardson, TX 75080'); alias=default
[2025-09-30 23:05:53,205] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Dawn Good', '205 Brian Summit Apt. 603, Dallas, TX 75201', '2025-10-21'::date, 7, 4) RETURNING "scheduling_booking"."id"; args=('Dawn Good', '205 Brian Summit Apt. 603, Dallas, TX 75201', datetime.date(2025, 10, 21), 7, 4); alias=default
[2025-09-30 23:05:53,314] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:53,439] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 244, '205 Brian Summit Apt. 603, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(18, 244, '205 Brian Summit Apt. 603, Dallas, TX 75201'); alias=default
[2025-09-30 23:05:53,548] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 244, '205 Brian Summit Apt. 603, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(16, 244, '205 Brian Summit Apt. 603, Dallas, TX 75201'); alias=default
[2025-09-30 23:05:53,658] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (20, 244, '205 Brian Summit Apt. 603, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(20, 244, '205 Brian Summit Apt. 603, Dallas, TX 75201'); alias=default
[2025-09-30 23:05:53,767] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('John Williams', '5102 Malone Pines Suite 986, Plano, TX 75093', '2025-10-21'::date, 8, 4) RETURNING "scheduling_booking"."id"; args=('John Williams', '5102 Malone Pines Suite 986, Plano, TX 75093', datetime.date(2025, 10, 21), 8, 4); alias=default
[2025-09-30 23:05:53,876] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:53,986] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 245, '5102 Malone Pines Suite 986, Plano, TX 75093') RETURNING "scheduling_jobassignment"."id"; args=(16, 245, '5102 Malone Pines Suite 986, Plano, TX 75093'); alias=default
[2025-09-30 23:05:54,095] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Kristen Mitchell', '21808 Carla Locks Suite 538, Garland, TX 75040', '2025-10-21'::date, 5, 5) RETURNING "scheduling_booking"."id"; args=('Kristen Mitchell', '21808 Carla Locks Suite 538, Garland, TX 75040', datetime.date(2025, 10, 21), 5, 5); alias=default
[2025-09-30 23:05:54,204] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:05:54,329] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (22, 246, '21808 Carla Locks Suite 538, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(22, 246, '21808 Carla Locks Suite 538, Garland, TX 75040'); alias=default
[2025-09-30 23:05:54,439] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (23, 246, '21808 Carla Locks Suite 538, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(23, 246, '21808 Carla Locks Suite 538, Garland, TX 75040'); alias=default
[2025-09-30 23:05:54,547] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (21, 246, '21808 Carla Locks Suite 538, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(21, 246, '21808 Carla Locks Suite 538, Garland, TX 75040'); alias=default
[2025-09-30 23:05:54,657] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Stacey Bryant', '98535 Kennedy Pines Suite 345, Plano, TX 75093', '2025-10-21'::date, 6, 5) RETURNING "scheduling_booking"."id"; args=('Stacey Bryant', '98535 Kennedy Pines Suite 345, Plano, TX 75093', datetime.date(2025, 10, 21), 6, 5); alias=default
[2025-09-30 23:05:54,787] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:05:54,892] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (21, 247, '98535 Kennedy Pines Suite 345, Plano, TX 75093') RETURNING "scheduling_jobassignment"."id"; args=(21, 247, '98535 Kennedy Pines Suite 345, Plano, TX 75093'); alias=default
[2025-09-30 23:05:55,020] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 247, '98535 Kennedy Pines Suite 345, Plano, TX 75093') RETURNING "scheduling_jobassignment"."id"; args=(24, 247, '98535 Kennedy Pines Suite 345, Plano, TX 75093'); alias=default
[2025-09-30 23:05:55,129] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Elizabeth Rush', '9152 Carpenter Rest, Irving, TX 75039', '2025-10-21'::date, 8, 5) RETURNING "scheduling_booking"."id"; args=('Elizabeth Rush', '9152 Carpenter Rest, Irving, TX 75039', datetime.date(2025, 10, 21), 8, 5); alias=default
[2025-09-30 23:05:55,228] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:05:55,351] DEBUG django.db.backends (0.094) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (21, 248, '9152 Carpenter Rest, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(21, 248, '9152 Carpenter Rest, Irving, TX 75039'); alias=default
[2025-09-30 23:05:55,460] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Lauren Wallace', '50374 Travis Union Suite 238, Frisco, TX 75034', '2025-10-21'::date, 6, 6) RETURNING "scheduling_booking"."id"; args=('Lauren Wallace', '50374 Travis Union Suite 238, Frisco, TX 75034', datetime.date(2025, 10, 21), 6, 6); alias=default
[2025-09-30 23:05:55,571] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:05:55,674] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 249, '50374 Travis Union Suite 238, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(26, 249, '50374 Travis Union Suite 238, Frisco, TX 75034'); alias=default
[2025-09-30 23:05:55,795] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (30, 249, '50374 Travis Union Suite 238, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(30, 249, '50374 Travis Union Suite 238, Frisco, TX 75034'); alias=default
[2025-09-30 23:05:55,899] DEBUG django.db.backends (0.093) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (28, 249, '50374 Travis Union Suite 238, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(28, 249, '50374 Travis Union Suite 238, Frisco, TX 75034'); alias=default
[2025-09-30 23:05:56,017] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('John Bradley', '68744 Karen Junctions Apt. 999, Flower Mound, TX 75028', '2025-10-21'::date, 7, 6) RETURNING "scheduling_booking"."id"; args=('John Bradley', '68744 Karen Junctions Apt. 999, Flower Mound, TX 75028', datetime.date(2025, 10, 21), 7, 6); alias=default
[2025-09-30 23:05:56,126] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:05:56,236] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (27, 250, '68744 Karen Junctions Apt. 999, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(27, 250, '68744 Karen Junctions Apt. 999, Flower Mound, TX 75028'); alias=default
[2025-09-30 23:05:56,350] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (29, 250, '68744 Karen Junctions Apt. 999, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(29, 250, '68744 Karen Junctions Apt. 999, Flower Mound, TX 75028'); alias=default
[2025-09-30 23:05:56,448] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (28, 250, '68744 Karen Junctions Apt. 999, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(28, 250, '68744 Karen Junctions Apt. 999, Flower Mound, TX 75028'); alias=default
[2025-09-30 23:05:56,563] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Victoria Beck', '4290 Christopher Land Suite 945, Denton, TX 76201', '2025-10-22'::date, 6, 4) RETURNING "scheduling_booking"."id"; args=('Victoria Beck', '4290 Christopher Land Suite 945, Denton, TX 76201', datetime.date(2025, 10, 22), 6, 4); alias=default
[2025-09-30 23:05:56,673] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:56,798] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (20, 251, '4290 Christopher Land Suite 945, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(20, 251, '4290 Christopher Land Suite 945, Denton, TX 76201'); alias=default
[2025-09-30 23:05:56,903] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Steven Moss', '0306 Brewer Road Apt. 344, Plano, TX 75093', '2025-10-22'::date, 5, 5) RETURNING "scheduling_booking"."id"; args=('Steven Moss', '0306 Brewer Road Apt. 344, Plano, TX 75093', datetime.date(2025, 10, 22), 5, 5); alias=default
[2025-09-30 23:05:57,012] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:05:57,134] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 252, '0306 Brewer Road Apt. 344, Plano, TX 75093') RETURNING "scheduling_jobassignment"."id"; args=(24, 252, '0306 Brewer Road Apt. 344, Plano, TX 75093'); alias=default
[2025-09-30 23:05:57,236] DEBUG django.db.backends (0.094) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (23, 252, '0306 Brewer Road Apt. 344, Plano, TX 75093') RETURNING "scheduling_jobassignment"."id"; args=(23, 252, '0306 Brewer Road Apt. 344, Plano, TX 75093'); alias=default
[2025-09-30 23:05:57,345] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (22, 252, '0306 Brewer Road Apt. 344, Plano, TX 75093') RETURNING "scheduling_jobassignment"."id"; args=(22, 252, '0306 Brewer Road Apt. 344, Plano, TX 75093'); alias=default
[2025-09-30 23:05:57,454] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Rodney Guerrero', '7275 King Stream, Denton, TX 76201', '2025-10-22'::date, 8, 5) RETURNING "scheduling_booking"."id"; args=('Rodney Guerrero', '7275 King Stream, Denton, TX 76201', datetime.date(2025, 10, 22), 8, 5); alias=default
[2025-09-30 23:05:57,564] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:05:57,673] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (23, 253, '7275 King Stream, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(23, 253, '7275 King Stream, Denton, TX 76201'); alias=default
[2025-09-30 23:05:57,813] DEBUG django.db.backends (0.140) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 253, '7275 King Stream, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(24, 253, '7275 King Stream, Denton, TX 76201'); alias=default
[2025-09-30 23:05:57,924] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Jennifer Whitaker', '497 Owen Walk, Dallas, TX 75201', '2025-10-22'::date, 5, 6) RETURNING "scheduling_booking"."id"; args=('Jennifer Whitaker', '497 Owen Walk, Dallas, TX 75201', datetime.date(2025, 10, 22), 5, 6); alias=default
[2025-09-30 23:05:58,032] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:05:58,150] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (30, 254, '497 Owen Walk, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(30, 254, '497 Owen Walk, Dallas, TX 75201'); alias=default
[2025-09-30 23:05:58,251] DEBUG django.db.backends (0.094) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (28, 254, '497 Owen Walk, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(28, 254, '497 Owen Walk, Dallas, TX 75201'); alias=default
[2025-09-30 23:05:58,361] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (27, 254, '497 Owen Walk, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(27, 254, '497 Owen Walk, Dallas, TX 75201'); alias=default
[2025-09-30 23:05:58,477] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Zoe Carroll', '585 Patterson Place Suite 748, Plano, TX 75093', '2025-10-22'::date, 8, 6) RETURNING "scheduling_booking"."id"; args=('Zoe Carroll', '585 Patterson Place Suite 748, Plano, TX 75093', datetime.date(2025, 10, 22), 8, 6); alias=default
[2025-09-30 23:05:58,581] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:05:58,689] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (29, 255, '585 Patterson Place Suite 748, Plano, TX 75093') RETURNING "scheduling_jobassignment"."id"; args=(29, 255, '585 Patterson Place Suite 748, Plano, TX 75093'); alias=default
[2025-09-30 23:05:58,798] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 255, '585 Patterson Place Suite 748, Plano, TX 75093') RETURNING "scheduling_jobassignment"."id"; args=(26, 255, '585 Patterson Place Suite 748, Plano, TX 75093'); alias=default
[2025-09-30 23:05:58,907] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (28, 255, '585 Patterson Place Suite 748, Plano, TX 75093') RETURNING "scheduling_jobassignment"."id"; args=(28, 255, '585 Patterson Place Suite 748, Plano, TX 75093'); alias=default
[2025-09-30 23:05:59,021] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Dawn Kelley', '169 Brittany Neck, Flower Mound, TX 75028', '2025-10-23'::date, 6, 4) RETURNING "scheduling_booking"."id"; args=('Dawn Kelley', '169 Brittany Neck, Flower Mound, TX 75028', datetime.date(2025, 10, 23), 6, 4); alias=default
[2025-09-30 23:05:59,146] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:59,251] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (20, 256, '169 Brittany Neck, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(20, 256, '169 Brittany Neck, Flower Mound, TX 75028'); alias=default
[2025-09-30 23:05:59,372] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Kristin Barnett', '89846 Reed Cape, Flower Mound, TX 75028', '2025-10-23'::date, 7, 4) RETURNING "scheduling_booking"."id"; args=('Kristin Barnett', '89846 Reed Cape, Flower Mound, TX 75028', datetime.date(2025, 10, 23), 7, 4); alias=default
[2025-09-30 23:05:59,485] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:59,594] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 257, '89846 Reed Cape, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(19, 257, '89846 Reed Cape, Flower Mound, TX 75028'); alias=default
[2025-09-30 23:05:59,703] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Brian Butler', '256 Davis Cliff Apt. 306, Carrollton, TX 75006', '2025-10-23'::date, 8, 4) RETURNING "scheduling_booking"."id"; args=('Brian Butler', '256 Davis Cliff Apt. 306, Carrollton, TX 75006', datetime.date(2025, 10, 23), 8, 4); alias=default
[2025-09-30 23:05:59,808] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:05:59,923] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 258, '256 Davis Cliff Apt. 306, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(16, 258, '256 Davis Cliff Apt. 306, Carrollton, TX 75006'); alias=default
[2025-09-30 23:06:00,034] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 258, '256 Davis Cliff Apt. 306, Carrollton, TX 75006') RETURNING "scheduling_jobassignment"."id"; args=(18, 258, '256 Davis Cliff Apt. 306, Carrollton, TX 75006'); alias=default
[2025-09-30 23:06:00,142] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Annette Evans', '858 Kenneth Crest, Frisco, TX 75034', '2025-10-23'::date, 5, 5) RETURNING "scheduling_booking"."id"; args=('Annette Evans', '858 Kenneth Crest, Frisco, TX 75034', datetime.date(2025, 10, 23), 5, 5); alias=default
[2025-09-30 23:06:00,251] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:06:00,360] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (21, 259, '858 Kenneth Crest, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(21, 259, '858 Kenneth Crest, Frisco, TX 75034'); alias=default
[2025-09-30 23:06:00,469] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 259, '858 Kenneth Crest, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(24, 259, '858 Kenneth Crest, Frisco, TX 75034'); alias=default
[2025-09-30 23:06:00,594] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Lisa Hughes', '387 Gonzalez Wall, Richardson, TX 75080', '2025-10-23'::date, 5, 6) RETURNING "scheduling_booking"."id"; args=('Lisa Hughes', '387 Gonzalez Wall, Richardson, TX 75080', datetime.date(2025, 10, 23), 5, 6); alias=default
[2025-09-30 23:06:00,704] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:06:00,814] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (29, 260, '387 Gonzalez Wall, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(29, 260, '387 Gonzalez Wall, Richardson, TX 75080'); alias=default
[2025-09-30 23:06:00,954] DEBUG django.db.backends (0.141) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (30, 260, '387 Gonzalez Wall, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(30, 260, '387 Gonzalez Wall, Richardson, TX 75080'); alias=default
[2025-09-30 23:06:01,063] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 260, '387 Gonzalez Wall, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(26, 260, '387 Gonzalez Wall, Richardson, TX 75080'); alias=default
[2025-09-30 23:06:01,208] DEBUG django.db.backends (0.141) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Lauren Williams', '880 Brent Mountain, Frisco, TX 75034', '2025-10-23'::date, 7, 6) RETURNING "scheduling_booking"."id"; args=('Lauren Williams', '880 Brent Mountain, Frisco, TX 75034', datetime.date(2025, 10, 23), 7, 6); alias=default
[2025-09-30 23:06:01,314] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:06:01,433] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (27, 261, '880 Brent Mountain, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(27, 261, '880 Brent Mountain, Frisco, TX 75034'); alias=default
[2025-09-30 23:06:01,546] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (30, 261, '880 Brent Mountain, Frisco, TX 75034') RETURNING "scheduling_jobassignment"."id"; args=(30, 261, '880 Brent Mountain, Frisco, TX 75034'); alias=default
[2025-09-30 23:06:01,655] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Joseph Baldwin', '5967 Sawyer Walks, Arlington, TX 76010', '2025-10-24'::date, 5, 5) RETURNING "scheduling_booking"."id"; args=('Joseph Baldwin', '5967 Sawyer Walks, Arlington, TX 76010', datetime.date(2025, 10, 24), 5, 5); alias=default
[2025-09-30 23:06:01,766] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:06:01,876] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (23, 262, '5967 Sawyer Walks, Arlington, TX 76010') RETURNING "scheduling_jobassignment"."id"; args=(23, 262, '5967 Sawyer Walks, Arlington, TX 76010'); alias=default
[2025-09-30 23:06:01,986] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Courtney Ballard', '48134 Perkins Via Suite 417, Richardson, TX 75080', '2025-10-24'::date, 8, 5) RETURNING "scheduling_booking"."id"; args=('Courtney Ballard', '48134 Perkins Via Suite 417, Richardson, TX 75080', datetime.date(2025, 10, 24), 8, 5); alias=default
[2025-09-30 23:06:02,095] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:06:02,204] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (21, 263, '48134 Perkins Via Suite 417, Richardson, TX 75080') RETURNING "scheduling_jobassignment"."id"; args=(21, 263, '48134 Perkins Via Suite 417, Richardson, TX 75080'); alias=default
[2025-09-30 23:06:02,313] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Anita Hubbard', '738 Brenda Islands Suite 194, Irving, TX 75039', '2025-10-24'::date, 6, 6) RETURNING "scheduling_booking"."id"; args=('Anita Hubbard', '738 Brenda Islands Suite 194, Irving, TX 75039', datetime.date(2025, 10, 24), 6, 6); alias=default
[2025-09-30 23:06:02,423] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:06:02,533] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 264, '738 Brenda Islands Suite 194, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(26, 264, '738 Brenda Islands Suite 194, Irving, TX 75039'); alias=default
[2025-09-30 23:06:02,652] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Aaron Henry', '95934 Williams Islands, Flower Mound, TX 75028', '2025-10-25'::date, 8, 4) RETURNING "scheduling_booking"."id"; args=('Aaron Henry', '95934 Williams Islands, Flower Mound, TX 75028', datetime.date(2025, 10, 25), 8, 4); alias=default
[2025-09-30 23:06:02,751] DEBUG django.db.backends (0.094) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:06:02,860] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 265, '95934 Williams Islands, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(16, 265, '95934 Williams Islands, Flower Mound, TX 75028'); alias=default
[2025-09-30 23:06:02,985] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Robert Garcia', '23242 Sharp Stream Apt. 705, Flower Mound, TX 75028', '2025-10-25'::date, 7, 6) RETURNING "scheduling_booking"."id"; args=('Robert Garcia', '23242 Sharp Stream Apt. 705, Flower Mound, TX 75028', datetime.date(2025, 10, 25), 7, 6); alias=default
[2025-09-30 23:06:03,095] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:06:03,204] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (27, 266, '23242 Sharp Stream Apt. 705, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(27, 266, '23242 Sharp Stream Apt. 705, Flower Mound, TX 75028'); alias=default
[2025-09-30 23:06:03,313] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 266, '23242 Sharp Stream Apt. 705, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(26, 266, '23242 Sharp Stream Apt. 705, Flower Mound, TX 75028'); alias=default
[2025-09-30 23:06:03,423] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Randy Sanchez', '46102 Tamara Roads, Irving, TX 75039', '2025-10-26'::date, 5, 4) RETURNING "scheduling_booking"."id"; args=('Randy Sanchez', '46102 Tamara Roads, Irving, TX 75039', datetime.date(2025, 10, 26), 5, 4); alias=default
[2025-09-30 23:06:03,532] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:06:03,658] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 267, '46102 Tamara Roads, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(16, 267, '46102 Tamara Roads, Irving, TX 75039'); alias=default
[2025-09-30 23:06:03,770] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (20, 267, '46102 Tamara Roads, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(20, 267, '46102 Tamara Roads, Irving, TX 75039'); alias=default
[2025-09-30 23:06:03,891] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Rose Lewis', '485 Brooke Inlet, Irving, TX 75039', '2025-10-26'::date, 6, 4) RETURNING "scheduling_booking"."id"; args=('Rose Lewis', '485 Brooke Inlet, Irving, TX 75039', datetime.date(2025, 10, 26), 6, 4); alias=default
[2025-09-30 23:06:04,001] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:06:04,111] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 268, '485 Brooke Inlet, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(19, 268, '485 Brooke Inlet, Irving, TX 75039'); alias=default
[2025-09-30 23:06:04,221] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 268, '485 Brooke Inlet, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(16, 268, '485 Brooke Inlet, Irving, TX 75039'); alias=default
[2025-09-30 23:06:04,320] DEBUG django.db.backends (0.093) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 268, '485 Brooke Inlet, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(18, 268, '485 Brooke Inlet, Irving, TX 75039'); alias=default
[2025-09-30 23:06:04,438] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Thomas Robinson', '7304 Lisa Prairie Suite 452, Flower Mound, TX 75028', '2025-10-26'::date, 7, 4) RETURNING "scheduling_booking"."id"; args=('Thomas Robinson', '7304 Lisa Prairie Suite 452, Flower Mound, TX 75028', datetime.date(2025, 10, 26), 7, 4); alias=default
[2025-09-30 23:06:04,548] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:06:04,657] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (20, 269, '7304 Lisa Prairie Suite 452, Flower Mound, TX 75028') RETURNING "scheduling_jobassignment"."id"; args=(20, 269, '7304 Lisa Prairie Suite 452, Flower Mound, TX 75028'); alias=default
[2025-09-30 23:06:04,768] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Kathleen Wood', '3296 Jake Street Suite 977, Garland, TX 75040', '2025-10-26'::date, 8, 4) RETURNING "scheduling_booking"."id"; args=('Kathleen Wood', '3296 Jake Street Suite 977, Garland, TX 75040', datetime.date(2025, 10, 26), 8, 4); alias=default
[2025-09-30 23:06:04,883] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:06:04,992] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 270, '3296 Jake Street Suite 977, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(17, 270, '3296 Jake Street Suite 977, Garland, TX 75040'); alias=default
[2025-09-30 23:06:05,111] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (20, 270, '3296 Jake Street Suite 977, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(20, 270, '3296 Jake Street Suite 977, Garland, TX 75040'); alias=default
[2025-09-30 23:06:05,227] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 270, '3296 Jake Street Suite 977, Garland, TX 75040') RETURNING "scheduling_jobassignment"."id"; args=(18, 270, '3296 Jake Street Suite 977, Garland, TX 75040'); alias=default
[2025-09-30 23:06:05,330] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Perry Clarke', '740 Evans Crossing, Denton, TX 76201', '2025-10-26'::date, 5, 5) RETURNING "scheduling_booking"."id"; args=('Perry Clarke', '740 Evans Crossing, Denton, TX 76201', datetime.date(2025, 10, 26), 5, 5); alias=default
[2025-09-30 23:06:05,450] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:06:05,565] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (21, 271, '740 Evans Crossing, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(21, 271, '740 Evans Crossing, Denton, TX 76201'); alias=default
[2025-09-30 23:06:05,678] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 271, '740 Evans Crossing, Denton, TX 76201') RETURNING "scheduling_jobassignment"."id"; args=(24, 271, '740 Evans Crossing, Denton, TX 76201'); alias=default
[2025-09-30 23:06:05,789] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Laurie Singh', '576 Anna Circles, Dallas, TX 75201', '2025-10-26'::date, 8, 5) RETURNING "scheduling_booking"."id"; args=('Laurie Singh', '576 Anna Circles, Dallas, TX 75201', datetime.date(2025, 10, 26), 8, 5); alias=default
[2025-09-30 23:06:05,898] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:06:06,011] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (25, 272, '576 Anna Circles, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(25, 272, '576 Anna Circles, Dallas, TX 75201'); alias=default
[2025-09-30 23:06:06,124] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Roger Sullivan', '64319 Steven Port, Arlington, TX 76010', '2025-10-26'::date, 8, 6) RETURNING "scheduling_booking"."id"; args=('Roger Sullivan', '64319 Steven Port, Arlington, TX 76010', datetime.date(2025, 10, 26), 8, 6); alias=default
[2025-09-30 23:06:06,235] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:06:06,346] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (27, 273, '64319 Steven Port, Arlington, TX 76010') RETURNING "scheduling_jobassignment"."id"; args=(27, 273, '64319 Steven Port, Arlington, TX 76010'); alias=default
[2025-09-30 23:06:06,467] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('John Lopez', '39584 Smith Port, Plano, TX 75093', '2025-10-27'::date, 5, 4) RETURNING "scheduling_booking"."id"; args=('John Lopez', '39584 Smith Port, Plano, TX 75093', datetime.date(2025, 10, 27), 5, 4); alias=default
[2025-09-30 23:06:06,580] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:06:06,690] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 274, '39584 Smith Port, Plano, TX 75093') RETURNING "scheduling_jobassignment"."id"; args=(19, 274, '39584 Smith Port, Plano, TX 75093'); alias=default
[2025-09-30 23:06:06,798] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (18, 274, '39584 Smith Port, Plano, TX 75093') RETURNING "scheduling_jobassignment"."id"; args=(18, 274, '39584 Smith Port, Plano, TX 75093'); alias=default
[2025-09-30 23:06:06,907] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 274, '39584 Smith Port, Plano, TX 75093') RETURNING "scheduling_jobassignment"."id"; args=(16, 274, '39584 Smith Port, Plano, TX 75093'); alias=default
[2025-09-30 23:06:07,018] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Joseph Baldwin', '5967 Sawyer Walks, Arlington, TX 76010', '2025-10-27'::date, 6, 4) RETURNING "scheduling_booking"."id"; args=('Joseph Baldwin', '5967 Sawyer Walks, Arlington, TX 76010', datetime.date(2025, 10, 27), 6, 4); alias=default
[2025-09-30 23:06:07,142] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:06:07,252] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 275, '5967 Sawyer Walks, Arlington, TX 76010') RETURNING "scheduling_jobassignment"."id"; args=(16, 275, '5967 Sawyer Walks, Arlington, TX 76010'); alias=default
[2025-09-30 23:06:07,360] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Elizabeth Rush', '9152 Carpenter Rest, Irving, TX 75039', '2025-10-27'::date, 7, 4) RETURNING "scheduling_booking"."id"; args=('Elizabeth Rush', '9152 Carpenter Rest, Irving, TX 75039', datetime.date(2025, 10, 27), 7, 4); alias=default
[2025-09-30 23:06:07,471] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 4; args=(4,); alias=default
[2025-09-30 23:06:07,579] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (17, 276, '9152 Carpenter Rest, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(17, 276, '9152 Carpenter Rest, Irving, TX 75039'); alias=default
[2025-09-30 23:06:07,688] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (19, 276, '9152 Carpenter Rest, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(19, 276, '9152 Carpenter Rest, Irving, TX 75039'); alias=default
[2025-09-30 23:06:07,798] DEBUG django.db.backends (0.110) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (16, 276, '9152 Carpenter Rest, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(16, 276, '9152 Carpenter Rest, Irving, TX 75039'); alias=default
[2025-09-30 23:06:07,907] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Amanda Perkins', '6748 Cesar Gardens, Irving, TX 75039', '2025-10-27'::date, 6, 5) RETURNING "scheduling_booking"."id"; args=('Amanda Perkins', '6748 Cesar Gardens, Irving, TX 75039', datetime.date(2025, 10, 27), 6, 5); alias=default
[2025-09-30 23:06:08,032] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:06:08,469] DEBUG django.db.backends (0.438) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (25, 277, '6748 Cesar Gardens, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(25, 277, '6748 Cesar Gardens, Irving, TX 75039'); alias=default
[2025-09-30 23:06:08,567] DEBUG django.db.backends (0.093) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (21, 277, '6748 Cesar Gardens, Irving, TX 75039') RETURNING "scheduling_jobassignment"."id"; args=(21, 277, '6748 Cesar Gardens, Irving, TX 75039'); alias=default
[2025-09-30 23:06:08,689] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('Ronald Mitchell', '28724 Williams Rest, Dallas, TX 75201', '2025-10-27'::date, 7, 5) RETURNING "scheduling_booking"."id"; args=('Ronald Mitchell', '28724 Williams Rest, Dallas, TX 75201', datetime.date(2025, 10, 27), 7, 5); alias=default
[2025-09-30 23:06:08,798] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:06:08,907] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (24, 278, '28724 Williams Rest, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(24, 278, '28724 Williams Rest, Dallas, TX 75201'); alias=default
[2025-09-30 23:06:09,032] DEBUG django.db.backends (0.125) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (21, 278, '28724 Williams Rest, Dallas, TX 75201') RETURNING "scheduling_jobassignment"."id"; args=(21, 278, '28724 Williams Rest, Dallas, TX 75201'); alias=default
[2025-09-30 23:06:09,142] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_booking" ("customer_name", "customer_address", "date", "time_slot_id", "service_category_id") VALUES ('John Williams', '5102 Malone Pines Suite 986, Plano, TX 75093', '2025-10-27'::date, 6, 6) RETURNING "scheduling_booking"."id"; args=('John Williams', '5102 Malone Pines Suite 986, Plano, TX 75093', datetime.date(2025, 10, 27), 6, 6); alias=default
[2025-09-30 23:06:09,251] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:06:09,361] DEBUG django.db.backends (0.109) INSERT INTO "scheduling_jobassignment" ("employee_id", "booking_id", "jobsite_address") VALUES (26, 279, '5102 Malone Pines Suite 986, Plano, TX 75093') RETURNING "scheduling_jobassignment"."id"; args=(26, 279, '5102 Malone Pines Suite 986, Plano, TX 75093'); alias=default
[2025-09-30 23:14:28,249] DEBUG django.db.backends (0.141) SELECT "customers_registeredcustomer"."id", "customers_registeredcustomer"."unique_customer_id", "customers_registeredcustomer"."first_name", "customers_registeredcustomer"."last_name", "customers_registeredcustomer"."street_address", "customers_registeredcustomer"."city", "customers_registeredcustomer"."state", "customers_registeredcustomer"."zipcode", "customers_registeredcustomer"."phone", "customers_registeredcustomer"."email", "customers_registeredcustomer"."created_at" FROM "customers_registeredcustomer" ORDER BY RANDOM() ASC LIMIT 10; args=(); alias=default
[2025-09-30 23:15:32,895] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-30 23:15:34,077] DEBUG django.db.backends (0.156) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
[2025-09-30 23:15:34,202] DEBUG django.db.backends (0.125) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-30 23:15:35,868] INFO core.views Home page accessed
[2025-09-30 23:15:36,860] DEBUG django.db.backends (0.125) SELECT "django_session"."session_key", "django_session"."session_data", "django_session"."expire_date" FROM "django_session" WHERE ("django_session"."expire_date" > '2025-09-30 21:15:35.880661+00:00'::timestamptz AND "django_session"."session_key" = 'p1smpq0b7bj0xetnmhcgx0gsq8jz0871') LIMIT 21; args=(datetime.datetime(2025, 9, 30, 21, 15, 35, 880661, tzinfo=datetime.timezone.utc), 'p1smpq0b7bj0xetnmhcgx0gsq8jz0871'); alias=default
[2025-09-30 23:15:36,860] INFO django.server "GET / HTTP/1.1" 200 1928
[2025-09-30 23:15:36,936] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-30 23:15:36,978] WARNING django.request Not Found: /favicon.ico
[2025-09-30 23:15:36,979] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2575
[2025-09-30 23:16:42,706] INFO django.server "GET /schedule/search/timeslot/ HTTP/1.1" 200 900
[2025-09-30 23:17:09,248] DEBUG django.db.backends (0.235) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory"; args=(); alias=default
[2025-09-30 23:17:09,596] INFO django.server "GET /schedule/search/date/ HTTP/1.1" 200 2687
[2025-09-30 23:17:09,660] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-30 23:17:37,576] DEBUG django.db.backends (0.109) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory" WHERE "scheduling_servicecategory"."id" = 6 LIMIT 21; args=(6,); alias=default
[2025-09-30 23:17:37,709] DEBUG django.db.backends (0.141) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" ORDER BY "scheduling_timeslot"."id" ASC; args=(); alias=default
[2025-09-30 23:17:37,838] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:17:37,976] DEBUG django.db.backends (0.140) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) LIMIT 1; args=(Int4(1), 26, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:17:38,114] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(26, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:17:38,237] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:38,355] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:39,154] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) LIMIT 1; args=(Int4(1), 27, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:17:39,260] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(27, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:17:39,388] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:39,505] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:40,164] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) LIMIT 1; args=(Int4(1), 28, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:17:40,281] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(28, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:17:40,393] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:40,509] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:41,193] DEBUG django.db.backends (0.093) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) LIMIT 1; args=(Int4(1), 29, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:17:41,309] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(29, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:17:41,440] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:41,558] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:42,193] DEBUG django.db.backends (0.093) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) LIMIT 1; args=(Int4(1), 30, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:17:42,310] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(30, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:17:42,435] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:42,555] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:43,219] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:17:43,326] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 26, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:17:43,458] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(26, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:17:43,575] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:43,702] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:44,263] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 27, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:17:44,375] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(27, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:17:44,498] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:44,613] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:45,182] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 28, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:17:45,293] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(28, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:17:45,408] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:45,556] DEBUG django.db.backends (0.156) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:46,128] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 29, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:17:46,245] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(29, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:17:46,359] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:46,476] DEBUG django.db.backends (0.125) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory" WHERE "scheduling_servicecategory"."id" = 6 LIMIT 21; args=(6,); alias=default
[2025-09-30 23:17:46,488] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:46,575] DEBUG django.db.backends (0.094) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" ORDER BY "scheduling_timeslot"."id" ASC; args=(); alias=default
[2025-09-30 23:17:46,687] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:17:46,794] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) LIMIT 1; args=(Int4(1), 26, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:17:46,910] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(26, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:17:47,025] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:47,031] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 30, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:17:47,138] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:47,149] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(30, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:17:47,268] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:47,390] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:47,699] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) LIMIT 1; args=(Int4(1), 27, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:17:47,813] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(27, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:17:47,925] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:47,941] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:17:48,037] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:48,058] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) LIMIT 1; args=(Int4(1), 26, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:17:48,176] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(26, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:17:48,293] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:48,411] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:48,525] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) LIMIT 1; args=(Int4(1), 28, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:17:48,641] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(28, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:17:48,757] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:48,858] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:48,925] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) LIMIT 1; args=(Int4(1), 27, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:17:49,041] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(27, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:17:49,171] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:49,290] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:49,417] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) LIMIT 1; args=(Int4(1), 29, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:17:49,529] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(29, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:17:49,643] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:49,757] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:49,800] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) LIMIT 1; args=(Int4(1), 28, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:17:49,907] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(28, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:17:50,035] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:50,155] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:50,258] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) LIMIT 1; args=(Int4(1), 30, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:17:50,374] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(30, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:17:50,495] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:50,612] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:50,707] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) LIMIT 1; args=(Int4(1), 29, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:17:50,832] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(29, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:17:50,954] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:51,060] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:51,107] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:17:51,216] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 26, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:17:51,325] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(26, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:17:51,441] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:51,556] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:51,911] DEBUG django.db.backends (0.406) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) LIMIT 1; args=(Int4(1), 30, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:17:52,025] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(30, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:17:52,074] DEBUG django.db.backends (0.094) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 27, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:17:52,141] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:52,199] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(27, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:17:52,274] DEBUG django.db.backends (0.141) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:52,307] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:52,407] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:52,844] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:17:52,940] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 28, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:17:52,958] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) LIMIT 1; args=(Int4(1), 26, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:17:53,062] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(28, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:17:53,074] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(26, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:17:53,174] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:53,201] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:53,274] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:53,320] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:53,856] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 29, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:17:53,868] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) LIMIT 1; args=(Int4(1), 27, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:17:53,974] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(29, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:17:53,989] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(27, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:17:54,076] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:54,091] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:54,200] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:54,224] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:54,784] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 30, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:17:54,784] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) LIMIT 1; args=(Int4(1), 28, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:17:54,896] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(30, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:17:54,908] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(28, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:17:55,006] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:55,029] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:55,123] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:55,140] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:55,701] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) LIMIT 1; args=(Int4(1), 29, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:17:55,703] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:17:55,816] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) LIMIT 1; args=(Int4(1), 26, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:17:55,818] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(29, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:17:55,924] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(26, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:17:55,924] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:56,038] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:56,054] DEBUG django.db.backends (0.140) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:56,152] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:56,606] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) LIMIT 1; args=(Int4(1), 30, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:17:56,724] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(30, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:17:56,840] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:56,959] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:56,979] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) LIMIT 1; args=(Int4(1), 27, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:17:57,091] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(27, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:17:57,191] DEBUG django.db.backends (0.093) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:57,313] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:57,611] DEBUG django.db.backends (0.234) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory"; args=(); alias=default
[2025-09-30 23:17:57,856] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) LIMIT 1; args=(Int4(1), 28, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:17:57,969] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(28, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:17:57,971] INFO django.server - Broken pipe from ('127.0.0.1', 58025)
[2025-09-30 23:17:58,078] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:58,191] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:58,704] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) LIMIT 1; args=(Int4(1), 29, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:17:58,813] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(29, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:17:58,926] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:59,040] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:59,560] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) LIMIT 1; args=(Int4(1), 30, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:17:59,673] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(30, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:17:59,773] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:17:59,899] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:18:00,390] DEBUG django.db.backends (0.093) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:18:00,506] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) LIMIT 1; args=(Int4(1), 26, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:18:00,626] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(26, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:18:00,741] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:18:00,856] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:18:01,373] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) LIMIT 1; args=(Int4(1), 27, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:18:01,495] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(27, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:18:01,617] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:18:01,723] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:18:02,239] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) LIMIT 1; args=(Int4(1), 28, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:18:02,357] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(28, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:18:02,470] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:18:02,572] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:18:03,095] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) LIMIT 1; args=(Int4(1), 29, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:18:03,523] DEBUG django.db.backends (0.437) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(29, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:18:03,640] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:18:03,756] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:18:04,256] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) LIMIT 1; args=(Int4(1), 30, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:18:04,369] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(30, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:18:04,483] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:18:04,596] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:18:05,213] DEBUG django.db.backends (0.235) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory"; args=(); alias=default
[2025-09-30 23:18:05,545] INFO django.server "GET /schedule/search/date/?date=2025-10-15&service_category=6&customer_address=880+Brent+Mountain%2C+Frisco%2C+TX+75034 HTTP/1.1" 200 8297
[2025-09-30 23:18:05,572] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-30 23:20:26,802] DEBUG django.db.backends (0.109) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory" WHERE "scheduling_servicecategory"."id" = 6 LIMIT 21; args=(6,); alias=default
[2025-09-30 23:20:26,910] DEBUG django.db.backends (0.094) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" ORDER BY "scheduling_timeslot"."id" ASC; args=(); alias=default
[2025-09-30 23:20:27,020] DEBUG django.db.backends (0.093) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:20:27,129] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) LIMIT 1; args=(Int4(1), 26, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:20:27,242] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(26, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:20:27,354] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:27,468] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:28,060] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) LIMIT 1; args=(Int4(1), 27, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:20:28,173] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(27, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:20:28,285] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:28,397] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:28,929] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) LIMIT 1; args=(Int4(1), 28, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:20:29,037] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(28, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:20:29,136] DEBUG django.db.backends (0.093) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:29,255] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:29,789] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) LIMIT 1; args=(Int4(1), 29, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:20:29,887] DEBUG django.db.backends (0.093) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(29, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:20:30,003] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:30,120] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:30,654] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) LIMIT 1; args=(Int4(1), 30, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:20:30,769] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(30, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:20:30,869] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:30,994] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:31,536] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:20:31,645] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 26, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:20:31,753] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(26, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:20:31,869] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:31,984] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:32,487] DEBUG django.db.backends (0.094) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 27, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:20:32,602] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(27, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:20:32,719] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:32,820] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:33,328] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 28, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:20:33,441] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(28, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:20:33,553] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:33,663] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:34,158] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 29, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:20:34,267] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(29, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:20:34,376] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:34,489] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:34,985] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 30, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:20:35,086] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(30, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:20:35,202] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:35,316] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:35,821] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:20:35,933] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) LIMIT 1; args=(Int4(1), 26, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:20:36,045] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(26, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:20:36,153] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:36,264] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:36,753] DEBUG django.db.backends (0.094) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) LIMIT 1; args=(Int4(1), 27, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:20:36,868] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(27, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:20:36,990] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:37,099] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:37,597] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) LIMIT 1; args=(Int4(1), 28, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:20:37,708] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(28, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:20:37,802] DEBUG django.db.backends (0.078) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:37,926] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:38,418] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) LIMIT 1; args=(Int4(1), 29, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:20:38,532] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(29, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:20:38,647] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:38,752] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:39,265] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) LIMIT 1; args=(Int4(1), 30, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:20:39,376] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(30, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:20:39,485] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:39,598] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:40,117] DEBUG django.db.backends (0.141) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:20:40,228] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) LIMIT 1; args=(Int4(1), 26, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:20:40,335] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(26, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:20:40,449] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:40,559] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:41,049] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) LIMIT 1; args=(Int4(1), 27, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:20:41,152] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(27, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:20:41,267] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:41,377] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:41,885] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) LIMIT 1; args=(Int4(1), 28, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:20:41,999] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(28, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:20:42,107] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:42,216] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:42,702] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) LIMIT 1; args=(Int4(1), 29, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:20:42,801] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(29, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:20:42,925] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:43,382] DEBUG django.db.backends (0.468) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:44,255] DEBUG django.db.backends (0.421) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) LIMIT 1; args=(Int4(1), 30, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:20:44,465] DEBUG django.db.backends (0.204) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(30, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:20:44,571] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:44,667] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:20:45,289] DEBUG django.db.backends (0.235) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory"; args=(); alias=default
[2025-09-30 23:20:45,600] INFO django.server "GET /schedule/search/date/?date=2025-10-15&service_category=6&customer_address=7275+King+Stream%2C+Denton%2C+TX+76201 HTTP/1.1" 200 4631
[2025-09-30 23:20:45,641] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-30 23:21:22,672] DEBUG django.db.backends (0.110) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory" WHERE "scheduling_servicecategory"."id" = 6 LIMIT 21; args=(6,); alias=default
[2025-09-30 23:21:22,786] DEBUG django.db.backends (0.109) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" ORDER BY "scheduling_timeslot"."id" ASC; args=(); alias=default
[2025-09-30 23:21:22,895] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:21:23,007] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) LIMIT 1; args=(Int4(1), 26, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:21:23,113] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(26, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:21:23,229] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:23,348] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:23,979] DEBUG django.db.backends (0.094) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) LIMIT 1; args=(Int4(1), 27, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:21:24,095] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(27, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:21:24,216] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:24,313] DEBUG django.db.backends (0.093) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:24,834] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) LIMIT 1; args=(Int4(1), 28, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:21:24,946] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(28, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:21:25,055] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:25,169] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:25,696] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) LIMIT 1; args=(Int4(1), 29, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:21:25,795] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(29, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:21:25,917] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:26,029] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:26,546] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) LIMIT 1; args=(Int4(1), 30, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:21:26,661] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(30, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:21:26,778] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:26,879] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:27,415] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:21:27,524] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 26, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:21:27,633] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(26, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:21:27,728] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:27,858] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:28,346] DEBUG django.db.backends (0.094) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 27, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:21:28,461] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(27, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:21:28,581] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:28,679] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:29,195] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 28, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:21:29,307] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(28, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:21:29,412] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:29,533] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:30,029] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 29, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:21:30,128] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(29, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:21:30,255] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:30,368] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:30,861] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 30, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:21:30,977] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(30, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:21:31,079] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:31,194] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:31,717] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:21:31,832] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) LIMIT 1; args=(Int4(1), 26, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:21:32,278] DEBUG django.db.backends (0.437) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(26, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:21:32,394] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:32,510] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:32,997] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) LIMIT 1; args=(Int4(1), 27, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:21:33,117] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(27, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:21:33,231] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:33,343] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:33,837] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) LIMIT 1; args=(Int4(1), 28, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:21:33,945] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(28, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:21:34,061] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:34,173] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:34,678] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) LIMIT 1; args=(Int4(1), 29, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:21:34,793] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(29, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:21:34,902] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:35,011] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:35,509] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) LIMIT 1; args=(Int4(1), 30, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:21:35,611] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(30, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:21:35,727] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:35,846] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:36,327] DEBUG django.db.backends (0.094) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:21:36,457] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) LIMIT 1; args=(Int4(1), 26, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:21:36,569] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(26, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:21:36,676] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:36,794] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:37,278] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) LIMIT 1; args=(Int4(1), 27, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:21:37,394] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(27, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:21:37,507] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:37,611] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:38,112] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) LIMIT 1; args=(Int4(1), 28, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:21:38,216] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(28, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:21:38,327] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:38,451] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:39,260] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) LIMIT 1; args=(Int4(1), 29, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:21:39,381] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(29, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:21:39,477] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:39,593] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:40,077] DEBUG django.db.backends (0.094) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) LIMIT 1; args=(Int4(1), 30, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:21:40,193] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(30, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:21:40,312] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:40,419] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:21:41,034] DEBUG django.db.backends (0.234) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory"; args=(); alias=default
[2025-09-30 23:21:41,368] INFO django.server "GET /schedule/search/date/?date=2025-10-15&service_category=6&customer_address=9205+Beverly+Court+Apt.+167%2C+Dallas%2C+TX+75201 HTTP/1.1" 200 4642
[2025-09-30 23:21:41,396] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-30 23:22:08,444] DEBUG django.db.backends (0.125) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory" WHERE "scheduling_servicecategory"."id" = 6 LIMIT 21; args=(6,); alias=default
[2025-09-30 23:22:08,555] DEBUG django.db.backends (0.109) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" ORDER BY "scheduling_timeslot"."id" ASC; args=(); alias=default
[2025-09-30 23:22:08,664] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:22:08,775] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) LIMIT 1; args=(Int4(1), 26, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:22:08,886] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(26, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:22:09,005] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:09,123] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:09,833] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) LIMIT 1; args=(Int4(1), 27, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:22:09,950] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(27, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:22:10,057] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:10,172] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:10,700] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) LIMIT 1; args=(Int4(1), 28, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:22:10,819] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(28, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:22:10,923] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:11,048] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:11,568] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) LIMIT 1; args=(Int4(1), 29, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:22:11,672] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(29, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:22:11,794] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:11,890] DEBUG django.db.backends (0.093) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:12,422] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) LIMIT 1; args=(Int4(1), 30, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:22:12,534] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(30, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:22:12,645] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:12,756] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:13,289] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:22:13,405] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 26, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:22:13,521] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(26, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:22:13,623] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:13,739] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:14,255] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 27, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:22:14,356] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(27, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:22:14,472] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:14,601] DEBUG django.db.backends (0.140) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:15,089] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 28, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:22:15,205] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(28, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:22:15,325] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:15,422] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:16,181] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 29, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:22:16,294] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(29, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:22:16,408] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:16,521] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:17,055] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 30, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:22:17,188] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(30, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:22:17,311] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:17,440] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:17,959] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:22:18,072] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) LIMIT 1; args=(Int4(1), 26, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:22:18,184] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(26, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:22:18,298] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:18,406] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:18,915] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) LIMIT 1; args=(Int4(1), 27, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:22:19,024] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(27, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:22:19,143] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:19,257] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:19,755] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) LIMIT 1; args=(Int4(1), 28, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:22:19,876] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(28, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:22:19,972] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:20,088] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:20,595] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) LIMIT 1; args=(Int4(1), 29, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:22:20,705] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(29, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:22:20,821] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:20,933] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:21,447] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) LIMIT 1; args=(Int4(1), 30, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:22:21,572] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(30, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:22:21,705] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:21,831] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:22,350] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:22:22,464] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) LIMIT 1; args=(Int4(1), 26, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:22:22,572] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(26, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:22:22,688] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:22,803] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:23,293] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) LIMIT 1; args=(Int4(1), 27, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:22:23,419] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(27, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:22:23,534] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:23,638] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:24,162] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) LIMIT 1; args=(Int4(1), 28, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:22:24,277] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(28, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:22:24,390] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:24,497] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:25,021] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) LIMIT 1; args=(Int4(1), 29, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:22:25,355] DEBUG django.db.backends (0.328) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(29, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:22:25,469] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:25,582] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:26,103] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) LIMIT 1; args=(Int4(1), 30, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:22:26,204] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(30, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:22:26,320] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:26,436] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:27,042] DEBUG django.db.backends (0.219) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory"; args=(); alias=default
[2025-09-30 23:22:27,383] INFO django.server "GET /schedule/search/date/?date=2025-10-15&service_category=6&customer_address=9205+Beverly+Court+Apt.+167%2C+Dallas%2C+TX+75201 HTTP/1.1" 200 4642
[2025-09-30 23:22:27,401] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-30 23:22:46,697] DEBUG django.db.backends (0.109) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory" WHERE "scheduling_servicecategory"."id" = 6 LIMIT 21; args=(6,); alias=default
[2025-09-30 23:22:46,802] DEBUG django.db.backends (0.109) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" ORDER BY "scheduling_timeslot"."id" ASC; args=(); alias=default
[2025-09-30 23:22:46,917] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:22:47,018] DEBUG django.db.backends (0.093) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) LIMIT 1; args=(Int4(1), 26, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:22:47,141] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(26, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:22:47,250] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:47,364] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:47,917] DEBUG django.db.backends (0.094) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) LIMIT 1; args=(Int4(1), 27, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:22:48,037] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(27, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:22:48,135] DEBUG django.db.backends (0.093) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:48,253] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:48,772] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) LIMIT 1; args=(Int4(1), 28, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:22:48,887] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(28, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:22:48,990] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:49,115] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:49,619] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) LIMIT 1; args=(Int4(1), 29, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:22:49,730] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(29, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:22:49,841] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:49,950] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:50,469] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) LIMIT 1; args=(Int4(1), 30, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:22:50,568] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 5) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(30, datetime.date(2025, 10, 15), 5); alias=default
[2025-09-30 23:22:50,684] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:50,802] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:51,339] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:22:51,455] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 26, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:22:51,568] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(26, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:22:51,682] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:51,798] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:52,320] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 27, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:22:52,433] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(27, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:22:52,542] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:52,656] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:53,168] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 28, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:22:53,281] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(28, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:22:53,390] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:53,501] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:54,011] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 29, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:22:54,124] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(29, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:22:54,235] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:54,346] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:54,836] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 30, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:22:54,934] DEBUG django.db.backends (0.093) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(30, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:22:55,050] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:55,171] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:55,667] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:22:55,784] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) LIMIT 1; args=(Int4(1), 26, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:22:55,893] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(26, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:22:56,006] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:56,115] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:56,615] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) LIMIT 1; args=(Int4(1), 27, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:22:56,728] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(27, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:22:56,836] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:56,950] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:57,441] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) LIMIT 1; args=(Int4(1), 28, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:22:57,554] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(28, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:22:57,667] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:57,781] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:58,277] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) LIMIT 1; args=(Int4(1), 29, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:22:58,387] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(29, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:22:58,500] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:58,606] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:59,116] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) LIMIT 1; args=(Int4(1), 30, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:22:59,228] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 7) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(30, datetime.date(2025, 10, 15), 7); alias=default
[2025-09-30 23:22:59,334] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:59,450] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:22:59,950] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 6; args=(6,); alias=default
[2025-09-30 23:23:00,049] DEBUG django.db.backends (0.094) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) LIMIT 1; args=(Int4(1), 26, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:23:00,172] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(26, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:23:00,286] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:23:00,399] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 26 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(26, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:23:00,898] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) LIMIT 1; args=(Int4(1), 27, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:23:01,000] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(27, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:23:01,116] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:23:01,236] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 27 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(27, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:23:01,729] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) LIMIT 1; args=(Int4(1), 28, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:23:01,840] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(28, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:23:01,949] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:23:02,059] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 28 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(28, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:23:02,564] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) LIMIT 1; args=(Int4(1), 29, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:23:02,666] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(29, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:23:02,783] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:23:02,897] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 29 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(29, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:23:03,405] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) LIMIT 1; args=(Int4(1), 30, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:23:03,518] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 8) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(30, datetime.date(2025, 10, 15), 8); alias=default
[2025-09-30 23:23:03,632] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:23:03,743] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 30 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(30, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:23:04,366] DEBUG django.db.backends (0.219) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory"; args=(); alias=default
[2025-09-30 23:23:04,699] INFO django.server "GET /schedule/search/date/?date=2025-10-15&service_category=6&customer_address=12560+Elizabeth+Motorway%2C+Plano%2C+TX+75093 HTTP/1.1" 200 10690
[2025-09-30 23:23:04,720] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-30 23:25:18,898] INFO django.server "GET /schedule/search/timeslot/ HTTP/1.1" 200 900
[2025-09-30 23:31:21,630] DEBUG django.db.backends (0.234) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot"; args=(); alias=default
[2025-09-30 23:31:22,183] DEBUG django.db.backends (0.218) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory"; args=(); alias=default
[2025-09-30 23:31:22,514] INFO django.server "GET /schedule/search/timeslot/ HTTP/1.1" 200 2974
[2025-09-30 23:31:22,572] INFO django.server "GET /static/css/custom_styles.css HTTP/1.1" 200 10928
[2025-09-30 23:31:22,643] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-30 23:31:22,655] WARNING django.request Not Found: /favicon.ico
[2025-09-30 23:31:22,656] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2575
[2025-09-30 23:31:42,506] DEBUG django.db.backends (0.125) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 6 LIMIT 21; args=(6,); alias=default
[2025-09-30 23:31:42,619] DEBUG django.db.backends (0.110) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory" WHERE "scheduling_servicecategory"."id" = 5 LIMIT 21; args=(5,); alias=default
[2025-09-30 23:31:42,730] DEBUG django.db.backends (0.094) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" LIMIT 21; args=(); alias=default
[2025-09-30 23:31:42,854] DEBUG django.db.backends (0.125) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" LIMIT 21; args=(); alias=default
[2025-09-30 23:31:42,967] DEBUG django.db.backends (0.110) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" LIMIT 21; args=(); alias=default
[2025-09-30 23:31:43,080] DEBUG django.db.backends (0.109) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" LIMIT 21; args=(); alias=default
[2025-09-30 23:31:43,179] DEBUG django.db.backends (0.109) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" LIMIT 21; args=(); alias=default
[2025-09-30 23:31:43,218] ERROR django.request Internal Server Error: /schedule/search/timeslot/
Traceback (most recent call last):
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\db\models\fields\__init__.py", line 2053, in get_prep_value
    return int(value)
           ^^^^^^^^^^
TypeError: int() argument must be a string, a bytes-like object or a real number, not 'TimeSlot'

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
               ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\scheduling\views.py", line 44, in search_by_time_slot
    slot = TimeSlot.objects.get(id=slot_id)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\db\models\query.py", line 623, in get
    clone = self._chain() if self.query.combinator else self.filter(*args, **kwargs)
                                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\db\models\query.py", line 1436, in filter
    return self._filter_or_exclude(False, args, kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\db\models\query.py", line 1454, in _filter_or_exclude
    clone._filter_or_exclude_inplace(negate, args, kwargs)
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\db\models\query.py", line 1461, in _filter_or_exclude_inplace
    self._query.add_q(Q(*args, **kwargs))
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\db\models\sql\query.py", line 1546, in add_q
    clause, _ = self._add_q(q_object, self.used_aliases)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\db\models\sql\query.py", line 1577, in _add_q
    child_clause, needed_inner = self.build_filter(
                                 ^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\db\models\sql\query.py", line 1492, in build_filter
    condition = self.build_lookup(lookups, col, value)
                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\db\models\sql\query.py", line 1319, in build_lookup
    lookup = lookup_class(lhs, rhs)
             ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\db\models\lookups.py", line 27, in __init__
    self.rhs = self.get_prep_lookup()
               ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\db\models\lookups.py", line 341, in get_prep_lookup
    return super().get_prep_lookup()
           ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\db\models\lookups.py", line 85, in get_prep_lookup
    return self.lhs.output_field.get_prep_value(self.rhs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\.venv\Lib\site-packages\django\db\models\fields\__init__.py", line 2055, in get_prep_value
    raise e.__class__(
TypeError: Field 'id' expected a number but got <TimeSlot: 10:00-12:00>.
[2025-09-30 23:31:43,226] ERROR django.server "GET /schedule/search/timeslot/?time_slot=6&service_category=5&customer_address=5806+Birchbrook+Dr%2C+Dallas%2C+TX+75206 HTTP/1.1" 500 143325
[2025-09-30 23:43:47,220] INFO django.utils.autoreload C:\Users\paxto\Desktop\My Web Sites\tucker_and_dales_home_services\scheduling\views.py changed, reloading.
[2025-09-30 23:43:48,011] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-30 23:43:49,699] DEBUG django.db.backends (0.156) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
[2025-09-30 23:43:49,830] DEBUG django.db.backends (0.141) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-30 23:44:03,639] DEBUG django.db.backends (0.125) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 6 LIMIT 21; args=(6,); alias=default
[2025-09-30 23:44:03,754] DEBUG django.db.backends (0.125) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory" WHERE "scheduling_servicecategory"."id" = 5 LIMIT 21; args=(5,); alias=default
[2025-09-30 23:44:09,327] DEBUG django.db.backends (5.563) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:44:15,195] DEBUG django.db.backends (5.875) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-09-30'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 9, 30), 6); alias=default
[2025-09-30 23:44:15,324] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-09-30'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(21, datetime.date(2025, 9, 30), 6); alias=default
[2025-09-30 23:44:15,447] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-09-30'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(21, datetime.date(2025, 9, 30)); alias=default
[2025-09-30 23:44:15,558] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-09-30'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(21, datetime.date(2025, 9, 30)); alias=default
[2025-09-30 23:44:16,186] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-09-30'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 9, 30), 6); alias=default
[2025-09-30 23:44:16,298] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-09-30'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(22, datetime.date(2025, 9, 30), 6); alias=default
[2025-09-30 23:44:16,395] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-09-30'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(22, datetime.date(2025, 9, 30)); alias=default
[2025-09-30 23:44:16,522] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-09-30'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(22, datetime.date(2025, 9, 30)); alias=default
[2025-09-30 23:44:17,575] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-09-30'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 9, 30), 6); alias=default
[2025-09-30 23:44:17,679] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-09-30'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 9, 30), 6); alias=default
[2025-09-30 23:44:17,795] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-09-30'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 9, 30)); alias=default
[2025-09-30 23:44:17,914] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-09-30'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 9, 30)); alias=default
[2025-09-30 23:44:18,484] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-09-30'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 9, 30), 6); alias=default
[2025-09-30 23:44:18,595] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-09-30'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(24, datetime.date(2025, 9, 30), 6); alias=default
[2025-09-30 23:44:18,708] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-09-30'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(24, datetime.date(2025, 9, 30)); alias=default
[2025-09-30 23:44:18,812] DEBUG django.db.backends (0.093) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-09-30'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(24, datetime.date(2025, 9, 30)); alias=default
[2025-09-30 23:44:19,718] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-09-30'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 9, 30), 6); alias=default
[2025-09-30 23:44:19,829] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-09-30'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(25, datetime.date(2025, 9, 30), 6); alias=default
[2025-09-30 23:44:19,930] DEBUG django.db.backends (0.093) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-09-30'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(25, datetime.date(2025, 9, 30)); alias=default
[2025-09-30 23:44:20,055] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-09-30'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(25, datetime.date(2025, 9, 30)); alias=default
[2025-09-30 23:44:20,928] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:44:21,053] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-01'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 10, 1), 6); alias=default
[2025-09-30 23:44:21,166] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-01'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(21, datetime.date(2025, 10, 1), 6); alias=default
[2025-09-30 23:44:21,279] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-01'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(21, datetime.date(2025, 10, 1)); alias=default
[2025-09-30 23:44:21,395] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-01'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(21, datetime.date(2025, 10, 1)); alias=default
[2025-09-30 23:44:21,905] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-01'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 10, 1), 6); alias=default
[2025-09-30 23:44:22,012] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-01'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(22, datetime.date(2025, 10, 1), 6); alias=default
[2025-09-30 23:44:22,127] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-01'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(22, datetime.date(2025, 10, 1)); alias=default
[2025-09-30 23:44:22,238] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-01'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(22, datetime.date(2025, 10, 1)); alias=default
[2025-09-30 23:44:22,830] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-01'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 10, 1), 6); alias=default
[2025-09-30 23:44:22,928] DEBUG django.db.backends (0.093) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-01'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 10, 1), 6); alias=default
[2025-09-30 23:44:23,054] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-01'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 10, 1)); alias=default
[2025-09-30 23:44:23,165] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-01'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 10, 1)); alias=default
[2025-09-30 23:44:23,678] DEBUG django.db.backends (0.093) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-01'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 10, 1), 6); alias=default
[2025-09-30 23:44:23,804] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-01'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(24, datetime.date(2025, 10, 1), 6); alias=default
[2025-09-30 23:44:23,921] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-01'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(24, datetime.date(2025, 10, 1)); alias=default
[2025-09-30 23:44:24,034] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-01'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(24, datetime.date(2025, 10, 1)); alias=default
[2025-09-30 23:44:24,594] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-01'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 10, 1), 6); alias=default
[2025-09-30 23:44:24,708] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-01'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(25, datetime.date(2025, 10, 1), 6); alias=default
[2025-09-30 23:44:24,812] DEBUG django.db.backends (0.093) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-01'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(25, datetime.date(2025, 10, 1)); alias=default
[2025-09-30 23:44:24,927] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-01'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(25, datetime.date(2025, 10, 1)); alias=default
[2025-09-30 23:44:25,545] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:44:25,657] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-02'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 10, 2), 6); alias=default
[2025-09-30 23:44:25,770] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-02'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(21, datetime.date(2025, 10, 2), 6); alias=default
[2025-09-30 23:44:25,878] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-02'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(21, datetime.date(2025, 10, 2)); alias=default
[2025-09-30 23:44:25,994] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-02'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(21, datetime.date(2025, 10, 2)); alias=default
[2025-09-30 23:44:26,994] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-02'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 10, 2), 6); alias=default
[2025-09-30 23:44:27,109] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-02'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(22, datetime.date(2025, 10, 2), 6); alias=default
[2025-09-30 23:44:27,231] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-02'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(22, datetime.date(2025, 10, 2)); alias=default
[2025-09-30 23:44:27,345] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-02'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(22, datetime.date(2025, 10, 2)); alias=default
[2025-09-30 23:44:27,860] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-02'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 10, 2), 6); alias=default
[2025-09-30 23:44:27,986] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-02'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 10, 2), 6); alias=default
[2025-09-30 23:44:28,099] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-02'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 10, 2)); alias=default
[2025-09-30 23:44:28,205] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-02'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 10, 2)); alias=default
[2025-09-30 23:44:28,713] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-02'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 10, 2), 6); alias=default
[2025-09-30 23:44:28,820] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-02'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(24, datetime.date(2025, 10, 2), 6); alias=default
[2025-09-30 23:44:28,927] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-02'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(24, datetime.date(2025, 10, 2)); alias=default
[2025-09-30 23:44:29,053] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-02'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(24, datetime.date(2025, 10, 2)); alias=default
[2025-09-30 23:44:30,660] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-02'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 10, 2), 6); alias=default
[2025-09-30 23:44:30,786] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-02'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(25, datetime.date(2025, 10, 2), 6); alias=default
[2025-09-30 23:44:30,902] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-02'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(25, datetime.date(2025, 10, 2)); alias=default
[2025-09-30 23:44:31,011] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-02'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(25, datetime.date(2025, 10, 2)); alias=default
[2025-09-30 23:44:33,586] DEBUG django.db.backends (0.719) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:44:33,695] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-03'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 10, 3), 6); alias=default
[2025-09-30 23:44:34,411] DEBUG django.db.backends (0.719) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-03'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(21, datetime.date(2025, 10, 3), 6); alias=default
[2025-09-30 23:44:34,526] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-03'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(21, datetime.date(2025, 10, 3)); alias=default
[2025-09-30 23:44:34,639] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-03'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(21, datetime.date(2025, 10, 3)); alias=default
[2025-09-30 23:44:36,789] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-03'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 10, 3), 6); alias=default
[2025-09-30 23:44:36,900] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-03'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(22, datetime.date(2025, 10, 3), 6); alias=default
[2025-09-30 23:44:37,910] DEBUG django.db.backends (1.016) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-03'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(22, datetime.date(2025, 10, 3)); alias=default
[2025-09-30 23:44:38,026] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-03'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(22, datetime.date(2025, 10, 3)); alias=default
[2025-09-30 23:44:42,709] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-03'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 10, 3), 6); alias=default
[2025-09-30 23:44:42,826] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-03'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 10, 3), 6); alias=default
[2025-09-30 23:44:42,940] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-03'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 10, 3)); alias=default
[2025-09-30 23:44:43,053] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-03'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 10, 3)); alias=default
[2025-09-30 23:44:43,558] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-03'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 10, 3), 6); alias=default
[2025-09-30 23:44:43,672] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-03'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(24, datetime.date(2025, 10, 3), 6); alias=default
[2025-09-30 23:44:43,783] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-03'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(24, datetime.date(2025, 10, 3)); alias=default
[2025-09-30 23:44:43,892] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-03'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(24, datetime.date(2025, 10, 3)); alias=default
[2025-09-30 23:44:44,765] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-03'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 10, 3), 6); alias=default
[2025-09-30 23:44:45,014] DEBUG django.db.backends (0.234) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-03'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(25, datetime.date(2025, 10, 3), 6); alias=default
[2025-09-30 23:44:45,158] DEBUG django.db.backends (0.157) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-03'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(25, datetime.date(2025, 10, 3)); alias=default
[2025-09-30 23:44:45,376] DEBUG django.db.backends (0.218) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-03'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(25, datetime.date(2025, 10, 3)); alias=default
[2025-09-30 23:44:46,225] DEBUG django.db.backends (0.156) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:44:46,394] DEBUG django.db.backends (0.172) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-04'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 10, 4), 6); alias=default
[2025-09-30 23:44:46,561] DEBUG django.db.backends (0.156) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-04'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(21, datetime.date(2025, 10, 4), 6); alias=default
[2025-09-30 23:44:46,684] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-04'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(21, datetime.date(2025, 10, 4)); alias=default
[2025-09-30 23:44:47,008] DEBUG django.db.backends (0.328) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-04'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(21, datetime.date(2025, 10, 4)); alias=default
[2025-09-30 23:44:47,724] DEBUG django.db.backends (0.219) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-04'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 10, 4), 6); alias=default
[2025-09-30 23:44:47,838] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-04'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(22, datetime.date(2025, 10, 4), 6); alias=default
[2025-09-30 23:44:48,028] DEBUG django.db.backends (0.187) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-04'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(22, datetime.date(2025, 10, 4)); alias=default
[2025-09-30 23:44:48,235] DEBUG django.db.backends (0.219) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-04'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(22, datetime.date(2025, 10, 4)); alias=default
[2025-09-30 23:44:49,043] DEBUG django.db.backends (0.188) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-04'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 10, 4), 6); alias=default
[2025-09-30 23:44:49,258] DEBUG django.db.backends (0.218) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-04'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 10, 4), 6); alias=default
[2025-09-30 23:44:49,458] DEBUG django.db.backends (0.204) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-04'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 10, 4)); alias=default
[2025-09-30 23:44:49,674] DEBUG django.db.backends (0.218) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-04'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 10, 4)); alias=default
[2025-09-30 23:44:50,284] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-04'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 10, 4), 6); alias=default
[2025-09-30 23:44:50,487] DEBUG django.db.backends (0.203) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-04'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(24, datetime.date(2025, 10, 4), 6); alias=default
[2025-09-30 23:44:51,098] DEBUG django.db.backends (0.609) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-04'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(24, datetime.date(2025, 10, 4)); alias=default
[2025-09-30 23:44:51,208] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-04'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(24, datetime.date(2025, 10, 4)); alias=default
[2025-09-30 23:44:53,057] DEBUG django.db.backends (0.890) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-04'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 10, 4), 6); alias=default
[2025-09-30 23:44:53,177] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-04'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(25, datetime.date(2025, 10, 4), 6); alias=default
[2025-09-30 23:44:56,323] DEBUG django.db.backends (3.141) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-04'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(25, datetime.date(2025, 10, 4)); alias=default
[2025-09-30 23:44:59,207] DEBUG django.db.backends (2.891) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-04'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(25, datetime.date(2025, 10, 4)); alias=default
[2025-09-30 23:44:59,990] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:45:00,104] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-05'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 10, 5), 6); alias=default
[2025-09-30 23:45:00,207] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-05'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(21, datetime.date(2025, 10, 5), 6); alias=default
[2025-09-30 23:45:00,331] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-05'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(21, datetime.date(2025, 10, 5)); alias=default
[2025-09-30 23:45:00,442] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-05'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(21, datetime.date(2025, 10, 5)); alias=default
[2025-09-30 23:45:00,940] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-05'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 10, 5), 6); alias=default
[2025-09-30 23:45:01,056] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-05'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(22, datetime.date(2025, 10, 5), 6); alias=default
[2025-09-30 23:45:01,179] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-05'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(22, datetime.date(2025, 10, 5)); alias=default
[2025-09-30 23:45:01,340] DEBUG django.db.backends (0.157) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-05'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(22, datetime.date(2025, 10, 5)); alias=default
[2025-09-30 23:45:01,856] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-05'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 10, 5), 6); alias=default
[2025-09-30 23:45:01,979] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-05'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 10, 5), 6); alias=default
[2025-09-30 23:45:02,092] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-05'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 10, 5)); alias=default
[2025-09-30 23:45:02,203] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-05'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 10, 5)); alias=default
[2025-09-30 23:45:03,157] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-05'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 10, 5), 6); alias=default
[2025-09-30 23:45:03,269] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-05'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(24, datetime.date(2025, 10, 5), 6); alias=default
[2025-09-30 23:45:03,382] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-05'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(24, datetime.date(2025, 10, 5)); alias=default
[2025-09-30 23:45:03,489] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-05'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(24, datetime.date(2025, 10, 5)); alias=default
[2025-09-30 23:45:04,008] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-05'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 10, 5), 6); alias=default
[2025-09-30 23:45:04,117] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:45:04,222] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-06'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 10, 6), 6); alias=default
[2025-09-30 23:45:04,343] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-06'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(21, datetime.date(2025, 10, 6), 6); alias=default
[2025-09-30 23:45:04,449] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-06'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(21, datetime.date(2025, 10, 6)); alias=default
[2025-09-30 23:45:04,565] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-06'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(21, datetime.date(2025, 10, 6)); alias=default
[2025-09-30 23:45:05,065] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-06'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 10, 6), 6); alias=default
[2025-09-30 23:45:05,173] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-06'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(22, datetime.date(2025, 10, 6), 6); alias=default
[2025-09-30 23:45:05,289] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-06'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(22, datetime.date(2025, 10, 6)); alias=default
[2025-09-30 23:45:05,404] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-06'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(22, datetime.date(2025, 10, 6)); alias=default
[2025-09-30 23:45:06,387] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-06'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 10, 6), 6); alias=default
[2025-09-30 23:45:06,500] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-06'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 10, 6), 6); alias=default
[2025-09-30 23:45:06,613] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-06'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 10, 6)); alias=default
[2025-09-30 23:45:06,722] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-06'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 10, 6)); alias=default
[2025-09-30 23:45:07,606] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-06'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 10, 6), 6); alias=default
[2025-09-30 23:45:07,722] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-06'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(24, datetime.date(2025, 10, 6), 6); alias=default
[2025-09-30 23:45:07,839] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-06'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(24, datetime.date(2025, 10, 6)); alias=default
[2025-09-30 23:45:07,940] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-06'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(24, datetime.date(2025, 10, 6)); alias=default
[2025-09-30 23:45:08,900] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-06'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 10, 6), 6); alias=default
[2025-09-30 23:45:09,006] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-06'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(25, datetime.date(2025, 10, 6), 6); alias=default
[2025-09-30 23:45:09,135] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-06'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(25, datetime.date(2025, 10, 6)); alias=default
[2025-09-30 23:45:09,247] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-06'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(25, datetime.date(2025, 10, 6)); alias=default
[2025-09-30 23:45:09,756] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:45:09,870] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-07'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 10, 7), 6); alias=default
[2025-09-30 23:45:09,972] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-07'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(21, datetime.date(2025, 10, 7), 6); alias=default
[2025-09-30 23:45:10,092] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-07'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(21, datetime.date(2025, 10, 7)); alias=default
[2025-09-30 23:45:10,208] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-07'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(21, datetime.date(2025, 10, 7)); alias=default
[2025-09-30 23:45:11,205] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-07'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 10, 7), 6); alias=default
[2025-09-30 23:45:11,318] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-07'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(22, datetime.date(2025, 10, 7), 6); alias=default
[2025-09-30 23:45:11,431] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-07'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(22, datetime.date(2025, 10, 7)); alias=default
[2025-09-30 23:45:11,544] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-07'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(22, datetime.date(2025, 10, 7)); alias=default
[2025-09-30 23:45:12,072] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-07'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 10, 7), 6); alias=default
[2025-09-30 23:45:12,197] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-07'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 10, 7), 6); alias=default
[2025-09-30 23:45:12,306] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-07'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 10, 7)); alias=default
[2025-09-30 23:45:12,422] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-07'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 10, 7)); alias=default
[2025-09-30 23:45:12,942] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-07'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 10, 7), 6); alias=default
[2025-09-30 23:45:13,054] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-07'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(24, datetime.date(2025, 10, 7), 6); alias=default
[2025-09-30 23:45:13,173] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-07'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(24, datetime.date(2025, 10, 7)); alias=default
[2025-09-30 23:45:13,272] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-07'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(24, datetime.date(2025, 10, 7)); alias=default
[2025-09-30 23:45:13,805] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-07'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 10, 7), 6); alias=default
[2025-09-30 23:45:13,919] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-07'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(25, datetime.date(2025, 10, 7), 6); alias=default
[2025-09-30 23:45:14,029] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-07'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(25, datetime.date(2025, 10, 7)); alias=default
[2025-09-30 23:45:14,143] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-07'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(25, datetime.date(2025, 10, 7)); alias=default
[2025-09-30 23:45:15,067] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:45:15,172] DEBUG django.db.backends (0.094) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-08'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 10, 8), 6); alias=default
[2025-09-30 23:45:15,290] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-08'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(21, datetime.date(2025, 10, 8), 6); alias=default
[2025-09-30 23:45:15,407] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-08'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(21, datetime.date(2025, 10, 8)); alias=default
[2025-09-30 23:45:15,522] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-08'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(21, datetime.date(2025, 10, 8)); alias=default
[2025-09-30 23:45:16,021] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-08'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 10, 8), 6); alias=default
[2025-09-30 23:45:16,140] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-08'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(22, datetime.date(2025, 10, 8), 6); alias=default
[2025-09-30 23:45:16,253] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-08'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(22, datetime.date(2025, 10, 8)); alias=default
[2025-09-30 23:45:16,354] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-08'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(22, datetime.date(2025, 10, 8)); alias=default
[2025-09-30 23:45:16,857] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-08'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 10, 8), 6); alias=default
[2025-09-30 23:45:16,954] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-08'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 10, 8), 6); alias=default
[2025-09-30 23:45:17,084] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-08'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 10, 8)); alias=default
[2025-09-30 23:45:17,199] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-08'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 10, 8)); alias=default
[2025-09-30 23:45:17,706] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-08'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 10, 8), 6); alias=default
[2025-09-30 23:45:17,820] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-08'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(24, datetime.date(2025, 10, 8), 6); alias=default
[2025-09-30 23:45:17,936] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-08'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(24, datetime.date(2025, 10, 8)); alias=default
[2025-09-30 23:45:18,040] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-08'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(24, datetime.date(2025, 10, 8)); alias=default
[2025-09-30 23:45:18,595] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-08'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 10, 8), 6); alias=default
[2025-09-30 23:45:18,709] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-08'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(25, datetime.date(2025, 10, 8), 6); alias=default
[2025-09-30 23:45:18,823] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-08'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(25, datetime.date(2025, 10, 8)); alias=default
[2025-09-30 23:45:18,937] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-08'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(25, datetime.date(2025, 10, 8)); alias=default
[2025-09-30 23:45:19,986] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:45:20,101] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-09'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 10, 9), 6); alias=default
[2025-09-30 23:45:20,213] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-09'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 10, 9), 6); alias=default
[2025-09-30 23:45:20,325] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-09'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 10, 9), 6); alias=default
[2025-09-30 23:45:20,438] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-09'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 10, 9), 6); alias=default
[2025-09-30 23:45:20,552] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-09'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 10, 9)); alias=default
[2025-09-30 23:45:20,665] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-09'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 10, 9)); alias=default
[2025-09-30 23:45:21,153] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-09'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 10, 9), 6); alias=default
[2025-09-30 23:45:21,269] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-09'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(24, datetime.date(2025, 10, 9), 6); alias=default
[2025-09-30 23:45:21,371] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-09'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(24, datetime.date(2025, 10, 9)); alias=default
[2025-09-30 23:45:21,496] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-09'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(24, datetime.date(2025, 10, 9)); alias=default
[2025-09-30 23:45:33,702] INFO django.utils.autoreload Watching for file changes with StatReloader
[2025-09-30 23:45:34,778] DEBUG django.db.backends (0.109) 
            SELECT
                c.relname,
                CASE
                    WHEN c.relispartition THEN 'p'
                    WHEN c.relkind IN ('m', 'v') THEN 'v'
                    ELSE 't'
                END,
                obj_description(c.oid, 'pg_class')
            FROM pg_catalog.pg_class c
            LEFT JOIN pg_catalog.pg_namespace n ON n.oid = c.relnamespace
            WHERE c.relkind IN ('f', 'm', 'p', 'r', 'v')
                AND n.nspname NOT IN ('pg_catalog', 'pg_toast')
                AND pg_catalog.pg_table_is_visible(c.oid)
        ; args=None; alias=default
[2025-09-30 23:45:34,891] DEBUG django.db.backends (0.125) SELECT "django_migrations"."id", "django_migrations"."app", "django_migrations"."name", "django_migrations"."applied" FROM "django_migrations"; args=(); alias=default
[2025-09-30 23:45:36,279] INFO core.views Home page accessed
[2025-09-30 23:45:36,291] INFO django.server "GET / HTTP/1.1" 200 1928
[2025-09-30 23:45:36,364] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-30 23:45:36,403] WARNING django.request Not Found: /favicon.ico
[2025-09-30 23:45:36,404] WARNING django.server "GET /favicon.ico HTTP/1.1" 404 2575
[2025-09-30 23:45:58,282] DEBUG django.db.backends (0.407) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot"; args=(); alias=default
[2025-09-30 23:45:59,328] DEBUG django.db.backends (0.406) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory"; args=(); alias=default
[2025-09-30 23:45:59,844] INFO django.server "GET /schedule/search/timeslot/ HTTP/1.1" 200 2974
[2025-09-30 23:45:59,872] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
[2025-09-30 23:46:09,764] DEBUG django.db.backends (0.093) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot" WHERE "scheduling_timeslot"."id" = 6 LIMIT 21; args=(6,); alias=default
[2025-09-30 23:46:09,880] DEBUG django.db.backends (0.125) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory" WHERE "scheduling_servicecategory"."id" = 5 LIMIT 21; args=(5,); alias=default
[2025-09-30 23:46:09,999] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:46:10,110] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-09-30'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 9, 30), 6); alias=default
[2025-09-30 23:46:10,221] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-09-30'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(21, datetime.date(2025, 9, 30), 6); alias=default
[2025-09-30 23:46:10,334] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-09-30'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(21, datetime.date(2025, 9, 30)); alias=default
[2025-09-30 23:46:10,451] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-09-30'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(21, datetime.date(2025, 9, 30)); alias=default
[2025-09-30 23:46:10,966] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-09-30'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 9, 30), 6); alias=default
[2025-09-30 23:46:11,080] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-09-30'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(22, datetime.date(2025, 9, 30), 6); alias=default
[2025-09-30 23:46:11,191] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-09-30'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(22, datetime.date(2025, 9, 30)); alias=default
[2025-09-30 23:46:11,298] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-09-30'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(22, datetime.date(2025, 9, 30)); alias=default
[2025-09-30 23:46:12,248] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-09-30'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 9, 30), 6); alias=default
[2025-09-30 23:46:12,361] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-09-30'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 9, 30), 6); alias=default
[2025-09-30 23:46:12,474] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-09-30'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 9, 30)); alias=default
[2025-09-30 23:46:12,600] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-09-30'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 9, 30)); alias=default
[2025-09-30 23:46:13,117] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-09-30'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 9, 30), 6); alias=default
[2025-09-30 23:46:13,230] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-09-30'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(24, datetime.date(2025, 9, 30), 6); alias=default
[2025-09-30 23:46:13,685] DEBUG django.db.backends (0.453) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-09-30'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(24, datetime.date(2025, 9, 30)); alias=default
[2025-09-30 23:46:13,796] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-09-30'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(24, datetime.date(2025, 9, 30)); alias=default
[2025-09-30 23:46:14,675] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-09-30'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 9, 30), 6); alias=default
[2025-09-30 23:46:14,787] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-09-30'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(25, datetime.date(2025, 9, 30), 6); alias=default
[2025-09-30 23:46:14,899] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-09-30'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(25, datetime.date(2025, 9, 30)); alias=default
[2025-09-30 23:46:15,013] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-09-30'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(25, datetime.date(2025, 9, 30)); alias=default
[2025-09-30 23:46:15,927] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:46:16,030] DEBUG django.db.backends (0.094) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-01'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 10, 1), 6); alias=default
[2025-09-30 23:46:16,146] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-01'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(21, datetime.date(2025, 10, 1), 6); alias=default
[2025-09-30 23:46:16,266] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-01'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(21, datetime.date(2025, 10, 1)); alias=default
[2025-09-30 23:46:16,363] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-01'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(21, datetime.date(2025, 10, 1)); alias=default
[2025-09-30 23:46:16,871] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-01'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 10, 1), 6); alias=default
[2025-09-30 23:46:16,982] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-01'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(22, datetime.date(2025, 10, 1), 6); alias=default
[2025-09-30 23:46:17,095] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-01'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(22, datetime.date(2025, 10, 1)); alias=default
[2025-09-30 23:46:17,209] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-01'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(22, datetime.date(2025, 10, 1)); alias=default
[2025-09-30 23:46:17,725] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-01'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 10, 1), 6); alias=default
[2025-09-30 23:46:17,830] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-01'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 10, 1), 6); alias=default
[2025-09-30 23:46:17,946] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-01'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 10, 1)); alias=default
[2025-09-30 23:46:18,065] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-01'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 10, 1)); alias=default
[2025-09-30 23:46:18,546] DEBUG django.db.backends (0.094) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-01'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 10, 1), 6); alias=default
[2025-09-30 23:46:18,675] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-01'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(24, datetime.date(2025, 10, 1), 6); alias=default
[2025-09-30 23:46:18,786] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-01'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(24, datetime.date(2025, 10, 1)); alias=default
[2025-09-30 23:46:18,897] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-01'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(24, datetime.date(2025, 10, 1)); alias=default
[2025-09-30 23:46:19,412] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-01'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 10, 1), 6); alias=default
[2025-09-30 23:46:19,540] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-01'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(25, datetime.date(2025, 10, 1), 6); alias=default
[2025-09-30 23:46:19,653] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-01'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(25, datetime.date(2025, 10, 1)); alias=default
[2025-09-30 23:46:19,763] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-01'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(25, datetime.date(2025, 10, 1)); alias=default
[2025-09-30 23:46:20,263] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:46:20,363] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-02'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 10, 2), 6); alias=default
[2025-09-30 23:46:20,479] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-02'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(21, datetime.date(2025, 10, 2), 6); alias=default
[2025-09-30 23:46:20,600] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-02'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(21, datetime.date(2025, 10, 2)); alias=default
[2025-09-30 23:46:20,712] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-02'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(21, datetime.date(2025, 10, 2)); alias=default
[2025-09-30 23:46:21,632] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-02'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 10, 2), 6); alias=default
[2025-09-30 23:46:21,745] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-02'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(22, datetime.date(2025, 10, 2), 6); alias=default
[2025-09-30 23:46:21,871] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-02'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(22, datetime.date(2025, 10, 2)); alias=default
[2025-09-30 23:46:21,983] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-02'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(22, datetime.date(2025, 10, 2)); alias=default
[2025-09-30 23:46:22,479] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-02'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 10, 2), 6); alias=default
[2025-09-30 23:46:22,592] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-02'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 10, 2), 6); alias=default
[2025-09-30 23:46:22,705] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-02'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 10, 2)); alias=default
[2025-09-30 23:46:22,816] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-02'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 10, 2)); alias=default
[2025-09-30 23:46:23,309] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-02'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 10, 2), 6); alias=default
[2025-09-30 23:46:23,421] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-02'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(24, datetime.date(2025, 10, 2), 6); alias=default
[2025-09-30 23:46:23,529] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-02'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(24, datetime.date(2025, 10, 2)); alias=default
[2025-09-30 23:46:23,643] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-02'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(24, datetime.date(2025, 10, 2)); alias=default
[2025-09-30 23:46:24,535] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-02'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 10, 2), 6); alias=default
[2025-09-30 23:46:24,645] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-02'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(25, datetime.date(2025, 10, 2), 6); alias=default
[2025-09-30 23:46:24,762] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-02'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(25, datetime.date(2025, 10, 2)); alias=default
[2025-09-30 23:46:24,875] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-02'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(25, datetime.date(2025, 10, 2)); alias=default
[2025-09-30 23:46:25,757] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:46:25,862] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-03'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 10, 3), 6); alias=default
[2025-09-30 23:46:25,978] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-03'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(21, datetime.date(2025, 10, 3), 6); alias=default
[2025-09-30 23:46:26,105] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-03'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(21, datetime.date(2025, 10, 3)); alias=default
[2025-09-30 23:46:26,216] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-03'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(21, datetime.date(2025, 10, 3)); alias=default
[2025-09-30 23:46:26,711] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-03'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 10, 3), 6); alias=default
[2025-09-30 23:46:26,824] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-03'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(22, datetime.date(2025, 10, 3), 6); alias=default
[2025-09-30 23:46:26,929] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-03'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(22, datetime.date(2025, 10, 3)); alias=default
[2025-09-30 23:46:27,045] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-03'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(22, datetime.date(2025, 10, 3)); alias=default
[2025-09-30 23:46:27,945] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-03'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 10, 3), 6); alias=default
[2025-09-30 23:46:28,066] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-03'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 10, 3), 6); alias=default
[2025-09-30 23:46:28,179] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-03'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 10, 3)); alias=default
[2025-09-30 23:46:28,289] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-03'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 10, 3)); alias=default
[2025-09-30 23:46:28,787] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-03'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 10, 3), 6); alias=default
[2025-09-30 23:46:28,895] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-03'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(24, datetime.date(2025, 10, 3), 6); alias=default
[2025-09-30 23:46:29,013] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-03'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(24, datetime.date(2025, 10, 3)); alias=default
[2025-09-30 23:46:29,127] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-03'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(24, datetime.date(2025, 10, 3)); alias=default
[2025-09-30 23:46:30,011] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-03'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 10, 3), 6); alias=default
[2025-09-30 23:46:30,134] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-03'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(25, datetime.date(2025, 10, 3), 6); alias=default
[2025-09-30 23:46:30,248] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-03'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(25, datetime.date(2025, 10, 3)); alias=default
[2025-09-30 23:46:30,362] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-03'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(25, datetime.date(2025, 10, 3)); alias=default
[2025-09-30 23:46:30,865] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:46:30,978] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-04'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 10, 4), 6); alias=default
[2025-09-30 23:46:31,077] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-04'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(21, datetime.date(2025, 10, 4), 6); alias=default
[2025-09-30 23:46:31,204] DEBUG django.db.backends (0.141) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-04'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(21, datetime.date(2025, 10, 4)); alias=default
[2025-09-30 23:46:31,318] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-04'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(21, datetime.date(2025, 10, 4)); alias=default
[2025-09-30 23:46:31,817] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-04'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 10, 4), 6); alias=default
[2025-09-30 23:46:31,931] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-04'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(22, datetime.date(2025, 10, 4), 6); alias=default
[2025-09-30 23:46:32,044] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-04'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(22, datetime.date(2025, 10, 4)); alias=default
[2025-09-30 23:46:32,157] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-04'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(22, datetime.date(2025, 10, 4)); alias=default
[2025-09-30 23:46:32,665] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-04'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 10, 4), 6); alias=default
[2025-09-30 23:46:32,778] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-04'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 10, 4), 6); alias=default
[2025-09-30 23:46:32,877] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-04'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 10, 4)); alias=default
[2025-09-30 23:46:33,002] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-04'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 10, 4)); alias=default
[2025-09-30 23:46:33,511] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-04'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 10, 4), 6); alias=default
[2025-09-30 23:46:33,626] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-04'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(24, datetime.date(2025, 10, 4), 6); alias=default
[2025-09-30 23:46:33,739] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-04'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(24, datetime.date(2025, 10, 4)); alias=default
[2025-09-30 23:46:33,852] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-04'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(24, datetime.date(2025, 10, 4)); alias=default
[2025-09-30 23:46:34,344] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-04'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 10, 4), 6); alias=default
[2025-09-30 23:46:34,470] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-04'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(25, datetime.date(2025, 10, 4), 6); alias=default
[2025-09-30 23:46:34,583] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-04'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(25, datetime.date(2025, 10, 4)); alias=default
[2025-09-30 23:46:34,694] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-04'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(25, datetime.date(2025, 10, 4)); alias=default
[2025-09-30 23:46:35,196] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:46:35,305] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-05'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 10, 5), 6); alias=default
[2025-09-30 23:46:35,410] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-05'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(21, datetime.date(2025, 10, 5), 6); alias=default
[2025-09-30 23:46:35,531] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-05'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(21, datetime.date(2025, 10, 5)); alias=default
[2025-09-30 23:46:35,646] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-05'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(21, datetime.date(2025, 10, 5)); alias=default
[2025-09-30 23:46:36,140] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-05'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 10, 5), 6); alias=default
[2025-09-30 23:46:36,253] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-05'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(22, datetime.date(2025, 10, 5), 6); alias=default
[2025-09-30 23:46:36,361] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-05'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(22, datetime.date(2025, 10, 5)); alias=default
[2025-09-30 23:46:36,477] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-05'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(22, datetime.date(2025, 10, 5)); alias=default
[2025-09-30 23:46:36,964] DEBUG django.db.backends (0.094) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-05'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 10, 5), 6); alias=default
[2025-09-30 23:46:37,086] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-05'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 10, 5), 6); alias=default
[2025-09-30 23:46:37,199] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-05'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 10, 5)); alias=default
[2025-09-30 23:46:37,310] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-05'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 10, 5)); alias=default
[2025-09-30 23:46:38,247] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-05'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 10, 5), 6); alias=default
[2025-09-30 23:46:38,360] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-05'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(24, datetime.date(2025, 10, 5), 6); alias=default
[2025-09-30 23:46:38,476] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-05'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(24, datetime.date(2025, 10, 5)); alias=default
[2025-09-30 23:46:38,587] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-05'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(24, datetime.date(2025, 10, 5)); alias=default
[2025-09-30 23:46:39,074] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-05'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 10, 5), 6); alias=default
[2025-09-30 23:46:39,176] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:46:39,296] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-06'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 10, 6), 6); alias=default
[2025-09-30 23:46:39,410] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-06'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(21, datetime.date(2025, 10, 6), 6); alias=default
[2025-09-30 23:46:39,510] DEBUG django.db.backends (0.093) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-06'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(21, datetime.date(2025, 10, 6)); alias=default
[2025-09-30 23:46:39,635] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-06'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(21, datetime.date(2025, 10, 6)); alias=default
[2025-09-30 23:46:40,127] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-06'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 10, 6), 6); alias=default
[2025-09-30 23:46:40,243] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-06'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(22, datetime.date(2025, 10, 6), 6); alias=default
[2025-09-30 23:46:40,361] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-06'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(22, datetime.date(2025, 10, 6)); alias=default
[2025-09-30 23:46:40,460] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-06'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(22, datetime.date(2025, 10, 6)); alias=default
[2025-09-30 23:46:41,376] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-06'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 10, 6), 6); alias=default
[2025-09-30 23:46:41,504] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-06'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 10, 6), 6); alias=default
[2025-09-30 23:46:41,618] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-06'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 10, 6)); alias=default
[2025-09-30 23:46:41,727] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-06'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 10, 6)); alias=default
[2025-09-30 23:46:42,593] DEBUG django.db.backends (0.094) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-06'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 10, 6), 6); alias=default
[2025-09-30 23:46:42,723] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-06'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(24, datetime.date(2025, 10, 6), 6); alias=default
[2025-09-30 23:46:42,827] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-06'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(24, datetime.date(2025, 10, 6)); alias=default
[2025-09-30 23:46:42,945] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-06'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(24, datetime.date(2025, 10, 6)); alias=default
[2025-09-30 23:46:43,838] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-06'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 10, 6), 6); alias=default
[2025-09-30 23:46:43,951] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-06'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(25, datetime.date(2025, 10, 6), 6); alias=default
[2025-09-30 23:46:44,060] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-06'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(25, datetime.date(2025, 10, 6)); alias=default
[2025-09-30 23:46:44,173] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-06'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(25, datetime.date(2025, 10, 6)); alias=default
[2025-09-30 23:46:44,676] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:46:44,776] DEBUG django.db.backends (0.094) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-07'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 10, 7), 6); alias=default
[2025-09-30 23:46:44,904] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-07'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(21, datetime.date(2025, 10, 7), 6); alias=default
[2025-09-30 23:46:45,019] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-07'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(21, datetime.date(2025, 10, 7)); alias=default
[2025-09-30 23:46:45,126] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-07'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(21, datetime.date(2025, 10, 7)); alias=default
[2025-09-30 23:46:46,014] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-07'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 10, 7), 6); alias=default
[2025-09-30 23:46:46,126] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-07'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(22, datetime.date(2025, 10, 7), 6); alias=default
[2025-09-30 23:46:46,242] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-07'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(22, datetime.date(2025, 10, 7)); alias=default
[2025-09-30 23:46:46,342] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-07'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(22, datetime.date(2025, 10, 7)); alias=default
[2025-09-30 23:46:46,857] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-07'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 10, 7), 6); alias=default
[2025-09-30 23:46:46,960] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-07'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 10, 7), 6); alias=default
[2025-09-30 23:46:47,075] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-07'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 10, 7)); alias=default
[2025-09-30 23:46:47,195] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-07'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 10, 7)); alias=default
[2025-09-30 23:46:47,695] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-07'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 10, 7), 6); alias=default
[2025-09-30 23:46:47,809] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-07'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(24, datetime.date(2025, 10, 7), 6); alias=default
[2025-09-30 23:46:47,932] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-07'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(24, datetime.date(2025, 10, 7)); alias=default
[2025-09-30 23:46:48,043] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-07'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(24, datetime.date(2025, 10, 7)); alias=default
[2025-09-30 23:46:48,557] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-07'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 10, 7), 6); alias=default
[2025-09-30 23:46:48,671] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-07'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(25, datetime.date(2025, 10, 7), 6); alias=default
[2025-09-30 23:46:48,781] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-07'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(25, datetime.date(2025, 10, 7)); alias=default
[2025-09-30 23:46:48,893] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-07'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(25, datetime.date(2025, 10, 7)); alias=default
[2025-09-30 23:46:49,792] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:46:49,893] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-08'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 10, 8), 6); alias=default
[2025-09-30 23:46:50,008] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-08'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(21, datetime.date(2025, 10, 8), 6); alias=default
[2025-09-30 23:46:50,131] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-08'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(21, datetime.date(2025, 10, 8)); alias=default
[2025-09-30 23:46:50,242] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-08'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(21, datetime.date(2025, 10, 8)); alias=default
[2025-09-30 23:46:50,748] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-08'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 10, 8), 6); alias=default
[2025-09-30 23:46:50,862] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-08'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(22, datetime.date(2025, 10, 8), 6); alias=default
[2025-09-30 23:46:50,976] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-08'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(22, datetime.date(2025, 10, 8)); alias=default
[2025-09-30 23:46:51,075] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-08'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(22, datetime.date(2025, 10, 8)); alias=default
[2025-09-30 23:46:51,662] DEBUG django.db.backends (0.188) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-08'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 10, 8), 6); alias=default
[2025-09-30 23:46:51,778] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-08'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 10, 8), 6); alias=default
[2025-09-30 23:46:51,892] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-08'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 10, 8)); alias=default
[2025-09-30 23:46:52,008] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-08'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 10, 8)); alias=default
[2025-09-30 23:46:52,495] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-08'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 10, 8), 6); alias=default
[2025-09-30 23:46:52,609] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-08'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(24, datetime.date(2025, 10, 8), 6); alias=default
[2025-09-30 23:46:52,717] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-08'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(24, datetime.date(2025, 10, 8)); alias=default
[2025-09-30 23:46:52,830] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-08'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(24, datetime.date(2025, 10, 8)); alias=default
[2025-09-30 23:46:53,335] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-08'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 10, 8), 6); alias=default
[2025-09-30 23:46:53,448] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-08'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(25, datetime.date(2025, 10, 8), 6); alias=default
[2025-09-30 23:46:53,561] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-08'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(25, datetime.date(2025, 10, 8)); alias=default
[2025-09-30 23:46:53,674] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-08'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(25, datetime.date(2025, 10, 8)); alias=default
[2025-09-30 23:46:54,564] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:46:54,673] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-09'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 10, 9), 6); alias=default
[2025-09-30 23:46:54,782] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-09'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 10, 9), 6); alias=default
[2025-09-30 23:46:54,890] DEBUG django.db.backends (0.093) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-09'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 10, 9), 6); alias=default
[2025-09-30 23:46:55,005] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-09'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 10, 9), 6); alias=default
[2025-09-30 23:46:55,118] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-09'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 10, 9)); alias=default
[2025-09-30 23:46:55,225] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-09'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 10, 9)); alias=default
[2025-09-30 23:46:55,730] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-09'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 10, 9), 6); alias=default
[2025-09-30 23:46:55,844] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-09'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(24, datetime.date(2025, 10, 9), 6); alias=default
[2025-09-30 23:46:55,956] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-09'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(24, datetime.date(2025, 10, 9)); alias=default
[2025-09-30 23:46:56,070] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-09'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(24, datetime.date(2025, 10, 9)); alias=default
[2025-09-30 23:46:56,607] DEBUG django.db.backends (0.140) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-09'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 10, 9), 6); alias=default
[2025-09-30 23:46:56,722] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:46:56,825] DEBUG django.db.backends (0.094) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-10'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 10, 10), 6); alias=default
[2025-09-30 23:46:56,941] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-10'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(21, datetime.date(2025, 10, 10), 6); alias=default
[2025-09-30 23:46:57,065] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-10'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(21, datetime.date(2025, 10, 10)); alias=default
[2025-09-30 23:46:57,183] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-10'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(21, datetime.date(2025, 10, 10)); alias=default
[2025-09-30 23:46:57,674] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-10'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 10, 10), 6); alias=default
[2025-09-30 23:46:57,796] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-10'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(22, datetime.date(2025, 10, 10), 6); alias=default
[2025-09-30 23:46:57,909] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-10'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(22, datetime.date(2025, 10, 10)); alias=default
[2025-09-30 23:46:58,007] DEBUG django.db.backends (0.093) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-10'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(22, datetime.date(2025, 10, 10)); alias=default
[2025-09-30 23:46:58,517] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-10'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 10, 10), 6); alias=default
[2025-09-30 23:46:58,630] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-10'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 10, 10), 6); alias=default
[2025-09-30 23:46:58,744] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-10'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 10, 10)); alias=default
[2025-09-30 23:46:58,857] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-10'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 10, 10)); alias=default
[2025-09-30 23:46:59,348] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-10'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 10, 10), 6); alias=default
[2025-09-30 23:46:59,462] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-10'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(24, datetime.date(2025, 10, 10), 6); alias=default
[2025-09-30 23:46:59,574] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-10'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(24, datetime.date(2025, 10, 10)); alias=default
[2025-09-30 23:46:59,687] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-10'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(24, datetime.date(2025, 10, 10)); alias=default
[2025-09-30 23:47:00,191] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-10'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 10, 10), 6); alias=default
[2025-09-30 23:47:00,307] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-10'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(25, datetime.date(2025, 10, 10), 6); alias=default
[2025-09-30 23:47:00,427] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-10'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(25, datetime.date(2025, 10, 10)); alias=default
[2025-09-30 23:47:00,524] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-10'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(25, datetime.date(2025, 10, 10)); alias=default
[2025-09-30 23:47:01,033] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:47:01,147] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-11'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 10, 11), 6); alias=default
[2025-09-30 23:47:01,257] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-11'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(21, datetime.date(2025, 10, 11), 6); alias=default
[2025-09-30 23:47:01,370] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-11'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(21, datetime.date(2025, 10, 11)); alias=default
[2025-09-30 23:47:01,483] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-11'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(21, datetime.date(2025, 10, 11)); alias=default
[2025-09-30 23:47:01,991] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-11'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 10, 11), 6); alias=default
[2025-09-30 23:47:02,107] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-11'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(22, datetime.date(2025, 10, 11), 6); alias=default
[2025-09-30 23:47:02,224] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-11'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(22, datetime.date(2025, 10, 11)); alias=default
[2025-09-30 23:47:02,324] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-11'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(22, datetime.date(2025, 10, 11)); alias=default
[2025-09-30 23:47:03,324] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-11'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 10, 11), 6); alias=default
[2025-09-30 23:47:03,439] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-11'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 10, 11), 6); alias=default
[2025-09-30 23:47:03,557] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-11'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 10, 11)); alias=default
[2025-09-30 23:47:03,657] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-11'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 10, 11)); alias=default
[2025-09-30 23:47:04,495] DEBUG django.db.backends (0.235) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-11'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 10, 11), 6); alias=default
[2025-09-30 23:47:04,657] DEBUG django.db.backends (0.172) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-11'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(24, datetime.date(2025, 10, 11), 6); alias=default
[2025-09-30 23:47:04,857] DEBUG django.db.backends (0.187) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-11'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(24, datetime.date(2025, 10, 11)); alias=default
[2025-09-30 23:47:05,060] DEBUG django.db.backends (0.203) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-11'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(24, datetime.date(2025, 10, 11)); alias=default
[2025-09-30 23:47:06,290] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-11'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 10, 11), 6); alias=default
[2025-09-30 23:47:06,493] DEBUG django.db.backends (0.203) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-11'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(25, datetime.date(2025, 10, 11), 6); alias=default
[2025-09-30 23:47:06,706] DEBUG django.db.backends (0.219) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-11'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(25, datetime.date(2025, 10, 11)); alias=default
[2025-09-30 23:47:06,903] DEBUG django.db.backends (0.187) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-11'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(25, datetime.date(2025, 10, 11)); alias=default
[2025-09-30 23:47:08,132] DEBUG django.db.backends (0.140) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:47:08,338] DEBUG django.db.backends (0.204) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-12'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 10, 12), 6); alias=default
[2025-09-30 23:47:08,539] DEBUG django.db.backends (0.203) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-12'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(21, datetime.date(2025, 10, 12), 6); alias=default
[2025-09-30 23:47:08,739] DEBUG django.db.backends (0.188) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-12'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(21, datetime.date(2025, 10, 12)); alias=default
[2025-09-30 23:47:08,951] DEBUG django.db.backends (0.203) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-12'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(21, datetime.date(2025, 10, 12)); alias=default
[2025-09-30 23:47:09,468] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-12'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 10, 12), 6); alias=default
[2025-09-30 23:47:09,584] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-12'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(22, datetime.date(2025, 10, 12), 6); alias=default
[2025-09-30 23:47:09,690] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-12'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(22, datetime.date(2025, 10, 12)); alias=default
[2025-09-30 23:47:10,194] DEBUG django.db.backends (0.500) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-12'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(22, datetime.date(2025, 10, 12)); alias=default
[2025-09-30 23:47:11,156] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-12'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 10, 12), 6); alias=default
[2025-09-30 23:47:11,272] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-12'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 10, 12), 6); alias=default
[2025-09-30 23:47:11,396] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-12'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 10, 12)); alias=default
[2025-09-30 23:47:11,510] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-12'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 10, 12)); alias=default
[2025-09-30 23:47:12,003] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-12'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 10, 12), 6); alias=default
[2025-09-30 23:47:12,118] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-12'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(24, datetime.date(2025, 10, 12), 6); alias=default
[2025-09-30 23:47:12,223] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-12'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(24, datetime.date(2025, 10, 12)); alias=default
[2025-09-30 23:47:12,339] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-12'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(24, datetime.date(2025, 10, 12)); alias=default
[2025-09-30 23:47:12,840] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-12'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 10, 12), 6); alias=default
[2025-09-30 23:47:12,939] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-12'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(25, datetime.date(2025, 10, 12), 6); alias=default
[2025-09-30 23:47:13,062] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-12'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(25, datetime.date(2025, 10, 12)); alias=default
[2025-09-30 23:47:13,174] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-12'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(25, datetime.date(2025, 10, 12)); alias=default
[2025-09-30 23:47:14,062] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:47:14,173] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-13'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 10, 13), 6); alias=default
[2025-09-30 23:47:14,272] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-13'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(21, datetime.date(2025, 10, 13), 6); alias=default
[2025-09-30 23:47:14,395] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-13'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(21, datetime.date(2025, 10, 13)); alias=default
[2025-09-30 23:47:14,503] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-13'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(21, datetime.date(2025, 10, 13)); alias=default
[2025-09-30 23:47:15,006] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-13'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 10, 13), 6); alias=default
[2025-09-30 23:47:15,122] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-13'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(22, datetime.date(2025, 10, 13), 6); alias=default
[2025-09-30 23:47:15,238] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-13'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(22, datetime.date(2025, 10, 13)); alias=default
[2025-09-30 23:47:15,351] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-13'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(22, datetime.date(2025, 10, 13)); alias=default
[2025-09-30 23:47:16,349] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-13'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 10, 13), 6); alias=default
[2025-09-30 23:47:16,456] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-13'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 10, 13), 6); alias=default
[2025-09-30 23:47:16,571] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-13'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 10, 13)); alias=default
[2025-09-30 23:47:16,688] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-13'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 10, 13)); alias=default
[2025-09-30 23:47:17,679] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-13'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 10, 13), 6); alias=default
[2025-09-30 23:47:17,789] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-13'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(24, datetime.date(2025, 10, 13), 6); alias=default
[2025-09-30 23:47:17,901] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-13'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(24, datetime.date(2025, 10, 13)); alias=default
[2025-09-30 23:47:18,016] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-13'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(24, datetime.date(2025, 10, 13)); alias=default
[2025-09-30 23:47:18,901] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-13'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 10, 13), 6); alias=default
[2025-09-30 23:47:19,012] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-13'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(25, datetime.date(2025, 10, 13), 6); alias=default
[2025-09-30 23:47:19,123] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-13'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(25, datetime.date(2025, 10, 13)); alias=default
[2025-09-30 23:47:19,222] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-13'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(25, datetime.date(2025, 10, 13)); alias=default
[2025-09-30 23:47:19,738] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:47:19,853] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-14'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 10, 14), 6); alias=default
[2025-09-30 23:47:19,965] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-14'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 10, 14), 6); alias=default
[2025-09-30 23:47:20,080] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-14'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(22, datetime.date(2025, 10, 14), 6); alias=default
[2025-09-30 23:47:20,192] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-14'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(22, datetime.date(2025, 10, 14)); alias=default
[2025-09-30 23:47:20,288] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-14'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(22, datetime.date(2025, 10, 14)); alias=default
[2025-09-30 23:47:20,804] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-14'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 10, 14), 6); alias=default
[2025-09-30 23:47:20,916] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-14'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 10, 14), 6); alias=default
[2025-09-30 23:47:21,022] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-14'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 10, 14)); alias=default
[2025-09-30 23:47:21,137] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-14'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 10, 14)); alias=default
[2025-09-30 23:47:21,658] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-14'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 10, 14), 6); alias=default
[2025-09-30 23:47:21,755] DEBUG django.db.backends (0.093) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-14'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(24, datetime.date(2025, 10, 14), 6); alias=default
[2025-09-30 23:47:21,871] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-14'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(24, datetime.date(2025, 10, 14)); alias=default
[2025-09-30 23:47:21,995] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-14'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(24, datetime.date(2025, 10, 14)); alias=default
[2025-09-30 23:47:22,497] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-14'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 10, 14), 6); alias=default
[2025-09-30 23:47:22,608] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-14'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(25, datetime.date(2025, 10, 14), 6); alias=default
[2025-09-30 23:47:22,721] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-14'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(25, datetime.date(2025, 10, 14)); alias=default
[2025-09-30 23:47:22,834] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-14'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(25, datetime.date(2025, 10, 14)); alias=default
[2025-09-30 23:47:23,342] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:47:23,454] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:47:23,569] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(21, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:47:23,682] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(21, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:47:23,788] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(21, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:47:24,387] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:47:24,499] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:47:24,613] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:47:24,721] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:47:24,835] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:47:25,335] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:47:25,437] DEBUG django.db.backends (0.093) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(24, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:47:25,561] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(24, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:47:25,670] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-15'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(24, datetime.date(2025, 10, 15)); alias=default
[2025-09-30 23:47:26,161] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-15'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 10, 15), 6); alias=default
[2025-09-30 23:47:26,270] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:47:26,370] DEBUG django.db.backends (0.094) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-16'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 10, 16), 6); alias=default
[2025-09-30 23:47:26,496] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-16'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(21, datetime.date(2025, 10, 16), 6); alias=default
[2025-09-30 23:47:26,607] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-16'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(21, datetime.date(2025, 10, 16)); alias=default
[2025-09-30 23:47:26,723] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-16'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(21, datetime.date(2025, 10, 16)); alias=default
[2025-09-30 23:47:27,225] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-16'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 10, 16), 6); alias=default
[2025-09-30 23:47:27,338] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-16'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(22, datetime.date(2025, 10, 16), 6); alias=default
[2025-09-30 23:47:27,454] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-16'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(22, datetime.date(2025, 10, 16)); alias=default
[2025-09-30 23:47:27,565] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-16'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(22, datetime.date(2025, 10, 16)); alias=default
[2025-09-30 23:47:28,054] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-16'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 10, 16), 6); alias=default
[2025-09-30 23:47:28,169] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-16'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 10, 16), 6); alias=default
[2025-09-30 23:47:28,284] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-16'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(24, datetime.date(2025, 10, 16), 6); alias=default
[2025-09-30 23:47:28,387] DEBUG django.db.backends (0.093) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-16'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(24, datetime.date(2025, 10, 16)); alias=default
[2025-09-30 23:47:28,503] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-16'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(24, datetime.date(2025, 10, 16)); alias=default
[2025-09-30 23:47:29,036] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-16'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 10, 16), 6); alias=default
[2025-09-30 23:47:29,151] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-16'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(25, datetime.date(2025, 10, 16), 6); alias=default
[2025-09-30 23:47:29,254] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-16'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(25, datetime.date(2025, 10, 16)); alias=default
[2025-09-30 23:47:29,370] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-16'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(25, datetime.date(2025, 10, 16)); alias=default
[2025-09-30 23:47:29,883] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:47:29,992] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-17'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 10, 17), 6); alias=default
[2025-09-30 23:47:30,103] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-17'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(21, datetime.date(2025, 10, 17), 6); alias=default
[2025-09-30 23:47:30,216] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-17'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(21, datetime.date(2025, 10, 17)); alias=default
[2025-09-30 23:47:30,321] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-17'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(21, datetime.date(2025, 10, 17)); alias=default
[2025-09-30 23:47:30,825] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-17'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 10, 17), 6); alias=default
[2025-09-30 23:47:30,938] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-17'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(22, datetime.date(2025, 10, 17), 6); alias=default
[2025-09-30 23:47:31,054] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-17'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(22, datetime.date(2025, 10, 17)); alias=default
[2025-09-30 23:47:31,165] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-17'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(22, datetime.date(2025, 10, 17)); alias=default
[2025-09-30 23:47:31,653] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-17'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 10, 17), 6); alias=default
[2025-09-30 23:47:31,769] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-17'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 10, 17), 6); alias=default
[2025-09-30 23:47:31,882] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-17'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 10, 17)); alias=default
[2025-09-30 23:47:31,987] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-17'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 10, 17)); alias=default
[2025-09-30 23:47:32,952] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-17'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 10, 17), 6); alias=default
[2025-09-30 23:47:33,053] DEBUG django.db.backends (0.093) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-17'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(24, datetime.date(2025, 10, 17), 6); alias=default
[2025-09-30 23:47:33,169] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-17'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(24, datetime.date(2025, 10, 17)); alias=default
[2025-09-30 23:47:33,292] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-17'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(24, datetime.date(2025, 10, 17)); alias=default
[2025-09-30 23:47:34,254] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-17'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 10, 17), 6); alias=default
[2025-09-30 23:47:34,369] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-17'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(25, datetime.date(2025, 10, 17), 6); alias=default
[2025-09-30 23:47:34,488] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-17'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(25, datetime.date(2025, 10, 17)); alias=default
[2025-09-30 23:47:34,604] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-17'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(25, datetime.date(2025, 10, 17)); alias=default
[2025-09-30 23:47:35,586] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:47:35,702] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-18'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 10, 18), 6); alias=default
[2025-09-30 23:47:35,822] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-18'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(21, datetime.date(2025, 10, 18), 6); alias=default
[2025-09-30 23:47:35,935] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-18'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(21, datetime.date(2025, 10, 18)); alias=default
[2025-09-30 23:47:36,046] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-18'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(21, datetime.date(2025, 10, 18)); alias=default
[2025-09-30 23:47:36,544] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-18'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 10, 18), 6); alias=default
[2025-09-30 23:47:36,653] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-18'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(22, datetime.date(2025, 10, 18), 6); alias=default
[2025-09-30 23:47:36,770] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-18'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(22, datetime.date(2025, 10, 18)); alias=default
[2025-09-30 23:47:36,883] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-18'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(22, datetime.date(2025, 10, 18)); alias=default
[2025-09-30 23:47:37,369] DEBUG django.db.backends (0.094) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-18'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 10, 18), 6); alias=default
[2025-09-30 23:47:37,488] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-18'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 10, 18), 6); alias=default
[2025-09-30 23:47:37,586] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-18'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 10, 18)); alias=default
[2025-09-30 23:47:37,702] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-18'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 10, 18)); alias=default
[2025-09-30 23:47:38,219] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-18'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 10, 18), 6); alias=default
[2025-09-30 23:47:38,335] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-18'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(24, datetime.date(2025, 10, 18), 6); alias=default
[2025-09-30 23:47:38,435] DEBUG django.db.backends (0.093) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-18'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(24, datetime.date(2025, 10, 18)); alias=default
[2025-09-30 23:47:38,560] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-18'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(24, datetime.date(2025, 10, 18)); alias=default
[2025-09-30 23:47:39,058] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-18'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 10, 18), 6); alias=default
[2025-09-30 23:47:39,168] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-18'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(25, datetime.date(2025, 10, 18), 6); alias=default
[2025-09-30 23:47:39,284] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-18'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(25, datetime.date(2025, 10, 18)); alias=default
[2025-09-30 23:47:39,386] DEBUG django.db.backends (0.093) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-18'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(25, datetime.date(2025, 10, 18)); alias=default
[2025-09-30 23:47:40,317] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:47:40,431] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-19'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 10, 19), 6); alias=default
[2025-09-30 23:47:40,544] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-19'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(21, datetime.date(2025, 10, 19), 6); alias=default
[2025-09-30 23:47:40,659] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-19'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(21, datetime.date(2025, 10, 19)); alias=default
[2025-09-30 23:47:40,770] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-19'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(21, datetime.date(2025, 10, 19)); alias=default
[2025-09-30 23:47:41,768] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-19'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 10, 19), 6); alias=default
[2025-09-30 23:47:41,895] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-19'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(22, datetime.date(2025, 10, 19), 6); alias=default
[2025-09-30 23:47:42,009] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-19'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(22, datetime.date(2025, 10, 19)); alias=default
[2025-09-30 23:47:42,119] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-19'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(22, datetime.date(2025, 10, 19)); alias=default
[2025-09-30 23:47:42,621] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-19'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 10, 19), 6); alias=default
[2025-09-30 23:47:42,735] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-19'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 10, 19), 6); alias=default
[2025-09-30 23:47:42,848] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-19'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 10, 19)); alias=default
[2025-09-30 23:47:42,961] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-19'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 10, 19)); alias=default
[2025-09-30 23:47:43,459] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-19'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 10, 19), 6); alias=default
[2025-09-30 23:47:43,568] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-19'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(24, datetime.date(2025, 10, 19), 6); alias=default
[2025-09-30 23:47:43,683] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-19'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(24, datetime.date(2025, 10, 19)); alias=default
[2025-09-30 23:47:43,809] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-19'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(24, datetime.date(2025, 10, 19)); alias=default
[2025-09-30 23:47:44,686] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-19'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 10, 19), 6); alias=default
[2025-09-30 23:47:44,785] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-19'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(25, datetime.date(2025, 10, 19), 6); alias=default
[2025-09-30 23:47:44,901] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-19'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(25, datetime.date(2025, 10, 19)); alias=default
[2025-09-30 23:47:45,026] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-19'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(25, datetime.date(2025, 10, 19)); alias=default
[2025-09-30 23:47:45,917] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:47:46,030] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-20'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 10, 20), 6); alias=default
[2025-09-30 23:47:46,143] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-20'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(21, datetime.date(2025, 10, 20), 6); alias=default
[2025-09-30 23:47:46,258] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-20'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(21, datetime.date(2025, 10, 20)); alias=default
[2025-09-30 23:47:46,367] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-20'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(21, datetime.date(2025, 10, 20)); alias=default
[2025-09-30 23:47:47,365] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-20'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 10, 20), 6); alias=default
[2025-09-30 23:47:47,480] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-20'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(22, datetime.date(2025, 10, 20), 6); alias=default
[2025-09-30 23:47:47,585] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-20'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(22, datetime.date(2025, 10, 20)); alias=default
[2025-09-30 23:47:47,701] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-20'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(22, datetime.date(2025, 10, 20)); alias=default
[2025-09-30 23:47:48,208] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-20'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 10, 20), 6); alias=default
[2025-09-30 23:47:48,318] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-20'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 10, 20), 6); alias=default
[2025-09-30 23:47:48,434] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-20'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 10, 20)); alias=default
[2025-09-30 23:47:48,548] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-20'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 10, 20)); alias=default
[2025-09-30 23:47:49,038] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-20'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 10, 20), 6); alias=default
[2025-09-30 23:47:49,148] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-20'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 10, 20), 6); alias=default
[2025-09-30 23:47:49,251] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-20'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(25, datetime.date(2025, 10, 20), 6); alias=default
[2025-09-30 23:47:49,374] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-20'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(25, datetime.date(2025, 10, 20)); alias=default
[2025-09-30 23:47:49,487] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-20'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(25, datetime.date(2025, 10, 20)); alias=default
[2025-09-30 23:47:49,984] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:47:50,100] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-21'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 10, 21), 6); alias=default
[2025-09-30 23:47:50,213] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-21'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 10, 21), 6); alias=default
[2025-09-30 23:47:50,318] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-21'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(22, datetime.date(2025, 10, 21), 6); alias=default
[2025-09-30 23:47:50,438] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-21'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(22, datetime.date(2025, 10, 21)); alias=default
[2025-09-30 23:47:50,553] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-21'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(22, datetime.date(2025, 10, 21)); alias=default
[2025-09-30 23:47:51,095] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-21'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 10, 21), 6); alias=default
[2025-09-30 23:47:51,208] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-21'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 10, 21), 6); alias=default
[2025-09-30 23:47:51,318] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-21'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 10, 21)); alias=default
[2025-09-30 23:47:51,433] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-21'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 10, 21)); alias=default
[2025-09-30 23:47:51,943] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-21'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 10, 21), 6); alias=default
[2025-09-30 23:47:52,055] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-21'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 10, 21), 6); alias=default
[2025-09-30 23:47:52,167] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-21'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(25, datetime.date(2025, 10, 21), 6); alias=default
[2025-09-30 23:47:52,282] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-21'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(25, datetime.date(2025, 10, 21)); alias=default
[2025-09-30 23:47:52,384] DEBUG django.db.backends (0.093) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-21'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(25, datetime.date(2025, 10, 21)); alias=default
[2025-09-30 23:47:52,891] DEBUG django.db.backends (0.125) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:47:53,004] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-22'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 10, 22), 6); alias=default
[2025-09-30 23:47:53,118] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-22'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(21, datetime.date(2025, 10, 22), 6); alias=default
[2025-09-30 23:47:53,231] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-22'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(21, datetime.date(2025, 10, 22)); alias=default
[2025-09-30 23:47:53,346] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-22'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(21, datetime.date(2025, 10, 22)); alias=default
[2025-09-30 23:47:53,961] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-22'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 10, 22), 6); alias=default
[2025-09-30 23:47:54,075] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-22'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(22, datetime.date(2025, 10, 22), 6); alias=default
[2025-09-30 23:47:54,184] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-22'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(22, datetime.date(2025, 10, 22)); alias=default
[2025-09-30 23:47:54,300] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-22'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(22, datetime.date(2025, 10, 22)); alias=default
[2025-09-30 23:47:54,896] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-22'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 10, 22), 6); alias=default
[2025-09-30 23:47:55,010] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-22'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 10, 22), 6); alias=default
[2025-09-30 23:47:55,117] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-22'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 10, 22)); alias=default
[2025-09-30 23:47:55,233] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-22'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 10, 22)); alias=default
[2025-09-30 23:47:56,233] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-22'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 10, 22), 6); alias=default
[2025-09-30 23:47:56,353] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-22'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(24, datetime.date(2025, 10, 22), 6); alias=default
[2025-09-30 23:47:56,466] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-22'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(24, datetime.date(2025, 10, 22)); alias=default
[2025-09-30 23:47:56,566] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-22'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(24, datetime.date(2025, 10, 22)); alias=default
[2025-09-30 23:47:57,521] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-22'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 10, 22), 6); alias=default
[2025-09-30 23:47:57,633] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-22'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(25, datetime.date(2025, 10, 22), 6); alias=default
[2025-09-30 23:47:57,748] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-22'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(25, datetime.date(2025, 10, 22)); alias=default
[2025-09-30 23:47:57,850] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-22'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(25, datetime.date(2025, 10, 22)); alias=default
[2025-09-30 23:47:58,366] DEBUG django.db.backends (0.094) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:47:58,490] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-23'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 10, 23), 6); alias=default
[2025-09-30 23:47:58,604] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-23'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(21, datetime.date(2025, 10, 23), 6); alias=default
[2025-09-30 23:47:58,717] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-23'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(21, datetime.date(2025, 10, 23)); alias=default
[2025-09-30 23:47:58,830] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-23'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(21, datetime.date(2025, 10, 23)); alias=default
[2025-09-30 23:47:59,432] DEBUG django.db.backends (0.093) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-23'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 10, 23), 6); alias=default
[2025-09-30 23:47:59,560] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-23'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(22, datetime.date(2025, 10, 23), 6); alias=default
[2025-09-30 23:47:59,675] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-23'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(22, datetime.date(2025, 10, 23)); alias=default
[2025-09-30 23:47:59,791] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-23'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(22, datetime.date(2025, 10, 23)); alias=default
[2025-09-30 23:48:00,299] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-23'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 10, 23), 6); alias=default
[2025-09-30 23:48:00,413] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-23'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 10, 23), 6); alias=default
[2025-09-30 23:48:00,526] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-23'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 10, 23)); alias=default
[2025-09-30 23:48:00,638] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-23'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 10, 23)); alias=default
[2025-09-30 23:48:01,150] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-23'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 10, 23), 6); alias=default
[2025-09-30 23:48:01,262] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-23'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(24, datetime.date(2025, 10, 23), 6); alias=default
[2025-09-30 23:48:01,374] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-23'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(24, datetime.date(2025, 10, 23)); alias=default
[2025-09-30 23:48:01,483] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-23'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(24, datetime.date(2025, 10, 23)); alias=default
[2025-09-30 23:48:01,990] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-23'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 10, 23), 6); alias=default
[2025-09-30 23:48:02,108] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-23'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(25, datetime.date(2025, 10, 23), 6); alias=default
[2025-09-30 23:48:02,216] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-23'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(25, datetime.date(2025, 10, 23)); alias=default
[2025-09-30 23:48:02,332] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-23'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(25, datetime.date(2025, 10, 23)); alias=default
[2025-09-30 23:48:02,816] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:48:02,932] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-24'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 10, 24), 6); alias=default
[2025-09-30 23:48:03,048] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-24'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(21, datetime.date(2025, 10, 24), 6); alias=default
[2025-09-30 23:48:03,149] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-24'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(21, datetime.date(2025, 10, 24)); alias=default
[2025-09-30 23:48:03,265] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-24'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(21, datetime.date(2025, 10, 24)); alias=default
[2025-09-30 23:48:04,270] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-24'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 10, 24), 6); alias=default
[2025-09-30 23:48:04,387] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-24'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(22, datetime.date(2025, 10, 24), 6); alias=default
[2025-09-30 23:48:04,483] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-24'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(22, datetime.date(2025, 10, 24)); alias=default
[2025-09-30 23:48:04,608] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-24'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(22, datetime.date(2025, 10, 24)); alias=default
[2025-09-30 23:48:05,108] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-24'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 10, 24), 6); alias=default
[2025-09-30 23:48:05,216] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-24'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 10, 24), 6); alias=default
[2025-09-30 23:48:05,332] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-24'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 10, 24)); alias=default
[2025-09-30 23:48:05,448] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-24'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 10, 24)); alias=default
[2025-09-30 23:48:06,039] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-24'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 10, 24), 6); alias=default
[2025-09-30 23:48:06,149] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-24'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(24, datetime.date(2025, 10, 24), 6); alias=default
[2025-09-30 23:48:06,265] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-24'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(24, datetime.date(2025, 10, 24)); alias=default
[2025-09-30 23:48:06,379] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-24'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(24, datetime.date(2025, 10, 24)); alias=default
[2025-09-30 23:48:06,883] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-24'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 10, 24), 6); alias=default
[2025-09-30 23:48:06,996] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-24'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(25, datetime.date(2025, 10, 24), 6); alias=default
[2025-09-30 23:48:07,109] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-24'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(25, datetime.date(2025, 10, 24)); alias=default
[2025-09-30 23:48:07,220] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-24'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(25, datetime.date(2025, 10, 24)); alias=default
[2025-09-30 23:48:07,718] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:48:07,831] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-25'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 10, 25), 6); alias=default
[2025-09-30 23:48:07,931] DEBUG django.db.backends (0.093) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-25'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(21, datetime.date(2025, 10, 25), 6); alias=default
[2025-09-30 23:48:08,057] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-25'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(21, datetime.date(2025, 10, 25)); alias=default
[2025-09-30 23:48:08,171] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-25'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(21, datetime.date(2025, 10, 25)); alias=default
[2025-09-30 23:48:08,682] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-25'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 10, 25), 6); alias=default
[2025-09-30 23:48:08,794] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-25'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(22, datetime.date(2025, 10, 25), 6); alias=default
[2025-09-30 23:48:08,905] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-25'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(22, datetime.date(2025, 10, 25)); alias=default
[2025-09-30 23:48:09,015] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-25'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(22, datetime.date(2025, 10, 25)); alias=default
[2025-09-30 23:48:09,514] DEBUG django.db.backends (0.109) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-25'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 10, 25), 6); alias=default
[2025-09-30 23:48:09,625] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-25'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 10, 25), 6); alias=default
[2025-09-30 23:48:09,731] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-25'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 10, 25)); alias=default
[2025-09-30 23:48:09,853] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-25'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 10, 25)); alias=default
[2025-09-30 23:48:10,383] DEBUG django.db.backends (0.140) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-25'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 10, 25), 6); alias=default
[2025-09-30 23:48:10,482] DEBUG django.db.backends (0.094) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-25'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(24, datetime.date(2025, 10, 25), 6); alias=default
[2025-09-30 23:48:10,598] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-25'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(24, datetime.date(2025, 10, 25)); alias=default
[2025-09-30 23:48:10,718] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-25'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(24, datetime.date(2025, 10, 25)); alias=default
[2025-09-30 23:48:11,331] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-25'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 10, 25), 6); alias=default
[2025-09-30 23:48:11,447] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-25'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(25, datetime.date(2025, 10, 25), 6); alias=default
[2025-09-30 23:48:11,548] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-25'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(25, datetime.date(2025, 10, 25)); alias=default
[2025-09-30 23:48:11,664] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-25'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(25, datetime.date(2025, 10, 25)); alias=default
[2025-09-30 23:48:12,169] DEBUG django.db.backends (0.110) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:48:12,281] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-26'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 10, 26), 6); alias=default
[2025-09-30 23:48:12,394] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-26'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(21, datetime.date(2025, 10, 26), 6); alias=default
[2025-09-30 23:48:12,510] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-26'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(21, datetime.date(2025, 10, 26)); alias=default
[2025-09-30 23:48:12,621] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-26'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(21, datetime.date(2025, 10, 26)); alias=default
[2025-09-30 23:48:13,476] DEBUG django.db.backends (0.172) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-26'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 10, 26), 6); alias=default
[2025-09-30 23:48:13,719] DEBUG django.db.backends (0.250) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-26'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(22, datetime.date(2025, 10, 26), 6); alias=default
[2025-09-30 23:48:13,894] DEBUG django.db.backends (0.172) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-26'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(22, datetime.date(2025, 10, 26)); alias=default
[2025-09-30 23:48:14,065] DEBUG django.db.backends (0.172) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-26'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(22, datetime.date(2025, 10, 26)); alias=default
[2025-09-30 23:48:15,064] DEBUG django.db.backends (0.172) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-26'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 10, 26), 6); alias=default
[2025-09-30 23:48:15,185] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-26'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 10, 26), 6); alias=default
[2025-09-30 23:48:15,310] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-26'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 10, 26)); alias=default
[2025-09-30 23:48:15,513] DEBUG django.db.backends (0.203) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-26'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 10, 26)); alias=default
[2025-09-30 23:48:16,330] DEBUG django.db.backends (0.329) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-26'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 10, 26), 6); alias=default
[2025-09-30 23:48:16,547] DEBUG django.db.backends (0.218) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-26'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(24, datetime.date(2025, 10, 26), 6); alias=default
[2025-09-30 23:48:16,730] DEBUG django.db.backends (0.172) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-26'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(24, datetime.date(2025, 10, 26)); alias=default
[2025-09-30 23:48:16,948] DEBUG django.db.backends (0.219) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-26'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(24, datetime.date(2025, 10, 26)); alias=default
[2025-09-30 23:48:17,548] DEBUG django.db.backends (0.140) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-26'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 10, 26), 6); alias=default
[2025-09-30 23:48:17,776] DEBUG django.db.backends (0.219) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-26'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(25, datetime.date(2025, 10, 26), 6); alias=default
[2025-09-30 23:48:17,970] DEBUG django.db.backends (0.203) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-26'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(25, datetime.date(2025, 10, 26)); alias=default
[2025-09-30 23:48:18,177] DEBUG django.db.backends (0.203) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-26'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(25, datetime.date(2025, 10, 26)); alias=default
[2025-09-30 23:48:19,131] DEBUG django.db.backends (0.109) SELECT "scheduling_employee"."id", "scheduling_employee"."name", "scheduling_employee"."home_address", "scheduling_employee"."service_category_id" FROM "scheduling_employee" WHERE "scheduling_employee"."service_category_id" = 5; args=(5,); alias=default
[2025-09-30 23:48:19,253] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 21 AND "scheduling_booking"."date" = '2025-10-27'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 21, datetime.date(2025, 10, 27), 6); alias=default
[2025-09-30 23:48:19,364] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-27'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 22, datetime.date(2025, 10, 27), 6); alias=default
[2025-09-30 23:48:19,481] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-27'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(22, datetime.date(2025, 10, 27), 6); alias=default
[2025-09-30 23:48:19,591] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-27'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(22, datetime.date(2025, 10, 27)); alias=default
[2025-09-30 23:48:19,705] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 22 AND "scheduling_booking"."date" = '2025-10-27'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(22, datetime.date(2025, 10, 27)); alias=default
[2025-09-30 23:48:20,246] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-27'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 23, datetime.date(2025, 10, 27), 6); alias=default
[2025-09-30 23:48:20,347] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-27'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(23, datetime.date(2025, 10, 27), 6); alias=default
[2025-09-30 23:48:20,480] DEBUG django.db.backends (0.109) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-27'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(23, datetime.date(2025, 10, 27)); alias=default
[2025-09-30 23:48:20,594] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 23 AND "scheduling_booking"."date" = '2025-10-27'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(23, datetime.date(2025, 10, 27)); alias=default
[2025-09-30 23:48:21,103] DEBUG django.db.backends (0.125) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-27'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 24, datetime.date(2025, 10, 27), 6); alias=default
[2025-09-30 23:48:21,225] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-27'::date AND "scheduling_booking"."time_slot_id" = 6) ORDER BY "scheduling_booking"."time_slot_id" ASC LIMIT 1; args=(24, datetime.date(2025, 10, 27), 6); alias=default
[2025-09-30 23:48:21,338] DEBUG django.db.backends (0.110) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-27'::date) ORDER BY "scheduling_booking"."time_slot_id" DESC LIMIT 1; args=(24, datetime.date(2025, 10, 27)); alias=default
[2025-09-30 23:48:21,455] DEBUG django.db.backends (0.125) SELECT "scheduling_jobassignment"."id", "scheduling_jobassignment"."employee_id", "scheduling_jobassignment"."booking_id", "scheduling_jobassignment"."jobsite_address", "scheduling_booking"."id", "scheduling_booking"."customer_name", "scheduling_booking"."customer_address", "scheduling_booking"."date", "scheduling_booking"."time_slot_id", "scheduling_booking"."service_category_id", "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") INNER JOIN "scheduling_timeslot" ON ("scheduling_booking"."time_slot_id" = "scheduling_timeslot"."id") WHERE ("scheduling_jobassignment"."employee_id" = 24 AND "scheduling_booking"."date" = '2025-10-27'::date) ORDER BY "scheduling_booking"."time_slot_id" ASC; args=(24, datetime.date(2025, 10, 27)); alias=default
[2025-09-30 23:48:22,465] DEBUG django.db.backends (0.110) SELECT 1 AS "a" FROM "scheduling_jobassignment" INNER JOIN "scheduling_booking" ON ("scheduling_jobassignment"."booking_id" = "scheduling_booking"."id") WHERE ("scheduling_jobassignment"."employee_id" = 25 AND "scheduling_booking"."date" = '2025-10-27'::date AND "scheduling_booking"."time_slot_id" = 6) LIMIT 1; args=(Int4(1), 25, datetime.date(2025, 10, 27), 6); alias=default
[2025-09-30 23:48:22,687] DEBUG django.db.backends (0.234) SELECT "scheduling_timeslot"."id", "scheduling_timeslot"."label" FROM "scheduling_timeslot"; args=(); alias=default
[2025-09-30 23:48:23,229] DEBUG django.db.backends (0.203) SELECT "scheduling_servicecategory"."id", "scheduling_servicecategory"."name" FROM "scheduling_servicecategory"; args=(); alias=default
[2025-09-30 23:48:23,580] INFO django.server "GET /schedule/search/timeslot/?time_slot=6&service_category=5&customer_address=5806+Birchbrook+Dr%2C+Dallas%2C+TX+75206 HTTP/1.1" 200 46852
[2025-09-30 23:48:23,611] WARNING django.server "GET /static/images/grass_texture.jpg HTTP/1.1" 404 1831
